Type of vulnerability: Integer Overflow/Underflow
Cause of vulnerability: The `Vault._burn` function converts shares from `uint256` to `uint96` before burning, which can lead to an overflow if the shares exceed `type(uint96).max`.
Execution process: A malicious user deposits multiple times the value of `type(uint96).max` underlying assets into the Vault. They then call `Vault.withdraw()` with a higher value of assets to withdraw more than `type(uint96).max`. The contract only burns `type(uint96).max` shares, but transfers the total amount of assets they deposited, allowing the user to withdraw more assets than they should.
Vulnerable code: 
```solidity
function _burn(address account, uint256 amount) internal virtual {
    _burn(account, uint96(amount));
}
```