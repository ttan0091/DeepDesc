Type of vulnerability: Incorrect token allocation computation for tokens with decimals != 18
Cause of vulnerability: The computation of `tokenAllocated` does not correctly account for tokens with decimals other than 18, leading to incorrect token allocations when the floor price is not reached.
Execution process: When the floor price is not reached, the contract incorrectly calculates the `tokenAllocated` by using the token's decimals directly in the division, instead of scaling the WAVAX reserve to match the floor price's precision of 18.
Vulnerable code: `tokenAllocated = (wavaxReserve * 10**token.decimals()) / floorPrice;`