Type of vulnerability: Reentrancy
Cause of vulnerability: Lack of reentrancy guard allowing recursive calls to manipulate contract state before completing the initial function execution.
Execution process:
1. Attacker deposits 100 UST twice.
2. Attacker triggers a withdraw for one deposit.
3. Vault calls back to attacker's contract during withdrawal.
4. Attacker makes another deposit during the callback.
5. Vault calculates withdrawal amount based on manipulated state, leading to excess UST withdrawal.
Vulnerable code:
- `Vault.sol` line 565: Callback to attacker's contract.
- `Vault.sol` line 618: Calculation of UST to be withdrawn based on manipulated state.