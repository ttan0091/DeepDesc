Type of vulnerability: Arbitrage Opportunity and Flashloan Attack
Cause of vulnerability: Treating all tokens as equal value without considering their actual market prices.
Execution process: An attacker deposits a large amount of a token with lower market value, receives shares, and then withdraws a larger amount of a token with higher market value, exploiting the lack of slippage and price difference.
Vulnerable code: 
- Deposit function: `_shares=_shares.add(_amount);`
- Withdrawal function: `uint256_amount= (balance().mul(_shares)).div(totalSupply());`