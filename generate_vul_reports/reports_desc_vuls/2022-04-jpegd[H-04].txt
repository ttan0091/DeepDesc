Type of vulnerability: Reentrancy
Cause of vulnerability: The balance is cached before the `atoken.transferFrom` call, which can allow an attacker to exploit the contract if the token is an ERC777 token that gives control back to the sender during the transfer.
Execution process: An attacker splits a deposit of 1000 tokens into two 500 token deposits. During the first 500 token deposit, the attacker uses reentrancy to perform a second 500 token deposit, causing the contract to mint more shares than intended. The attacker then withdraws the excess shares for a profit.
Vulnerable code: `yVault.sol#L144-L145`