Type of vulnerability: Staking Manipulation
Cause of vulnerability: Rounding issues in staking factor calculation and stake at risk rounding down
Execution process: A malicious user stakes a minimal amount (1 wei) to achieve zero stake at risk in case of a loss, but still earns the same reward points as a fair user staking a larger amount in case of a win.
Vulnerable code: 
```solidity
function _getStakingFactor(
    uint256 tokenId,
    uint256 stakeAtRisk
)
    private
    view
    returns (uint256)
{
    uint256 stakingFactor_ = FixedPointMathLib.sqrt(
        (amountStaked[tokenId] + stakeAtRisk) / 10**18
    );
    if (stakingFactor_ == 0) {
        stakingFactor_ = 1;
    }
    return stakingFactor_;
}
```