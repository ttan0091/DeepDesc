Type of vulnerability: Delegation Exploit
Cause of vulnerability: Inability to enforce lock commitments when a delegator can be reliably blocked.
Execution process: A user creates two accounts, one with a large token balance (Rider) and another with a minimal balance (Horse). Rider delegates its voting power to Horse, which extends its lock period for maximum voting power. When the user wants to retrieve their tokens, they get the Rider account blocked, which forces an undelegation, allowing Rider to withdraw its tokens.
Vulnerable code: `forceUndelegate()` function in the contract, which does not enforce the lock period of the delegator, allowing the delegator to withdraw tokens prematurely.