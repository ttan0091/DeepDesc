Type of vulnerability: Incomplete implementation of transfer restrictions

Cause of vulnerability: The `FighterFarm` contract inherits from OpenZeppelin's `ERC721` contract and implements restrictions on the transferability of fighters in `transferFrom()` and `safeTransferFrom()`, but fails to override the `safeTransferFrom(…, data)` function, which allows bypassing the transfer restrictions.

Execution process: A player can call the `safeTransferFrom(…, data)` function inherited from the `ERC721` contract, which is not overridden in the `FighterFarm` contract. This allows the player to transfer a locked fighter to another address, circumventing the transferability checks implemented in `_ableToTransfer()`.

Vulnerable code: 
```solidity
function safeTransferFrom(
    address from,
    address to,
    uint256 tokenId,
    bytes memory data
) public virtual override {
    require(_isApprovedOrOwner(_msgSender(), tokenId), "ERC721: transfer caller is not owner nor approved");
    _safeTransfer(from, to, tokenId, data);
}
```
This function is inherited from OpenZeppelin's `ERC721` contract and is not overridden in the `FighterFarm` contract, allowing the bypass of transfer restrictions.