Type of vulnerability: Access Control Vulnerability
Cause of vulnerability: Lack of proper access control in the `addLiquidity()` function, allowing any caller to add liquidity on behalf of a router address.
Execution process: An attacker calls the `addLiquidity()` function, specifying a router address and an asset amount. If the router has given max approval to the contract and has the specified asset amount available, the contract transfers the ERC20 tokens from the router address to the contract, increasing the router's liquidity without proper authorization.
Vulnerable code: TransactionManager.sol#L88-L98