Type of vulnerability: Reentrancy or Logic Error

Cause of vulnerability: The `Buyout` contract does not correctly account for the fractions deposited by the proposer when starting a buyout. This allows an attacker to start a buyout with a target price of zero, effectively stealing fractions deposited by others into the proposal.

Execution process:
1. Bob starts a proposal and deposits 3000 fractions.
2. Alice immediately starts another proposal with a target price of zero, deposits zero fractions, and sends minimal ether.
3. Since the price is larger than the target price, Alice commits the proposal.
4. The buyout is started, but it incorrectly includes the 3000 fractions from Bob.
5. Alice buys the 3000 fractions from the buyout for free.

Vulnerable code:
- The `propose` function in the `Migration` contract where fractions are deposited.
- The `commit` function in the `Migration` contract where the buyout is started without correctly accounting for the fractions deposited by the proposer.

Relevant lines of code:
- https://github.com/code-423n4/2022-07-fractional/blob/8f2697ae727c60c93ea47276f8fa128369abfe51/src/modules/Migration.sol#L210
- https://github.com/code-423n4/2022-07-fractional/blob/8f2697ae727c60c93ea47276f8fa128369abfe51/src/modules/Buyout.sol#L73