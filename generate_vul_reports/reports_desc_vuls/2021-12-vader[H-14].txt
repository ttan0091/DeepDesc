Type of vulnerability: Denial of Service (DoS)
Cause of vulnerability: Initial setting of total liquidity to a very low number relative to the foreign deposit, leading to high rounding errors and inability for new liquidity providers to mint liquidity tokens.
Execution process: A malicious actor deposits a minimal amount of native token and a significant amount of foreign token, setting total liquidity to an extremely low value. This causes subsequent liquidity providers to either fail to mint liquidity tokens or receive far fewer tokens than expected due to high rounding errors, effectively preventing further liquidity provision and causing the token pair to become unusable.
Vulnerable code: `mintFungible` function in `VaderPoolV2.sol` where `totalLiquidityUnits` is set to `nativeDeposit`.