Type of vulnerability: Incorrect Formula Usage
Cause of vulnerability: The function `Market.computeClosingFactor()` incorrectly calculates the amount of assets to be liquidated due to the use of `borrowPart` instead of the corresponding elastic amount and improper handling of decimals.
Execution process: The function `BigBang._liquidateUser()` calls `BigBang._updateBorrowAndCollateralShare()`, which in turn uses the incorrect value from `Market.computeClosingFactor()`, leading to an incorrect update of the user's position.
Vulnerable code: The implementation of `computeClosingFactor()` in the `Market` contract, which incorrectly uses `borrowPart` and involves multiplication with `borrowPartDecimals` and `collateralPartDecimals` without proper conversion or consideration of their potential differences.