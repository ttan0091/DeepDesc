Type of vulnerability: Front-run Attack
Cause of vulnerability: The function `collectEarnings()` does not include unharvested yields in the `tvl()` calculation, allowing an attacker to front-run the transaction and steal pending yields.
Execution process: An attacker observes a pending transaction to call `collectEarnings()`, sends a deposit transaction with a higher gas price to deposit assets and take a share of the pool, then withdraws the assets including the stolen yields.
Vulnerable code: 
```solidity
function collectEarnings() public onlyStrategy {
    // Code to collect fees and reinvest
}

function tvl() public view returns (uint256) {
    // Code to calculate total value locked without considering unharvested yields
}
```