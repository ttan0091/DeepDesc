Type of vulnerability: Self-delegation hijacking
Cause of vulnerability: The contract allows contributors to specify a delegate when making a contribution, which can overwrite the self-delegation of another user if they contribute on behalf of that user.
Execution process: An attacker contributes a minimal amount on behalf of a self-delegated user, specifying themselves as the delegate, thereby hijacking the user's self-delegation.
Vulnerable code: 
```solidity
function _processContribution(address payable contributor, address delegate, uint96 amount) internal returns (uint96 votingPower) {
    address oldDelegate = delegationsByContributor[contributor];
    if (msg.sender == contributor || oldDelegate == address(0)) {
        // Update delegate.
        delegationsByContributor[contributor] = delegate;
    } else {
        // Prevent changing another's delegate if already delegated.
        delegate = oldDelegate;
    }
}
```