Type of vulnerability: Integer Overflow/Underflow
Cause of vulnerability: Manipulation of share price to an extremely low value, causing arithmetic overflow in the `sharesToTokenAmount` function.
Execution process: An attacker manipulates the share price by adding and removing liquidity in a way that results in a very low `totalReserve` and a very high `totalSharesMinted`. This manipulation causes the `sharesToTokenAmount` function to overflow when calculating the token amount for a given number of shares, leading to a transaction revert and freezing of users' funds.
Vulnerable code: 
```solidity
function sharesToTokenAmount(uint256 _shares, address _tokenAddress) public view returns (uint256) {
    return (_shares * totalReserve[_tokenAddress]) / totalSharesMinted[_tokenAddress];
}
```