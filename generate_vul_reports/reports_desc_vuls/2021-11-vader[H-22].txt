Type of vulnerability: Front-running Attack
Cause of vulnerability: Lack of slippage control in the `mintSynth()` and `burnSynth()` functions
Execution process: An attacker can monitor the mempool for transactions calling `mintSynth()` or `burnSynth()` and submit a transaction with a higher gas price to front-run the original transaction, causing the original transaction to execute at an unfavorable price due to the price impact created by the attacker's transaction.
Vulnerable code: `mintSynth()` and `burnSynth()` functions in the VaderPoolV2.sol contract, as referenced in the provided GitHub links.