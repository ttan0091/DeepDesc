Type of vulnerability: Incorrect Calculation of Withdraw Reserve
Cause of vulnerability: The condition `if (totalAssets() > expected)` incorrectly sets `s.withdrawReserve` to 0 when `totalAssets() <= expected`, leading to loss of funds for users.
Execution process: When `totalAssets() <= expected`, the function incorrectly sets `s.withdrawReserve` to 0, causing no funds to be sent to the `WithdrawProxy`, resulting in depositors losing their funds.
Vulnerable code: 
```solidity
unchecked {
    if (totalAssets() > expected) {
        s.withdrawReserve = (totalAssets() - expected).mulWadDown(s.liquidationWithdrawRatio).safeCastTo88();
    } else {
        s.withdrawReserve = 0;
    }
}
```