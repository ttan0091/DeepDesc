Type of vulnerability: Share Price Manipulation
Cause of vulnerability: Initial share price manipulation due to rounding errors in share calculation when totalSupply is zero.
Execution process: An attacker deposits a minimal amount to receive a share, then manipulates the share price by depositing a large amount, causing subsequent depositors to receive fewer shares than expected due to rounding errors, enabling the attacker to redeem more assets than initially deposited.
Vulnerable code: 
```solidity
function previewDeposit(uint256 assets) public view virtual returns (uint256) {
    return convertToShares(assets);
}

function convertToShares(uint256 assets) public view virtual returns (uint256) {
    uint256 supply = totalSupply; // Saves an extra SLOAD if totalSupply is non-zero.
    return supply == 0 ? assets : assets.mulDivDown(supply, totalAssets());
}
```