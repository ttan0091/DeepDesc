Type of vulnerability: Unauthorized Revenue Claim
Cause of vulnerability: Lack of validation for the existence of the revenue contract before processing the claim.
Execution process: An attacker calls `claimRevenue` with a non-existing revenue contract address, exploiting the absence of checks to divert all tokens to the treasury instead of the intended escrow.
Vulnerable code: 
```solidity
if(self.settings[revenueContract].claimFunction == bytes4(0)) {
    // push payments
    // claimed = total balance - already accounted for balance
    claimed = existingBalance - self.escrowed[token];
    //@audit Rebasing tokens
    // underflow revert ensures we have more tokens than we started with and actually claimed revenue
}
uint256 escrowedAmount = claimed * self.settings[revenueContract].ownerSplit / 100;
```