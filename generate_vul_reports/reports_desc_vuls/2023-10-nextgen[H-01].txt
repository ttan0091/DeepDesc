Type of vulnerability: Reentrancy
Cause of vulnerability: Absence of the Check Effects Interactions (CEI) pattern
Execution process: An attacker calls `MinterContract::mint` with a malicious contract as the receiver. The malicious contract executes a crafted `onERC721Received()`. `MinterContract::mint` invokes `NextGenCore::mint`, which uses `_safeMint()` internally. `_safeMint()` calls `_recipient.onERC721Received()`, leading to the minting of the complete collection supply.
Vulnerable code: 
```solidity
// Minting logic is here
if(phase==1) {
    tokensMintedAllowlistAddress[_collectionID][_mintingAddress]++;
} else {
    tokensMintedPerAddress[_collectionID][_mintingAddress]++;
}
```