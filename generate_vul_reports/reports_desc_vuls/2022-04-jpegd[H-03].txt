Type of vulnerability: Reentrancy
Cause of vulnerability: Using outdated versions of OpenZeppelin contracts that have a known reentrancy vulnerability in the initializer modifier.
Execution process: An attacker could exploit the reentrancy vulnerability during the initialization phase of the contract, potentially allowing unauthorized access or manipulation of contract state before it is fully initialized.
Vulnerable code: 
- contracts/helpers/CryptoPunksHelper.sol:19: function initialize(address punksAddress) external initializer {
- contracts/helpers/EtherRocksHelper.sol:19: function initialize(address rocksAddress) external initializer {
- contracts/staking/JPEGStaking.sol:21: function initialize(IERC20Upgradeable _jpeg) external initializer {
- contracts/vaults/FungibleAssetVaultForDAO.sol:71: ) external initializer {
- contracts/vaults/NFTVault.sol:149: ) external initializer {