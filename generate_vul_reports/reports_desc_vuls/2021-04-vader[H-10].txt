Type of vulnerability: Access Control and Flash Loan Attack

Cause of vulnerability: Lack of proper access control and insufficient checks on token anchoring, allowing manipulation through flash loans.

Execution process: An attacker can call `TheRouter.listAnchor` function to add a token as an anchor by first setting the `isAnchor` status through `Pools.addLiquidity` without providing actual liquidity. Using flash loans, the attacker can manipulate liquidity to replace an existing anchor, thereby controlling which pools receive rewards.

Vulnerable code: `TheRouter.listAnchor` function with the check `require(iPOOLS(POOLS).isAnchor(token));` and the `replaceAnchor` function, along with the `addLiquidity` function where `_isAnchor[token] = true;` is set without further checks.