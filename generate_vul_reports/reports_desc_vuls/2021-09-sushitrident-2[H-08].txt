Type of vulnerability: Incorrect boundary condition in liquidity management
Cause of vulnerability: The contract does not correctly handle the case where the current price is exactly at the lower price range boundary when adding or removing liquidity.
Execution process: When the current price is exactly equal to `priceLower`, the contract fails to correctly process the liquidity addition or removal, leading to incorrect swap amounts and potential loss of funds for users.
Vulnerable code: `if (priceLower < currentPrice && currentPrice < priceUpper)`