Type of vulnerability: Incorrect Calculation of Averaged Prices

Cause of vulnerability: The `consult()` function incorrectly sums the native and USD denominated pairs before multiplying, leading to an incorrect average price calculation.

Execution process: When querying the price of USDV, the function sums up the prices of USDV denominated in terms of other tokens (like SUSHI and UNISWAP) and their respective USD prices. It then incorrectly multiplies these sums, rather than multiplying each pair's components and then summing, which leads to an incorrect result.

Vulnerable code: The original implementation of the `consult()` function in the `TwapOracle.sol` contract, specifically the part where it calculates the result as `((SUSHI/USD + UNISWAP/USD) * token.decimals()) / (USDV/SUSHI + USDV/UNISWAP)`.