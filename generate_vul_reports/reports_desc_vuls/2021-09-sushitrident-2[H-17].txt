Type of vulnerability: Incorrect Initialization and Calculation of Fee Growth
Cause of vulnerability: Misunderstanding and incorrect use of `nearestTick` as the reference point for fee growth calculations instead of the `poolTick`.
Execution process: When a position is modified and either tick is considered as `nearestTick`, it is treated as Case 1 when it should sometimes be treated as Case 2, leading to incorrect fee growth calculations.
Vulnerable code: The initialization and flipping logic of `feeGrowthOutside` in the `Tick.cross()` function and the handling of boundary cases in the pool contract, specifically the line `state.tick = zeroForOne ? step.tickNext - 1 : step.tickNext;`.