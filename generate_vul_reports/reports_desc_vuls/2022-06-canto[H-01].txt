Type of vulnerability: Access Control Vulnerability
Cause of vulnerability: Lack of access control in the `updateBaseRate` function
Execution process: Any user can call the `updateBaseRate` function after the `updateFrequency` (24 hours) has passed, setting the `baseRatePerYear` to any value they choose.
Vulnerable code: 
```solidity
function updateBaseRate(uint newBaseRatePerYear) public {
    // check the current block number
    uint blockNumber = block.number;
    uint deltaBlocks = blockNumber.sub(lastUpdateBlock);
    if (deltaBlocks > updateFrequency) {
        // pass in a base rate per year
        baseRatePerYear = newBaseRatePerYear;
        lastUpdateBlock = blockNumber;
        emit NewInterestParams(baseRatePerYear);
    }
}
```