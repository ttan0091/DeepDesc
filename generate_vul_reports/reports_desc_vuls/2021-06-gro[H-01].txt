Type of vulnerability: Integer Underflow
Cause of vulnerability: Implicit typecasting of unsigned integers to signed integers without proper handling of potential underflows.
Execution process: When performing arithmetic operations between unsigned integers and then casting the result to a signed integer, if the operation results in a value that would be negative for signed integers, it causes an underflow, resulting in a very large positive number due to the wrapping behavior of unsigned integers.
Vulnerable code: 
1. `int256 delta = int256(unifiedAssets[i] - unifiedTotalAssets.mul(targetPercents[i]).div(PERCENTAGE_DECIMAL_FACTOR));` from `Exposure.sol` L178
2. `emitLogNewGtokenChange(pwrd, int256(-dollarAmount));` from `PnL.sol` L112
3. `_ratio = abs(int256(_ratio - lastRatio[i]));` from `Buoy3Pool.sol` L87