Type of vulnerability: Accounting and Logic Error
Cause of vulnerability: Incorrect handling of user's borrowed shares during liquidation process
Execution process: A borrower with bad debt can be repeatedly liquidated with `_sharesToLiquidate` set to 0, reducing the pair totals and causing accounting issues
Vulnerable code: 
```solidity
// After this line in the liquidateClean function
https://github.com/code-423n4/2022-08-frax/blob/c4189a3a98b38c8c962c5ea72f1a322fbc2ae45f/src/contracts/FraxlendPairCore.sol#L1012
// _sharesToLiquidate += _sharesToAdjust; should be added to correct the issue
```