Type of vulnerability: Reentrancy or Logic Error
Cause of vulnerability: The contract allows a drip to be created and removed in a way that the receiver can still squeeze the drip even after the sender has withdrawn their balance.
Execution process: 
1. Sender creates a drip that starts at 0th second and lasts for 2 seconds at the 5th second of the cycle.
2. Sender removes this drip at the 6th second.
3. Receiver squeezes from this drip, receiving the full amount even though the sender has withdrawn all of their balance.
Vulnerable code: 
- https://github.com/code-423n4/2023-01-drips/blob/main/src/Drips.sol#L569
- https://github.com/code-423n4/2023-01-drips/blob/main/src/Drips.sol#L425-L430
- https://github.com/code-423n4/2023-01-drips/blob/main/src/Drips.sol#L490-L496