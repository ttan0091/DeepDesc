Type of vulnerability: Missing unwrapping of native token
Cause of vulnerability: The `RootBridgeAgent.sweep()` function attempts to transfer accumulated fees using `SafeTransferLib.safeTransferETH()` without first unwrapping the fees from the `wrappedNativeToken`.
Execution process: When the `sweep()` function is called, it tries to transfer the accumulated fees in the form of native ETH using `safeTransferETH()`. However, since the fees are still in the form of wrapped native token (WETH) and not unwrapped to ETH, the transfer fails, causing the fees to be stuck in the `RootBridgeAgent`.
Vulnerable code: The vulnerable code is in the `sweep()` function of the `RootBridgeAgent` contract, where it attempts to transfer the accumulated fees without unwrapping them from the `wrappedNativeToken`. The specific line of code where the unwrapping is missing is not provided in the report, but it is indicated by the recommended mitigation step to add `wrappedNativeToken.withdraw(_accumulatedFees);` before the ETH transfer.