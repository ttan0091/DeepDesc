Type of vulnerability: Signature Validation Bypass
Cause of vulnerability: Insufficient validation of the signer's identity and the signature structure
Execution process: A hacker crafts a signature using a controlled signer that always returns a valid EIP1271 magic value, bypassing the signature validation and allowing arbitrary transactions.
Vulnerable code: 
```solidity
function checkSignatures(bytes32 dataHash, bytes memory data, bytes memory signatures) public view virtual {
    if(v == 0) {
        _signer = address(uint160(uint256(r)));
        require(uint256(s) >= uint256(1) * 65, "BSA021");
        require(uint256(s) + 32 <= signatures.length, "BSA022");
        assembly {
            contractSignatureLen := mload(add(add(signatures, s), 0x20))
        }
        require(uint256(s) + 32 + contractSignatureLen <= signatures.length, "BSA023");
        require(ISignatureValidator(_signer).isValidSignature(data, contractSignature) == EIP1271_MAGIC_VALUE, "BSA024");
    }
}
```