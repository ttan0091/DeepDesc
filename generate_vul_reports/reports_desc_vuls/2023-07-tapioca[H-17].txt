Type of vulnerability: Denial of Service (DoS)
Cause of vulnerability: Lack of minimum gas limit check in the `lzSend` function, allowing attackers to specify arbitrary low gas values.
Execution process: An attacker calls `triggerSendFrom` and specifies a very low gas amount in `airdropAdapterParams`. The Relayer delivers the transaction with the specified low gas, causing the transaction to fail within the `lzReceive` function, thereby blocking the message pathway and resulting in `StoredPayload`.
Vulnerable code: The vulnerable code is in the `lzSend` function implementations across various contracts, such as:
- `TapiocaOFTlzSend` at various lines like [L101](https://github.com/Tapioca-DAO/tapiocaz-audit/blob/master/contracts/tOFT/modules/BaseTOFTOptionsModule.sol#L101)
- `sendFrom` at various lines like [L142](https://github.com/Tapioca-DAO/tapiocaz-audit/blob/master/contracts/tOFT/modules/BaseTOFTOptionsModule.sol#L142)
- `BaseUSDOlzSend` at various lines like [L41](https://github.com/Tapioca-DAO/tapioca-bar-audit/blob/master/contracts/usd0/modules/USDOOptionsModule.sol#L41)
- `BaseTapOFTlzSend` at various lines like [L108](https://github.com/Tapioca-DAO/tap-token-audit/blob/main/contracts/tokens/BaseTapOFT.sol#L108)
- `MagnetarV2` at [L268](https://github.com/Tapioca-DAO/tapioca-periph-audit/blob/main/contracts/Magnetar/MagnetarV2.sol#L268)
- `MagnetarMarketModule` at [L725](https://github.com/Tapioca-DAO/tapioca-periph-audit/blob/main/contracts/Magnetar/modules/MagnetarMarketModule.sol#L725)