Type of vulnerability: Logic Error
Cause of vulnerability: The contract fails to handle the case where the asset address is the zero address (ETH), causing the `emergencyWithdraw` function to revert and preventing the withdrawal of ETH in an emergency.
Execution process: When the `emergencyWithdraw` function is called with `_asset` set to the zero address, the call to `IERC20(_asset).balanceOf(address(this))` reverts because the zero address is not a valid ERC20 contract address. This prevents the owner from withdrawing ETH.
Vulnerable code:
```solidity
function emergencyWithdraw(address _asset, address payable _wallet) external onlyOwner returns (uint256 received) {
    require(_wallet != address(0), 'cant burn');
    uint256 amount = IERC20(_asset).balanceOf(address(this));
    IERC20(_asset).safeTransfer(_wallet, received);
    received = amount;
}
```