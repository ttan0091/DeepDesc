Type of vulnerability: Immediate Liquidation Risk
Cause of vulnerability: Lack of gap between maximal Loan-to-Value (LTV) and liquidation LTV, leading to immediate liquidation upon reaching maximal debt.
Execution process: A user takes the maximal debt allowed by the protocol, which immediately triggers the liquidation condition due to the identical maximal and liquidation LTVs, resulting in immediate liquidation without any buffer for price fluctuations or opportunity to add collateral or reduce debt.
Vulnerable code: 
1. `if(newDebt > max) revert IPaprController.ExceedsMaxDebt(newDebt, max);` (PaprController.sol#L471)
2. `if(info.debt < _maxDebt(oraclePrice * info.count, cachedTarget)) { revert IPaprController.NotLiquidatable(); }` (PaprController.sol#L317)
3. `function _maxDebt(uint256 totalCollateraValue, uint256 cachedTarget) internal view returns(uint256) { uint256 maxLoanUnderlying = totalCollateraValue * maxLTV; return maxLoanUnderlying / cachedTarget; }` (PaprController.sol#L556-L559)