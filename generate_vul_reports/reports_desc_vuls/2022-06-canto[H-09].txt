Type of vulnerability: Incorrect totalSupply Calculation
Cause of vulnerability: Misuse of the balanceOf mapping instead of the native balance function to compute totalSupply.
Execution process: When a user transfers ETH to the WETH contract and calls totalSupply, the function incorrectly uses the balanceOf mapping, which does not reflect the actual balance of the contract, leading to totalSupply returning zero.
Vulnerable code: `function totalSupply() public view returns (uint) { return balanceOf[address(this)]; }`