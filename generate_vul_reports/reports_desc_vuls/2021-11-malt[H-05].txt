Type of vulnerability: Accounting/Logic Error
Cause of vulnerability: Incorrect state update in the auction when applying profit penalties
Execution process: A user can exploit the vulnerability by calling `exitEarly` multiple times to increase the ratio of `userMaltPurchased / userCommitment`, thereby claiming more malt with less commitment and potentially having leftover commitment to claim arbitrage.
Vulnerable code: `auction.amendAccountParticipation()` and `_calculateMaltRequiredForExit` function where `uint256 maltQuantity = userMaltPurchased.mul(amount).div(userCommitment);` is used.