Type of vulnerability: Denial of Service (DoS)
Cause of vulnerability: Unlimited and inexpensive zero-amount withdrawal submissions can clog the withdrawal queue, making it prohibitively expensive to process legitimate withdrawals.
Execution process: An attacker submits a large number of zero-amount withdrawal requests, filling the withdrawal queue. This forces subsequent legitimate withdrawals to incur high gas costs to process the attacker's requests first, potentially locking funds if the governance lacks sufficient funds to cover the gas costs.
Vulnerable code: `function withdraw(uint amount) external {require(amount >= 10 ** 6);burn(amount);withdrawals.push(Withdrawal(msg.sender, amount));}`