Type of vulnerability: Precision Loss
Cause of vulnerability: Large values of `totalSharesStaked` causing division results to be rounded down to zero due to insufficient precision in calculations.
Execution process: When a user adds liquidity and mints shares, the `mintedSharesAmount` can become very large. When this large amount is used in the calculation of `accTokenPerShare`, the division by `totalSharesStaked` results in precision loss, leading to zero rewards for users.
Vulnerable code: 
```solidity
accumulator = (accumulator * ACC_TOKEN_PRECISION) / totalSharesStaked[_baseToken];
```