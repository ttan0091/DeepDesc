Type of vulnerability: Incorrect Reserve Update
Cause of vulnerability: The `burn` function only updates the reserves by decreasing it by the fees of the amounts, not by the actual amounts being burned.
Execution process: When the `burn` function is called, it sends out `amount0` and `amount1` tokens but only decreases the reserves by `amount0fees` and `amount1fees`, leading to incorrect reserve values.
Vulnerable code: 
```solidity
unchecked {
    // @audit decreases by fees only, not by amount0/amount1
    reserve0 -= uint128(amount0fees);
    reserve1 -= uint128(amount1fees);
}
```