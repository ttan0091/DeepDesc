Type of vulnerability: Token Loss
Cause of vulnerability: Incorrect handling of token transfers during liquidity removal
Execution process: When a member calls `removeLiquiditySingle()` with `toBASE=true`, the LP tokens are transferred to the Pool to withdraw SPARTA and TOKENs. The TOKENs are then sent back to the Pool to convert to SPARTA, which is directly transferred to the member from the Pool. However, the original SPARTA tokens from the member are left in the Router instead of being returned to the member.
Vulnerable code: The issue arises in the handling of token transfers after the conversion of TOKENs to SPARTA within the `removeLiquiditySingle()` function, specifically where the original SPARTA tokens are not transferred back to the member.