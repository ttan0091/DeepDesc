Type of vulnerability: Fee Calculation Mismanagement
Cause of vulnerability: Incorrect updating of `highWaterMark` during deposit, withdraw, and mint operations, which disrupts the tracking of yield progress and prevents accurate fee accrual.
Execution process: When a user performs a deposit, withdraw, or mint operation, the `syncFeeCheckpoint` modifier updates the `highWaterMark` to the current asset amount for 1e18 shares. This update prevents the protocol from accurately tracking the yield progress since the last fee accrual, potentially allowing a user to front-run the fee collection by triggering a `highWaterMark` update.
Vulnerable code: 
```solidity
modifier syncFeeCheckpoint() {
    _;
    highWaterMark = convertToAssets(1e18);
}
```