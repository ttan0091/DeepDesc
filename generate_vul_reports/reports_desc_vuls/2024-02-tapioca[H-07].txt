Type of vulnerability: Incorrect Math Calculation

Cause of vulnerability: The calculation of the `share` variable in the `MagnetarOptionModule.sol` contract is incorrectly rounded down, leading to an inaccurate representation of the shares to be removed from the Singularity contract. This discrepancy becomes critical when interest accrues, as the total assets in Singularity change, affecting the `fraction` calculation.

Execution process: The vulnerability is triggered when the `singularity_.removeAsset` function is called with the `share` value calculated using `yieldBox_.toShare`. This `share` value does not correctly account for the accrued interest in the Singularity contract, leading to an incorrect `fraction` calculation. As a result, the function will fail to work correctly once interest has been accrued.

Vulnerable code:
```solidity
uint256 share = yieldBox_.toShare(_assetId, _removeAmount, false);
singularity_.removeAsset(data.user, removeAssetTo, share);
```
The above code snippet from `MagnetarOptionModule.sol` is vulnerable due to the incorrect calculation of `share` using `yieldBox_.toShare`, which does not properly account for the accrued interest in the Singularity contract.