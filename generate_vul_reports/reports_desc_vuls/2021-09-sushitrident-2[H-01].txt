Type of vulnerability: Unsafe type casting
Cause of vulnerability: Unsafe cast of a `uint128` type to a `signed integer`
Execution process: An attacker chooses `amount = 2**128 - 1`, which is interpreted as `0xFFFFFFFFF... = -1` as a signed integer. This results in `-(-1) = 1`, adding 1 liquidity unit to the position, allowing the attacker to mint LP tokens for free and redeem large amounts of token0/1.
Vulnerable code: `(uint256 amount0fees, uint256 amount1fees) = _updatePosition(msg.sender, lower, upper, -int128(amount));`