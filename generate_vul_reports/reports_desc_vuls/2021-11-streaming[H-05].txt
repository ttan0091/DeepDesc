Type of vulnerability: Incentive Theft
Cause of vulnerability: Arbitrary contract calls can be made before incentives are created, allowing for pre-approval of token allowances.
Execution process: A malicious actor uses the `arbitraryCall()` function to set an allowance on a potential incentive token before any user creates an incentive with that token. Once an incentive is created with the pre-approved token, the malicious actor can call `transferFrom` to withdraw the tokens.
Vulnerable code: `TheLocke.arbitraryCall()` function in the Solidity contract.