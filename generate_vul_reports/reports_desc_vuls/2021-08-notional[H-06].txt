Type of vulnerability: Non-standard compliant token handling
Cause of vulnerability: Incorrect handling of tokens that do not return a boolean value from the `transfer` function
Execution process: When `TokenHandler.safeTransferOut` is called with a non-standard compliant token like USDT, the `token.transfer(account, amount)` call reverts because the token does not return a boolean value, which is expected by the `IERC20.transfer` function.
Vulnerable code: `token.transfer(account, amount)` within `TokenHandler.safeTransferOut`