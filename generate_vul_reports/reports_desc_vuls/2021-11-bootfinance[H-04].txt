Type of vulnerability: Inadequate Swap Handling Across Target Price
Cause of vulnerability: The swap function does not split trades when they cross the target price, leading to the use of only one amplifier value for the entire trade.
Execution process: When a trade crosses the target price, the function should split the trade into two parts, using the first amplifier value up to the target price and then the second amplifier value for the remainder. However, the function incorrectly uses only the new amplifier value for the entire trade.
Vulnerable code: `SwapUtils.swap / _calculateSwap` function, specifically the `getYC` step 5:
```solidity
// 5. Check if we switched A's during the swap
if(aNew==a){
    // We have used the correct A
    return y;
} else {
    // We have switched A's, do it again with the new A
    return getY(self, tokenIndexFrom, tokenIndexTo, x, xp, aNew, d);
}
```