Type of vulnerability: Unchecked Token Existence

Cause of vulnerability: The Solmate's SafeTransferLib library used in the contract does not check if the token address has contract code, allowing transfers to succeed even if the token does not exist.

Execution process: An attacker creates vaults for non-existing ERC20 tokens with fake balances. Later, when these tokens are deployed on the same addresses across different networks, the attacker can withdraw real tokens from users who deposit into these vaults.

Vulnerable code: 
```solidity
function createVault(uint256 tokenIdOrAmount, address token, ...) external returns (uint256 vaultId) {
    ...
    vault.tokenType == TokenType.ERC721 ? ERC721(vault.token).transferFrom(msg.sender, address(this), vault.tokenIdOrAmount) : ERC20(vault.token).safeTransferFrom(msg.sender, address(this), vault.tokenIdOrAmount);
}
```