Type of vulnerability: Incorrect Initial Liquidity Provision
Cause of vulnerability: The initial liquidity provision does not account for token decimals and values, leading to economically unjustifiable initial liquidity requirements.
Execution process: When the first liquidity provider attempts to mint tokens, the amount required is incorrectly calculated based on a fixed ratio that does not consider the actual value or decimals of the tokens. This results in requiring an excessive amount of tokens, especially for tokens with fewer decimals, leading to economically unviable pool initialization.
Vulnerable code: `uint120 amountIn = reserve != 0 ? uint120(_mul(ratio, reserve)) : ratio;`