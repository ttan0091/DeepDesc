Type of vulnerability: Integer Overflow/Underflow
Cause of vulnerability: The use of uint128 to store virtual rewards, which can exceed the maximum value representable by uint128 due to large calculations involving total rewards and shares.
Execution process: The first depositor manipulates the initial ratio of rewards to shares by donating a large amount of tokens, causing the virtual rewards calculation to overflow, leading to incorrect reward computations for subsequent users.
Vulnerable code: 
```solidity
user.virtualRewards += uint128(virtualRewardsToAdd);
totalRewards[poolID] += uint128(virtualRewardsToAdd);
```