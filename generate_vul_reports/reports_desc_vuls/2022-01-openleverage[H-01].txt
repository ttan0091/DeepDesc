Type of vulnerability: Insecure Transfer Method
Cause of vulnerability: Use of `payable.transfer()` with a hardcoded gas limit that can fail when the recipient is a smart contract.
Execution process: When the `doTransferOut` function in OpenLevV1Lib and LPool contracts calls `payable.transfer()`, if the recipient is a smart contract that either does not implement a payable fallback function or exceeds the 2300 gas limit, the transfer fails, leading to undelivered native tokens and potential freezing of user funds.
Vulnerable code: 
- OpenLevV1Lib.doTransferOut: https://github.com/code-423n4/2022-01-openleverage/blob/main/openleverage-contracts/contracts/OpenLevV1Lib.sol#L253
- LPool.doTransferOut: https://github.com/code-423n4/2022-01-openleverage/blob/main/openleverage-contracts/contracts/liquidity/LPool.sol#L297