Type of vulnerability: Arithmetic Overflow/Underflow
Cause of vulnerability: The `_pointsPerUnit` can be manipulated by a malicious early user to a very large value, causing arithmetic overflow in future operations.
Execution process: A malicious user locks a small amount of XDEFI (1 wei) and then sends a large amount of XDEFI to the contract, causing `_pointsPerUnit` to become extremely large. This prevents future users from locking or unlocking due to arithmetic overflow.
Vulnerable code: `_pointsPerUnit += ((newXDEFI * _pointsMultiplier) / totalUnitsCached);`