Type of vulnerability: Accounting Error
Cause of vulnerability: The `Lock.extendLock` function does not update the `totalLocked[_asset]` state variable, leading to an underflow when attempting to release assets.
Execution process: 
1. User locks an initial amount of assets using `Lock.lock`.
2. User extends the locked amount using `Lock.extendLock`.
3. User attempts to release the locked assets after the lock period expires, causing an underflow in `totalLocked[_asset]` due to the incorrect accounting.
Vulnerable code: 
```solidity
function extendLock(uint256 _id, uint256 _amount, uint256 _period) external {
    Bond storage bond = bonds[_id];
    bond.amount += _amount;
    bond.period += _period;
    // Missing: totalLocked[_asset] += _amount;
}
```