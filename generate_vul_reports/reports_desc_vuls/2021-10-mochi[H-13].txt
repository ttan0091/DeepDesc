Type of vulnerability: Frontrunning
Cause of vulnerability: The `vest()` and `lock()` functions do not use `safeTransferFrom()` to ensure that vested tokens are correctly allocated to the recipient, allowing for frontrunning attacks.
Execution process: An attacker can monitor the blockchain for transactions calling `vest()` or `lock()`, then quickly submit a transaction with a higher gas fee to frontrun the original transaction, effectively stealing the vested tokens.
Vulnerable code: 
```solidity
VestedRewardPool.sol#L36-L46
VestedRewardPool.sol#L54-L64
```