Type of vulnerability: Incorrect Balance Update
Cause of vulnerability: The `pendingBalances` of the previous proposer is not updated before setting the new listing, causing the collateral to be added to the new proposer's balance instead.
Execution process: When a new proposal is made, the function `_setListing` is called to set the new listing details. However, the update to `pendingBalances` for the previous proposer is done after this call, leading to the collateral being incorrectly assigned to the new proposer.
Vulnerable code: 
```solidity
_setListing(proposedListing, msg.sender, _collateral, _pricePerToken, block.timestamp);
// Sets collateral amount to pending balances for withdrawal
pendingBalances[_vault][proposedListing.proposer] += proposedListing.collateral;
```