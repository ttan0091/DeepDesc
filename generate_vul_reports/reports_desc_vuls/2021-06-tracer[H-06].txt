Type of vulnerability: Incorrect Decimal Scaling
Cause of vulnerability: The contract assumes that the decimals of the chainlink oracles are always 18, but this is not guaranteed and can vary.
Execution process: The contract multiplies the raw return values of two chainlink oracles without properly scaling them to a consistent decimal base, leading to incorrect gas price calculations.
Vulnerable code: The code snippet that multiplies the raw return values of the oracles without using the `toWad` function for proper scaling.