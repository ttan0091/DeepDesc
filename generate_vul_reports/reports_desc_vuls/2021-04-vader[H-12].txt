Type of vulnerability: Incorrect Function Logic
Cause of vulnerability: The `getAddedAmount` function does not correctly handle cases where the token is neither VADER/USDV nor the pool, leading to incorrect balance calculations and accounting.
Execution process: An attacker can call the `sync` function with token pairs where the balance of token1 is less than the stored amount for token2 in `mapToken_tokenAmount`. This manipulation can lead to incorrect accounting and allow the attacker to perform swaps without paying.
Vulnerable code: The specific vulnerable code involves the logic within the `getAddedAmount` function that does not properly validate the token type against the pool, leading to erroneous balance deductions and additions in the `mapToken_tokenAmount` mapping.