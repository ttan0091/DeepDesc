Type of vulnerability: Arithmetic Overflow
Cause of vulnerability: The use of an `unchecked` block in the `TradingLibrary.pnl()` function allows for arithmetic operations that can overflow, leading to the creation of a huge number of tokens.
Execution process: An attacker sets a malicious take-profit price when opening a position, which is used in the PNL calculation within an `unchecked` block. This results in the minting of a large number of tokens (e.g., \(10^{36}\) Tigris tokens), which can then be used to withdraw assets from the vault.
Vulnerable code: The vulnerable code is located in `TradingLibrary.pnl()`, specifically at line 46, where the arithmetic operation `1e18 * _currentPrice / _price - 1e18` is performed within an `unchecked` block, leading to potential overflow.