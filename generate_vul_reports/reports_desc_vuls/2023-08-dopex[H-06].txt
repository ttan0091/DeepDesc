Type of vulnerability: Denial of Service (DoS)
Cause of vulnerability: Insufficient validation of `timeToExpiry` leading to zero or invalid timeToExpiry value in option pricing calculations.
Execution process: When `putOptionsRequired` is true, the `bond` function calls `_purchaseOptions` which in turn calls `PerpetualAtlanticVault.purchase`. This function calculates `premium` using `calculatePremium`, which fails if `timeToExpiry` is less than 864 seconds, causing the transaction to revert.
Vulnerable code: 
```solidity
function calculatePremium(uint256 _strike, uint256 _amount, uint256 timeToExpiry, uint256 _price) public view returns (uint256 premium) {
    premium = ((IOptionPricing(addresses.optionPricing).getOptionPrice(_strike, _price > 0 ? _price : getUnderlyingPrice(), getVolatility(_strike), timeToExpiry) * _amount) / 1e8);
}
```