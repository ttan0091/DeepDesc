Type of vulnerability: Invalid Validation
Cause of vulnerability: Lack of balance validation in `depositGivenInputAmount()` and `withdrawGivenOutputAmount()` functions, which can lead to the pool’s ratio of y to x being outside the interval `[MIN_M, MAX_M)`.
Execution process: A user can deposit or withdraw an amount that, when processed by `_reserveTokenSpecified()`, causes the pool’s balance ratio to fall outside the specified interval, breaking the invariant.
Vulnerable code: The functions `depositGivenInputAmount()` and `withdrawGivenOutputAmount()` do not include the `_checkBalances()` function, which is essential for maintaining the balance ratio within the specified interval.