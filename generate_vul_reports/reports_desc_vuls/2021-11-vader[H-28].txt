Type of vulnerability: Incorrect Price Consultation Results
Cause of vulnerability: Misinterpretation of the mathematical operation for calculating the price of a token using multiple data sources.
Execution process: The function incorrectly calculates the price by dividing instead of multiplying, leading to a denominated result that is not in the expected format (USDV/USD).
Vulnerable code: The protocol calculates it as `(sumUSD * token.decimals()) / sumNative` which gives an incorrect denominated result.