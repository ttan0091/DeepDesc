Type of vulnerability: Access Control Vulnerability
Cause of vulnerability: Lack of access control on host-chain-only operations
Execution process: An attacker can call the `participate()` function on a non-host chain to mint a `twTAP` with a tokenId that does not exist on the host chain yet. The attacker can then send that `twTAP` to the host chain using the inherited `sendFrom()`, causing the `participate()` function to fail when attempting to mint an existing `tokenId`.
Vulnerable code:
```solidity
function participate(address _participant, uint256 _amount, uint256 _duration) external returns (uint256 tokenId) {
    require(_duration >= EPOCH_DURATION, "twTAP: Lock not a week");
    tokenId = ++mintedTWTap;
    _safeMint(_participant, tokenId);
}
```