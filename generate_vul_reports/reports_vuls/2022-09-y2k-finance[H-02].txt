[H-02] End epoch cannot be triggered preventing winners to withdraw
Submitted by eierina
https://github.com/code-423n4/2022-09-y2k-finance/blob/2175c044af98509261e4147edeb48e1036773771/src/Controller.sol#L198
https://github.com/code-423n4/2022-09-y2k-finance/blob/2175c044af98509261e4147edeb48e1036773771/src/Controller.sol#L246
https://github.com/code-423n4/2022-09-y2k-finance/blob/2175c044af98509261e4147edeb48e1036773771/src/Controller.sol#L261
https://github.com/code-423n4/2022-09-y2k-finance/blob/2175c044af98509261e4147edeb48e1036773771/src/Controller.sol#L277-L286
https://github.com/code-423n4/2022-09-y2k-finance/blob/2175c044af98509261e4147edeb48e1036773771/src/Vault.sol#L203
Impact
At the end of an epoch, thetriggerEndEpoch(…)is called to trigger ‘epoch end without depeg event’, making risk users the winners and entitling them towithdraw(risk + hedge) from the vault.
In the case of the Arbitrum sequencer going down or restarting, there is agrace period of one hourbefore thegetLatestPrice()returns to execute without reverting. This means that thetriggerEndEpoch(…)cannot complete during this time, because it calls thegetLatestPrice().
Making this high-priority because unless thetriggerEndEpoch(…)completes:
winners cannotwithdrawalthought the epoch is over;during this time the strike price might be reached causing a depeg event at all effects turning the table for the winners;thegetLatestPrice()is not functional to the completion of thetriggerEndEpoch(…), nor to thewithdraw, but only informative used to initialize the event object emittedat the very end of the triggerEndEpoch function.
First two points each constitute independent justification, third point reinforces the first 2 points.
Proof of Concept
triggerEndEpoch reverts if arbiter down or restarted less than eq GRACEPERIODTIME ago (1hr)
File:Controller.sol:L246
Revert if getLatestPrice reverts.
functiontriggerEndEpoch(uint256marketIndex,uint256epochEnd)public{< ...omitted... >emitDepegInsurance(keccak256(abi.encodePacked(marketIndex,insrVault.idEpochBegin(epochEnd),epochEnd)),tvl,false,epochEnd,block.timestamp,getLatestPrice(insrVault.tokenInsured())// @audit getLatestPrice reverts while sequencer unavailable or during grace period);}
File:Controller.sol:L277-L286
Revert if sequencer down or grace period after restart not over.
functiongetLatestPrice(address_token)publicviewreturns(int256nowPrice){< ...omitted... >boolisSequencerUp=answer==0;if(!isSequencerUp) {revertSequencerDown();}// Make sure the grace period has passed after the sequencer is back up.uint256timeSinceUp=block.timestamp-startedAt;if(timeSinceUp<=GRACE_PERIOD_TIME) {// @audit 1 hourrevertGracePeriodNotOver();}< ...omitted... >}
withdraw fails if triggerEndEpoch did not execute successfully
File:Vault.sol:L203
Can execute if block.timestamp > epochEnd, but fails if trigger did not execute. Winners cannot withdraw.
functionwithdraw(uint256id,uint256assets,addressreceiver,addressowner)externaloverrideepochHasEnded(id)// @audit same as require((block.timestamp > id) || idDepegged[id]), hence independent from triggers.marketExists(id)returns(uint256shares){< ...omitted... >uint256entitledShares=beforeWithdraw(id,shares);// @audit ratio is idClaimTVL[id]/ifFinalTVL[id], hence zero unless triggers executed< ...omitted... >emitWithdraw(msg.sender,receiver,owner,id,assets,entitledShares);asset.transfer(receiver,entitledShares);returnentitledShares;}
Recommended Mitigation Steps
The latest price is retrieved at the very end of thetriggerEndEpoch(…)for the only purpose of initializing the DepegInsurance event.
Since it is used for informational purpose (logging / offchain logging) and not for functional purpose to thetriggerEndEpoch(…)execution, it can be relaxed.
Depending on how the event is used, whengetLatestPrice()is called for informative/logging purpose only, there could be few alternatives:
log a 0 when SequencerDown or GRACEPERIODTIME not passedlog a 0 when SequencerDown and ignore GRACEPERIODTIME
Once events are logged off-chain, some post processing may be used to correct/update the values with accurate data.
3xHarry (Y2K Finance) commented:
Great catch!
MiguelBits (Y2K Finance) confirmed and commented:
Fixed this by changing triggerEndEpoch,AggregatorV3Interface priceFeed = AggregatorV3Interface(vaultFactory.tokenToOracle(insrVault.tokenInsured()));(,int256 price,,,) = priceFeed.latestRoundData();emit DepegInsurance(keccak256(abi.encodePacked(marketIndex,insrVault.idEpochBegin(epochEnd),epochEnd)),tvl,true,epochEnd,block.timestamp,price);
HickupHH3 (judge) commented:
Agree with the points raised by the warden, especially on howgetLatestPrice()is merely for informational purposes in the event emission.