[H-01]LienToken: Lender and liquidator can collude to block auction and seize collateral
Submitted byhorsefacts, also found bypeakboltandKIntern_NA
https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L849https://github.com/code-423n4/2023-01-astaria/blob/1bfc58b42109b839528ab1c21dc9803d663df898/src/LienToken.sol#L642-L643
If a lender offers a loan denominated in an ERC20 token that blocks transfers to certain addresses (for example, the USDT and USDC blocklist), they may collude with a liquidator (or act as the liquidator themselves) to prevent loan payments, block all bids in the liquidation auction, and seize the borrower’s collateral by transferring aLienTokento a blocked address.
LienTokensact as bearer assets: if a lender transfers their lien token to another address, the lien’s new payee will be theownerOfthe token:
LienToken#_getPayee
function_getPayee(LienStoragestorages,uint256lienId)internalviewreturns(address){returns.lienMeta[lienId].payee!=address(0)?s.lienMeta[lienId].payee:ownerOf(lienId);}
The payee address returned by_getPayeeis used as the recipient address of loan repayments viamakePayment:
LienToken#_payment
s.TRANSFER_PROXY.tokenTransferFrom(stack.lien.token,payer,payee,amount);
…as well as post-liquidation payments from the clearinghouse viapayDebtViaClearingHouse:
LienToken#_paymentAH
if(payment>0)s.TRANSFER_PROXY.tokenTransferFrom(token,payer,payee,payment);
If an adversary tranfers theirLienTokento an address that causes these attempted transfers to revert, like an address on the USDC blocklist, the borrower will be unable to make payments on their lien, the loan will eventually qualify for liquidation, and all bids in the Seaport auction will revert when they attempt to send payment to the blocklisted address.
Following the failed auction, the liquidator can callCollateralToken#liquidatorNFTClaim, which callsClearingHouse#settleLiquidatorNFTClaimand settles the loan for zero payment, claiming the “liquidated” collateral token for free:
ClearingHouse#settleLiquidatorNFTClaim
functionsettleLiquidatorNFTClaim()external{IAstariaRouterASTARIA_ROUTER=IAstariaRouter(_getArgAddress(0));require(msg.sender==address(ASTARIA_ROUTER.COLLATERAL_TOKEN()));ClearingHouseStoragestorages=_getStorage();ASTARIA_ROUTER.LIEN_TOKEN().payDebtViaClearingHouse(address(0),COLLATERAL_ID(),0,s.auctionStack.stack);}
The lender will lose the amount of their lien, but can seize the borrower’s collateral, worth more than their individual lien. Malicious lenders may offer small loans with attractive terms to lure unsuspecting borrowers. Note also that the lender and liquidator can be one and the same—they don’t need to be different parties to pull off this attack! A clever borrower could potentially perform this attack as well, by acting as borrower, lender, and liquidator, and buying out one of their own liens by using loaned funds.
(The failed auction liquidation logic above strikes me as a little odd as well: consider whether the liquidator should instead be required to pay a minimum amount covering the bad debt in order to claim the collateral token, rather than claiming it for free).
Impact
Malicious lender/liquidator loses amount of their lien, but keeps collateral NFT.Additional liens in the stack cannot be repaid. These other lenders take on bad debt and lose the amount of their liens.Borrower loses their collateral NFT, keeps full amount of their liens.
Recommendation
This may be difficult to mitigate. Transferring a lien to a blocklisted address is one mechanism for this attack using USDT and USDC, but there are other ways arbitrary ERC20s might revert. Two potential options:
Maintain an allowlist of supported ERC20s and limit it to well behaved tokens—WETH, DAI, etc.Do not “push” payments to payees on loan payment or auction settlement, but handle this in two steps—first receiving payment from the borrower or Seaport auction and storing it in escrow, then allowing lien owners to “pull” the escrowed payment.
Test Case
See warden’soriginal submissionfor full details.
SantiagoGregory (Astaria) confirmed
Picodes (judge) increased the severity to High