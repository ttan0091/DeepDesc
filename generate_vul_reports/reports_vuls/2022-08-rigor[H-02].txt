[H-02] Builder can halve the interest paid to a community owner due to arithmetic rounding
Submitted by scaraven, also found by 0x52, auditor0517, Deivitto, hansfriese, Lambda, rbserver, simon135, smiling_heretic, sseefried, and TrungOre
Community.sol#L685-L686
Due to arithmetic rounding inreturnToLender(), a builder can halve the APR paid to a community owner by paying every 1.9999 days. This allows a builder to drastically decrease the amount of interest paid to a community owner, which in turn allows them to advertise very high APR rates to secure funding, most of which they will not pay.
This issue occurs in the calculation ofnoOfDaysinreturnToLender()which calculates the number of days since interest has last been calculated. If a builder repays a very small amount of tokens every 1.9999 days, then thenoOfDayswill be rounded down to1 dayshoweverlastTimestampis updated to the current timestamp anyway, so the builder essentially accumulates only 1 day of interest after 2 days.
I believe this is high severity because a community owner can have a drastic decrease in interest gained from a loan which counts as lost rewards. Additionally, this problem does not require a malicious builder because if a builder pays at a wrong time, the loaner receives less interest anyway.
Proof of Concept
A community owner provides a loan of 500_000 tokens to a builder with an APR of 10% (ignoring treasury fees)Therefore, the community owner will expect an interest of 136.9 tokens per day (273.9 per 2 days)A builder repays 0.000001 tokens atlastTimestamp + 2*86400 - 1noOfDaysrounds down to 1 thereby accumulating500_000 * 100 * 1 / 365000 = 136tokens for 2 daysTherefore, the community owner only receives 5% APR with negligible expenses for the builder
Tools Used
VS Code
Recommended Mitigation Steps
There are two possible mitigations:
Add a scalar tonoOfDaysso that any rounding which occurs is negligible
i.e.
uint256_noOfDays= (block.timestamp-_communityProject.lastTimestamp) *SCALAR/86400;// 24*60*60/// Interest formula = (principal * APR * days) / (365 * 1000)// prettier-ignoreuint256_unclaimedInterest=_lentAmount*_communities[_communityID].projectDetails[_project].apr*_noOfDays/365000/SCALAR;
Remove thenoOfDayscalculation and calculate interest in one equation which reduces arithmetic rounding
uint256_unclaimedInterest=_lentAmount*_communities[_communityID].projectDetails[_project].apr*(block.timestamp-_communityProject.lastTimestamp) /365000/86400;
zgorizzo69 (Rigor) confirmed