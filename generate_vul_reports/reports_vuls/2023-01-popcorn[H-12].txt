[H-12] Modifier VaultController._verifyCreatorOrOwner does not work as intented
Submitted byustas, also found byokkothejawa,Ada,bin2chen,pwnforce,mert_eren,ktg,0xRobocop,georgits,gjaldon, andhashminer0725
https://github.com/code-423n4/2023-01-popcorn/blob/d95fc31449c260901811196d617366d6352258cd/src/vault/VaultController.sol#L666-L670
https://github.com/code-423n4/2023-01-popcorn/blob/d95fc31449c260901811196d617366d6352258cd/src/vault/VaultController.sol#L448
https://github.com/code-423n4/2023-01-popcorn/blob/d95fc31449c260901811196d617366d6352258cd/src/vault/VaultController.sol#L608
https://github.com/code-423n4/2023-01-popcorn/blob/d95fc31449c260901811196d617366d6352258cd/src/vault/VaultController.sol#L621
https://github.com/code-423n4/2023-01-popcorn/blob/d95fc31449c260901811196d617366d6352258cd/src/vault/VaultController.sol#L634
https://github.com/code-423n4/2023-01-popcorn/blob/d95fc31449c260901811196d617366d6352258cd/src/vault/VaultController.sol#L647
Impact
ModifierVaultController._verifyCreatorOrOwnerdoes not work. Instead of checking the conditionmsg.sender is creator OR owner, it makesmsg.sender is creator AND owner. This would block access to all created Vaults for creators and the owner (if he did not create them).
Specifically, the following functions in theVaultControllerare affected:
addStakingRewardsTokens();deployVault(), which has a call toaddStakingRewardsTokens(), cannot be executed if the argumentrewardsData.length != 0;pauseAdapters();pauseVaults();unpauseAdapters();unpauseVaults().
Proof of Concept
To check this concept, we can make a truth table for the main condition in the modifiermsg.sender != metadata.creator || msg.sender != owner. The table shows that the condition will equalfalseonly in the one case wheremsg.senderis both creator and owner.
msg.sender != metadata.creatormsg.sender != ownermsg.sender != metadata.creator || msg.sender != owner000011101111
The correct condition should be the following:msg.sender != metadata.creator && msg.sender != owner.
msg.sender != metadata.creatormsg.sender != ownermsg.sender != metadata.creator && msg.sender != owner000010100111
In this case, a revert will only happen whenmsg.senderis neither a creator nor the owner, as it should be according to the documentation.
You can also use the following test to check; add it to the filetest\vault\VaultController.t.sol:
functiontestFail__deployVault_creator_is_not_owner_audit()public{addTemplate("Adapter",templateId,adapterImpl,true,true);addTemplate("Strategy","MockStrategy",strategyImpl,false,true);addTemplate("Vault","V1",vaultImpl,true,true);controller.setPerformanceFee(uint256(1000));controller.setHarvestCooldown(1days);rewardToken.mint(bob,10ether);rewardToken.approve(address(controller),10ether);swapTokenAddresses[0] =address(0x9999);addressadapterClone=0xD6C5fA22BBE89db86245e111044a880213b35705;addressstrategyClone=0xe8a41C57AB0019c403D35e8D54f2921BaE21Ed66;addressstakingClone=0xE64C695617819cE724c1d35a37BCcFbF5586F752;uint256callTimestamp=block.timestamp;vm.prank(bob);addressvaultClone=controller.deployVault(VaultInitParams({asset:iAsset,adapter:IERC4626(address(0)),fees:VaultFees({deposit:100,withdrawal:200,management:300,performance:400}),feeRecipient:feeRecipient,owner:bob}),DeploymentArgs({id:templateId,data:abi.encode(uint256(100))}),DeploymentArgs({id:"MockStrategy",data:""}),address(0),abi.encode(address(rewardToken),0.1ether,1ether,true,10000000,2days,1days),VaultMetadata({vault:address(0),staking:address(0),creator:bob,metadataCID:metadataCid,swapTokenAddresses:swapTokenAddresses,swapAddress:address(0x5555),exchange:uint256(1)}),0);}
In the testâ€™s log (forge test --match-test "testFail__deployVault_creator_is_not_owner" -vvvv), you can see that the call ended with revertNotSubmitterNorOwner(0x000000000000000000000000000000000000000000000000DCbA).
Tools Used
VSCodium, Forge
Recommended Mitigation Steps
Change the condition tomsg.sender != metadata.creator && msg.sender != owner.
RedVeil (Popcorn) confirmed, but disagreed with severity