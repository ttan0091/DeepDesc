[H-09] Unsafe cast inIndexPoolmint leads to attack
Submitted by cmichel, also found by cmichel and pauliax
TheIndexPool.mintfunction performs an unsafe cast ofratioto theuint120type:
uint120ratio=uint120(_div(toMint,totalSupply));
Note thattoMintis chosen by the caller and when choosingtoMint = 2**120 * totalSupply / BASE, theratiovariable will be2**120and then truncated to 0 due to the cast.
This allows an attacker to mint LP tokens for free.
They just need to choose theratiosuch that theamountIn = ratio * reserve / BASEvariable passes therequire(amountIn >= MIN_BALANCE, "MIN_BALANCE");check.
For example, when choosingratio = 2**120 * totalSupply / BASE + 1e16, an attacker has to pay 1/100th of the current reserves but heavily inflates the LP token supply.
They can then use the inflated LP tokens they received inburnto withdraw the entire pool reserves.
POC
I createdthis POCthat implements a hardhat test and shows how to steal the pool tokens:
Impact
An attacker can inflate the LP token pool supply and mint themselves a lot of LP tokens by providing almost no tokens themselves.
The entire pool tokens can be stolen.
Recommended Mitigation Steps
Even though Solidity 0.8.x is used, type casts do not throw an error.
ASafeCastlibrarymust be used everywhere a typecast is done.
maxsam4 (Sushi) confirmed