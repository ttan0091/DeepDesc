[H-05] Attacker can DOS OptimisticListing with very low cost
Submitted bygzeon, also found byTrust,Trust, andcccz
The only check on a new proposal is that it is priced lower than the existing proposal. It does not constrain on the_collateralsupplied (except it will revert in\_verifyBalanceif set to 0). Anyone can block normal proposal creation by creating a proposal with lower price but\_collateral == 1. When a high total supply is used, the price of each Rae is negligible and enables an attacker to DOS the protocol.
This violated theprevent a user from holding a vault hostage and never letting the piece be reasonably boughtrequirement.
Proof of Concept
For any proposal, an attacker can deny it with\_collateral = 1and\_price = price - 1.
If he does not want the NFT to be sold, he can reject the proposal himself, resetting the contract state.
https://github.com/code-423n4/2022-12-tessera/blob/f37a11407da2af844bbfe868e1422e3665a5f8e4/src/seaport/modules/OptimisticListingSeaport.sol#L112-L116
// Reverts if price per token is not lower than both the proposed and active listingsif(_pricePerToken>=proposedListing.pricePerToken||_pricePerToken>=activeListings[_vault].pricePerToken)revertNotLower();
Add this test to OptimisticListingSeaport.t.sol:
function testProposeRevertLowerTotalValue() public {uint256 _collateral = 100;uint256 _price = 100;// setuptestPropose(_collateral, _price);lowerPrice = pricePerToken - 1;// executevm.expectRevert();_propose(eve, vault, 1, lowerPrice, offer);// expect_assertListing(eve, 1, lowerPrice, block.timestamp);_assertTokenBalance(eve, token, tokenId, eveTokenBalance - 1);}
[FAIL. Reason: Call did not revert as expected]
Tools Used
Foundry
Recommended Mitigation Steps
Require the total value of the new collateral to be greater than the previous.
This however still allows a Rae holder with sufficiently large holding to block proposal by creating a new proposal and immediately reject it himself.
stevennevins (Tessera) confirmed
HickupHH3 (judge) commented:
Best report for Foundry POC + the following statement:This violated theprevent a user from holding a vault hostage and never letting the piece be reasonably boughtrequirement.