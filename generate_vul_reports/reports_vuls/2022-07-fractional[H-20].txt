[H-20] Migration’sleavefunction allows leaving a committed proposal
Submitted by kenzo
Theleavefunction allows to leave a proposal even if the proposal has been committed and failed.
This makes it a (probably unintended) duplicate functionality ofwithdrawContributions, which is the function that should be used to withdraw failed contributions.
Impact
User assets might be lost:
When withdrawing assets from a failed migration, users should get back a different amount of assets, according to the buyout auction result. (I detailed this in another issue - “Migration::withdrawContribution falsely assumes that user should get exactly his original contribution back”).
But when withdrawing assets from a proposal that has not been committed, users should get back their original amount of assets, as that has not changed.
Therefore, ifleavedoes not check if the proposal has been committed, users could callleaveinstead ofwithdrawContributionand get back a different amounts of assets than they deserve, on the expense of other users.
Proof of Concept
Theleavefunctiondoes not checkanywhere whetherproposal.isCommited == true.
Therefore, if a user calls it after a proposal has been committed and failed, it will continue to send him his original contribution back, instead of sending him the adjusted amount that has been returned from Buyout.
Recommended Mitigation Steps
Revert inleaveifproposal.isCommited == true.
You might be also able to merge the functionality ofleaveandwithdrawContribution, but that depends on how you will implement the fix forwithdrawContribution.
Ferret-san (Fractional) confirmed
HardlyDifficult (judge) commented:
Users can withdraw more than expected after a failed proposal, which leads to a deficit and loss of assets for others. Agree with High risk.