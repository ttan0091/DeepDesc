[H-08] Governance wrongly calculates_quorumReached()
Submitted byT1MOH, also found byjosephdara,yjrwkk,LokiThe5th,Iurii3,squeaky_cactus,skyge, andzambody
For some reason it is calculated as sum ofagainstVotesandabstainVotesinstead oftotalVoteson proposal. As the result, quorum will be reached only if >=1/3 of all votes are abstain or against, which doesnâ€™t make sense.
Proof of Concept
Number of votes with support = 1 and support = 2 is summed up:
function_quorumReached(uint256proposalId)internalviewoverridereturns(bool){returnproposalData[proposalId].supportVotes[1] +proposalData[proposalId].supportVotes[2] >=quorum(proposalSnapshot(proposalId));}
However support = 1 means against votes, support = 2 means abstain votes:
https://github.com/code-423n4/2023-06-lybra/blob/26915a826c90eeb829863ec3851c3c785800594b/contracts/lybra/governance/LybraGovernance.sol#L120-L122
functionproposals(uint256proposalId)externalviewreturns(...) {...forVotes=proposalData[proposalId].supportVotes[0];againstVotes=proposalData[proposalId].supportVotes[1];abstainVotes=proposalData[proposalId].supportVotes[2];...}
Tools Used
Manual review
Recommended Mitigation Steps
UsetotalVotes:
function_quorumReached(uint256proposalId)internalviewoverridereturns(bool){returnproposalData[proposalId].totalVotes>=quorum(proposalSnapshot(proposalId));}
Assessed type
Governance
LybraFinance confirmed