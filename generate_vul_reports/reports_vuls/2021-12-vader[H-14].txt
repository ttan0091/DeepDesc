[H-14] Denial of service
Submitted by danb
https://github.com/code-423n4/2021-12-vader/blob/main/contracts/dex-v2/pool/VaderPoolV2.sol#L334on the first deposit, the total liquidity is set tonativeDeposit.
this might be a very low number compared toforeignDeposit.
It can cause a denial of service of the pair.
Impact
A pair can enter a denial of service state.
Proof of Concept
consider the following scenario:
the owner of the pool callssetFungibleTokenSupportfor a new token, for example weth.
a malicious actor callsmintFungible,  withnativeDeposit == 1andforeignDeposit == 10 ether.totalLiquidityUnitswill be 1.
the pool can be arbitraged, even by the attacker, buttotalLiquidityUnitswill still be 1.
this means that 1 liquidity token is equal to all of the pool reserves, which is a lot of money.
It will cause a very high rounding error for anyone trying to mint liquidity.
then, anyone who will try to mint liquidity will either:
fail, because they canâ€™t mint 0 liquidity if their amount is too small.get less liquidity tokens than they should, because there is a very high rounding error, and its against new liquidity providers.
The rounding error losses will increase the pool reserves, which will increase value of liquidity tokens, so the hacker can even profit from this.
after this is realised, no one will want to provide liquidity, and since the pair cannot be removed or replaced, it will cause denial of service for that token forever.
SamSteinGG (Vader) acknowledged