[H-03] Double transfer in thetransferAndCallfunction ofERC677
Submitted by shw, also found by cccz, danb, and wuwe1
The implementation of thetransferAndCallfunction inERC677is incorrect. It transfers the_valueamount of tokens twice instead of once. Since theFlancontract inheritsERC667, anyone calling thetransferAndCallfunction onFlanis affected by this double-transfer bug.
Proof of Concept
Below is the implementation oftransferAndCall:
functiontransferAndCall(address_to,uint256_value,bytesmemory_data)publicreturns(boolsuccess) {super.transfer(_to,_value);_transfer(msg.sender,_to,_value);if(isContract(_to)) {contractFallback(_to,_value,_data);}returntrue;}
We can see thatsuper.transfer(_to, _value);and_transfer(msg.sender, _to, _value);are doing the same thing - transfering_valueof tokens frommsg.senderto_to.
Referenced code:ERC677/ERC677.sol#L28-L29
Recommended Mitigation Steps
Remove_transfer(msg.sender, _to, _value);in thetransferAndCallfunction.
gititGoro (Behodler) confirmed and commented:
FixBehodler/limbo#3