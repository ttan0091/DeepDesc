[H-05] Malicious strategy can lead to loss of funds
Submitted by7siech, also found byimareandfs0c
A malicious strategy has access to the adapter’s storage and can therefore freely change any values.
Proof of Concept
BecauseAdapterBasecalls theStrategyusingdelegatecall, theStrategyhas access to the calling contract’s storage and can be manipulated directly.
In the following proof of concept, aMaliciousStrategyis paired with theBeefyAdapterand when called will manipulate theperformanceFeeandhighWaterMarkvalues. Of course, any other storage slots of the adapter could also be manipulated or any other calls to external contracts on behalf of themsg.sendercould be performed.
MaliciousStrategyimplementation showing the exploit -https://gist.github.com/alpeware/e0b1c9f330419986142711e814bfdc7b#file-beefyadapter-t-sol-L18
Adapterhelper used to determine the storage slots -https://gist.github.com/alpeware/e0b1c9f330419986142711e814bfdc7b#file-beefyadapter-t-sol-L65
BeefyAdapterTestchanges made to tests -
Adding the malicious strategy -https://gist.github.com/alpeware/e0b1c9f330419986142711e814bfdc7b#file-beefyadapter-t-sol-L123
Adding new testtest__StrategyHarvest()executingharvest()-https://gist.github.com/alpeware/e0b1c9f330419986142711e814bfdc7b#file-beefyadapter-t-sol-L132
Log output -https://gist.github.com/alpeware/e0b1c9f330419986142711e814bfdc7b#file-log-txt
Tools Used
Foundry
Recommended Mitigation Steps
From chatting with the devs, the goal is to mix and match adapters and strategies. I don’t thinkdelegatecallshould be used and adapters and strategies should be treated as separate contracts. Relevant approvals should be given individually instead.
RedVeil (Popcorn) acknowledged