[H-12] wrongcalcLiquidityHoldingsthat leads to dead fund in the Pool
Submitted by jonah1005
The lptoken minted by thePoolcontract is actually the mix of two types of tokens. One is the original lptokens user get by callingaddForMember. This lpToken is similar to lp of Uniswap, Crv, Sushi, … etc. The other one is the debt-lp token the Synth contract will get when the user callsmintSynth. TheSynthcontract can only withdrawSpartafor burning debt-lp. Mixing two types of lp would raise several issues.
LP user would not get their fair share when they burn the lP.
Alice adds liquidity with Sparta 1000 and token B 1000 and create a new Pool.Bob mint Synth with 1000 Sparta and get debt.Alice withdraw all lp TokenBob burn all Synth.
The pool would end up left behind a lot of token B in the Pool while there’s no lp holder.
I would say this is a high-risk vulnerability since it pauses unspoken risks and losses for all users (all the time)
The logic ofburn original lpandburn debt-lp.
I do not know whether this is the team’s design choice or its composite with a series of bugs. If this is the original design, I do not come up with a fix. It’s a bit similar to the impermanent loss. However, the loss would be left behind in the Pool. This is more complicated and maybe worse than the impermanent loss. If this is the design choice, I think it’s worth emphasize and explain to the users.
verifyfirst (Spartan) confirmed and disagreed with severity:
We are in discussion of a viable solution to limit the effects of a bank run.
One example is limiting the minted synths based on the depth of its underlying pool.
SamusElderg (Spartan) commented:
LP units are only used for accounting; even if they were drained to zero or vice versa on the synth contract; they would result in the same redemption value when burning. Hence the risk is low; however there is already discussions on implementing controls to synths including a maximum synthSupply vs tokenDepth ratio to prevent top-heavy synths ontop of the pools which isn’t really specific to the warden’s scenario; however does help limit those ‘unknowns’ that the warden addressed.