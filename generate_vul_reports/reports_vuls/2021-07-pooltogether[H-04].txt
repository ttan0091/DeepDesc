[H-04]SwappableYieldSource: Missing same deposit token check intransferFunds()
Submitted by hickuphh3, also found by 0xRajeev
transferFunds()will transfer funds from a specified yield source_yieldSourceto the current yield source set in the contract_currentYieldSource. However, it fails to check that the deposit tokens are the same. If the specified yield source’s assets are of a higher valuation, then a malicious owner or asset manager will be able to exploit and pocket the difference.
Assumptions:
_yieldSourcehas a deposit token of WETH (18 decimals)_currentYieldSourcehas a deposit token of DAI (18 decimals)1 WETH > 1 DAI (definitely true, I’d be really sad otherwise)
Attacker does the following:
Deposit 100 DAI into the swappable yield source contractCalltransferFunds(_yieldSource, 100 * 1e18)_requireDifferentYieldSource()passes_transferFunds(_yieldSource, 100 * 1e18)is called_yieldSource.redeemToken(_amount);→ This will transfer 100 WETH out of the_yieldSourceinto the contractuint256 currentBalance = IERC20Upgradeable(_yieldSource.depositToken()).balanceOf(address(this));→ This will equate to ≥ 100 WETH.require(_amount <= currentBalance, "SwappableYieldSource/transfer-amount-different");is true since both are100 * 1e18_currentYieldSource.supplyTokenTo(currentBalance, address(this));→ This supplies the transferred 100 DAI from step 1 to the current yield sourceWe now have 100 WETH in the swappable yield source contractCalltransferERC20(WETH, attackerAddress, 100 * 1e18)to withdraw 100 WETH out of the contract to the attacker’s desired address.
_requireDifferentYieldSource()should also verify that the yield sources’ deposit token addresses are the same.
function_requireDifferentYieldSource(IYieldSource_yieldSource)internalview{require(address(_yieldSource) !=address(yieldSource),"SwappableYieldSource/same-yield-source");require(_newYieldSource.depositToken() ==yieldSource.depositToken(),"SwappableYieldSource/different-deposit-token");}
PierrickGT (PoolTogether) acknowledged:
This exploit was indeed possible when we had thetransferFundsfunction but now that we have removed it and funds can only be moved byswapYieldSource(), this exploit is no longer possible since we check for the samedepositTokenin_setYieldSource().https://github.com/pooltogether/swappable-yield-source/pull/4
0xean (Judge) commented:
Upgrading to 3 considering the potential for loss of funds