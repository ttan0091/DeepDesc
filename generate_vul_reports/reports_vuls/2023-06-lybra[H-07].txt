[H-07]_voteSucceeded()returns true whenagainstVotes > forVotesand vice versa
Submitted byT1MOH, also found byyjrwkk,josephdara,devival,KupiaSec,LaScaloneta,cccz,Iurii3,pep7siup,0xnev,bytes032,bytes032,skyge, andsces60107
As a result, voting process is broken, as it wonâ€™t execute proposals with most offorVotes. Instead, it will execute proposals with most ofagainstVotes.
Proof of Concept
It returns whether number of votes with support = 1 is greater than with support = 0:
function_voteSucceeded(uint256proposalId)internalviewoverridereturns(bool){returnproposalData[proposalId].supportVotes[1] >proposalData[proposalId].supportVotes[0];}
However support = 1 meansagainstVotes, and support = 0 meansforVotes:
https://github.com/code-423n4/2023-06-lybra/blob/26915a826c90eeb829863ec3851c3c785800594b/contracts/lybra/governance/LybraGovernance.sol#L120-L122
functionproposals(uint256proposalId)externalviewreturns(...) {...forVotes=proposalData[proposalId].supportVotes[0];againstVotes=proposalData[proposalId].supportVotes[1];abstainVotes=proposalData[proposalId].supportVotes[2];...}
Tools Used
Manual Review
Recommended Mitigation Steps
Swap 1 and 0:
function_voteSucceeded(uint256proposalId)internalviewoverridereturns(bool){returnproposalData[proposalId].supportVotes[0] >proposalData[proposalId].supportVotes[1];}
Assessed type
Governance
LybraFinance confirmed