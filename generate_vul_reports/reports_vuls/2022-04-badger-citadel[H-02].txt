[H-02] StakedCitadel: wrong setupVesting function name
Submitted by cccz, also found by TrungOre, wuwe1, reassor, 0xBug, georgypetrov, 0xDjango, scaraven, horsefacts, berndartmueller, CertoraInc, rayn, m9800, pedroais, and VAD37
In the\_withdrawfunction of the StakedCitadel contract, the setupVesting function of vesting is called, while in the StakedCitadelVester contract, the function name is vest, which will cause the _withdraw function to fail, so that the user cannot withdraw the tokens.
IVesting(vesting).setupVesting(msg.sender, _amount, block.timestamp);token.safeTransfer(vesting, _amount);...function vest(address recipient,uint256 _amount,uint256 _unlockBegin) external {require(msg.sender == vault, "StakedCitadelVester: only xCTDL vault");require(_amount > 0, "StakedCitadelVester: cannot vest 0");vesting[recipient].lockedAmounts =vesting[recipient].lockedAmounts +_amount;vesting[recipient].unlockBegin = _unlockBegin;vesting[recipient].unlockEnd = _unlockBegin + vestingDuration;emit Vest(recipient,vesting[recipient].lockedAmounts,_unlockBegin,vesting[recipient].unlockEnd);}
Proof of Concept
https://github.com/code-423n4/2022-04-badger-citadel/blob/main/src/StakedCitadel.sol#L830
https://github.com/code-423n4/2022-04-badger-citadel/blob/main/src/interfaces/citadel/IVesting.sol#L5
Recommended Mitigation Steps
Use the correct function name
interface IVesting {function vest(address recipient,uint256 _amount,uint256 _unlockBegin) external;}...IVesting(vesting).vest(msg.sender, _amount, block.timestamp);token.safeTransfer(vesting, _amount);
dapp-whisperer (BadgerDAO) confirmed and resolved