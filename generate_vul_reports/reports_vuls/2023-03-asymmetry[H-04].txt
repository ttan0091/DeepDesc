[H-04] Price of sfrxEth derivative is calculated incorrectly
Submitted bylukris02, also found byjoestakey,rbserver,qpzm,RedTiger,Bauer,T1MOH,dec3ntraliz3d,HollaDieWaldfee,reassor, andkoxuan
In theethPerDerivative(), the calculatedfrxAmountis multiplied by (10 ** 18) and divided byprice_oracle, but it must be multiplied byprice_oracleand divided by (10 ** 18).
The impact is severe asethPerDerivative()function is used instake(), one of  two main functions a user will interact with. The value returned byethPerDerivative()affects the calculations ofmintAmount. The incorrect calculation may over or understate the amount of safEth received by the user.
ethPerDerivative()is also used in thewithdraw()function when calculatingminOut. So, incorrect calculation of ethPerDerivative() may increase/decrease slippage. This can cause unexpected losses or function revert. Ifwithdraw()function reverts, the functionunstake()is unavailable => assets are locked.
Proof of Concept
We need to calculate: (10 ** 18) sfrxEth = X Eth.
For example, weconvertToAssets(10 ** 18)and getfrxAmount= 1031226769652703996.price_oraclereturns 998827832404234820. So, (10 ** 18) frxEth costs 998827832404234820 Eth. Thus, (10 ** 18) sfrxEth costsfrxAmount * price_oracle / 10 ** 18= 1031226769652703996 * 998827832404234820 / 10 ** 18 Eth (1030017999049431492 Eth).
Butthis function:
function ethPerDerivative(uint256 _amount) public view returns (uint256) {uint256 frxAmount = IsFrxEth(SFRX_ETH_ADDRESS).convertToAssets(10 ** 18);return ((10 ** 18 * frxAmount) /IFrxEthEthPool(FRX_ETH_CRV_POOL_ADDRESS).price_oracle());}
calculates the cost of sfrxEth as10 ** 18 * frxAmount / price_oracle= 10 ** 18 * 1031226769652703996 / 998827832404234820 Eth (1032436958800480269 Eth). The current difference ~ 0.23% but it can be more/less.
Recommended Mitigation Steps
Changethese lines:
return ((10 ** 18 * frxAmount) /IFrxEthEthPool(FRX_ETH_CRV_POOL_ADDRESS).price_oracle());
to:
return (frxAmount * IFrxEthEthPool(FRX_ETH_CRV_POOL_ADDRESS).price_oracle() / 10 ** 18);
toshiSat (Asymmetry) disputed via duplicate issue#698
Asymmetry mitigated:
To protect against oracle attacks we assume FRX is 1:1 with ETH and revert if the oracle says otherwise since there is no chainlink for FRX.
Status:Mitigation confirmed with comments. Full details in reports fromd3e4andadriro.