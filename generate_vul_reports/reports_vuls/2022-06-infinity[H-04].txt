[H-04] Accumulated ETH fees of InfinityExchange cannot be retrieved
Submitted by hyh, also found by 0x29A, 0xf15ers, 0xkowloon, 0xNineDec, berndartmueller, byterocket, cccz, codexploder, GreyArt, horsefacts, IllIllI, Kenshin, kenzo, KIntern, Lambda, obront, obtarian, oyc109, peritoflores, rajatbeladiya, rfa, saian, unforgiven, WatchPug, Wayne, and zer0dot_
ETH fees accumulated from takeOrders() and takeMultipleOneOrders() operations are permanently frozen within the contract as there is only one way designed to retrieve them, a rescueETH() function, and it will work as intended, not being able to access ETH balance of the contract.
Setting the severity as high as the case is a violation of systemâ€™s core logic and a permanent freeze of ETH revenue of the project.
Proof of Concept
Fees are accrued in user-facing takeOrders() and takeMultipleOneOrders() via the following call sequences:
takeOrders -> _takeOrders -> _execTakeOrders -> _transferNFTsAndFees -> _transferFeestakeMultipleOneOrders -> _execTakeOneOrder -> _transferNFTsAndFees -> _transferFees
While token fees are transferred right away, ETH fees are kept with the InfinityExchange contract:
https://github.com/code-423n4/2022-06-infinity/blob/765376fa238bbccd8b1e2e12897c91098c7e5ac6/contracts/core/InfinityExchange.sol#L1119-L1141
/***@noticeTransfer fees. Fees are always transferred from buyer to the seller and the exchange although seller isthe one that actually 'pays' the fees*@devif the currency ETH, no additional transfer is needed to pay exchange fees since the contract is 'payable'*@paramsellerthe seller*@parambuyerthe buyer*@paramamountamount to transfer*@paramcurrencycurrency of the transfer*/function_transferFees(addressseller,addressbuyer,uint256amount,addresscurrency)internal{// protocol feeuint256protocolFee= (PROTOCOL_FEE_BPS*amount) /10000;uint256remainingAmount=amount-protocolFee;// ETHif(currency==address(0)) {// transfer amount to seller(boolsent, ) =seller.call{value:remainingAmount}('');require(sent,'failed to send ether to seller');
i.e. whencurrencyis ETH the fee part of the amount,protocolFee, is left with the InfinityExchange contract.
The only way to retrieve ETH from the contract is rescueETH() function:
https://github.com/code-423n4/2022-06-infinity/blob/765376fa238bbccd8b1e2e12897c91098c7e5ac6/contracts/core/InfinityExchange.sol#L1228-L1232
/// @dev used for rescuing exchange fees paid to the contract in ETHfunctionrescueETH(addressdestination)externalpayableonlyOwner{(boolsent, ) =destination.call{value:msg.value}('');require(sent,'failed');}
However, it cannot reach ETH on the contract balance asmsg.valueis used as the amount to be sent over. I.e. only ETH attached to the rescueETH() call is transferred fromownertodestination. ETH funds that InfinityExchange contract holds remain inaccessible.
Recommended Mitigation Steps
Consider adding contract balance to the funds transferred:
/// @dev used for rescuing exchange fees paid to the contract in ETHfunctionrescueETH(addressdestination)externalpayableonlyOwner{-   (boolsent, ) =destination.call{value:msg.value}('');+   (boolsent, ) =destination.call{value:address(this).balance}('');require(sent,'failed');}
nneverlander (Infinity) confirmed
HardlyDifficult (judge) commented:
When an order is filled using ETH, the exchange collects fees by holding them in the contract for later withdraw. However the only withdraw mechanism does not work so that ETH becomes trapped forever.This is a High risk issue since some ETH is lost with each ETH based trade.