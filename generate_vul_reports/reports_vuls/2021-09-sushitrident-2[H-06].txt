[H-06]ConcentratedLiquidityPosition.sol#collect()Users may get double the amount of yield when they callcollect()beforeburn()
Submitted by WatchPug
When a user callsConcentratedLiquidityPosition.sol#collect()to collect their yield, it calcuates the yield based onposition.pool.rangeFeeGrowth()andposition.feeGrowthInside0, position.feeGrowthInside1:
ConcentratedLiquidityPosition.sol#L75L101
When there are enough tokens inbento.balanceOf, it will not callposition.pool.collect()to collect fees from the pool.
This makes the user whocollect()their yield when there is enough balance to get double yield when they callburn()to remove liquidity. Becauseburn()will automatically collect fees on the pool contract.
Impact
The yield belongs to other users will be diluted.
Recommended Mitigation Steps
Consider makingConcentratedLiquidityPosition.sol#burn()callposition.pool.collect()beforeposition.pool.burn(). User will need to callConcentratedLiquidityPosition.sol#collect()to collect unclaimed fees afterburn().
OrConcentratedLiquidityPosition.sol#collect()can be changed into apublicmethod andConcentratedLiquidityPosition.sol#burn()can call it afterposition.pool.burn().
sarangparikh22 (Sushi) confirmed