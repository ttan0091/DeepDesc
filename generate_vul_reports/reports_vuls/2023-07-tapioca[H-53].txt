[H-53] Potential 99.5% loss inemergencyWithdraw()of two Yieldbox strategies
Submitted by0xfuje, also found byMadalad,paweenp,carrotsmuggler,kaden,c7e7eff,Brenzee,SaeedAlipoor01988, andVagner
https://github.com/Tapioca-DAO/tapioca-yieldbox-strategies-audit/blob/05ba7108a83c66dada98bc5bc75cf18004f2a49b/contracts/lido/LidoEthStrategy.sol#L108
https://github.com/Tapioca-DAO/tapioca-yieldbox-strategies-audit/blob/05ba7108a83c66dada98bc5bc75cf18004f2a49b/contracts/convex/ConvexTricryptoStrategy.sol#L154
99.5% of user funds are lost to slippage in two Yieldbox strategies in case ofemergencyWithdraw()
Description
Slippage is incorrectly calculated whereminAmountis intended to be 99.5%, however it’s calculated to be only 0.5%, making the other 99.5% sandwichable. The usual correctminAmountslippage calculation in other Yieldbox strategy contracts isuint256 minAmount = calcAmount - (calcAmount * 50) / 10_000;
Calculation logic
InConvexTriCryptoStrategyandLidoEthStrategy-emergencyWithdraw()allows the owner to withdraw all funds from the external pools. the amount withdrawn from the corresponding pool is calculated to be:uint256 minAmount = (calcWithdraw * 50) / 10_000;. This is incorrect and only 0.5% of the withdrawal.
Let’s calculate withcalcWithdraw = 1000as the amount to withdrawn from the pool.uint256 incorrectMinAmount = (1000 * 50) / 10_000 = 5
The correct calculation would look like this:uint256 correctMinAmount = calcWithdraw - (calcWithdraw * 50) / 10_000akauint256 correctMinAmount = 1000 - (1000 * 50) / 10_000 = 995
Withdrawal logic
emergencyWithdraw()of Yieldbox Strategy contracts is meant to remove all liquidity from the corresponding strategy contract’s liquidity pool.
In the case ofLidoStrategythe actual withdraw iscurveStEthPool.exchange(1, 0, toWithdraw, minAmount)which directly withdraws from the Curve StEth pool.
In the case ofConvexTriCryptoStrategyit’slpGetter.removeLiquidityWeth(lpBalance, minAmount)and lpGetter withdraws from the Curve Tri Crypto (USDT/WBTC/WETH) pool viaremoveLiquidityWeth()->_removeLiquidity()->liquidityPool.remove_liquidity_one_coin(_amount, _index, _min).
These transactions are vulnerable to front-running andsandwich attacksso the amount withdrawn is only guaranteed to withdraw theminAmountaka 0.5% from the pool which makes the other 99.5% user funds likely to be lost.
Recommended Mitigation Steps
Fix the incorrectminAmountcalculation to beuint256 minAmount = calcAmount - (calcAmount * 50) / 10_000;inConvexTriCryptoStrategyandLidoEthStrategy.
0xRektora (Tapioca) confirmed via duplicate issue 408