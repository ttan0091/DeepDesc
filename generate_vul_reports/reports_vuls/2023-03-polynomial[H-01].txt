[H-01]Exchange._liquidatefunction can cause liquidator to burn too muchpowerPerptokens
Submitted byrbserver
When calling the followingExchange._liquidatefunction,uint256 totalCollateralReturned = shortCollateral.liquidate(positionId, debtRepaying, msg.sender)is executed.
function_liquidate(uint256positionId,uint256debtRepaying)internal{uint256maxDebtRepayment=shortCollateral.maxLiquidatableDebt(positionId);require(maxDebtRepayment>0);if(debtRepaying>maxDebtRepayment)debtRepaying=maxDebtRepayment;IShortToken.ShortPositionmemoryposition=shortToken.shortPositions(positionId);uint256totalCollateralReturned=shortCollateral.liquidate(positionId,debtRepaying,msg.sender);addressuser=shortToken.ownerOf(positionId);uint256finalPosition=position.shortAmount-debtRepaying;uint256finalCollateralAmount=position.collateralAmount-totalCollateralReturned;shortToken.adjustPosition(positionId,user,position.collateral,finalPosition,finalCollateralAmount);pool.liquidate(debtRepaying);powerPerp.burn(msg.sender,debtRepaying);...}
In the followingShortCollateral.liquidatefunction, when executinguint256 collateralClaim = debt.mulDivDown(markPrice, collateralPrice), wheredebtisdebtRepaying,collateralClaimcan be high ifcollateralPricehas become much lower comparing tomarkPrice, such as due to a market sell-off that causes the collateral to be worth much less than before. In this case,totalCollateralReturnedcan be high as well, which can causetotalCollateralReturned > userCollateral.amountto be true. When such condition is true,totalCollateralReturned = userCollateral.amountis executed, and onlyuserCollateral.amountis transferred to the liquidator after executingERC20(userCollateral.collateral).safeTransfer(user, totalCollateralReturned).
functionliquidate(uint256positionId,uint256debt,addressuser)externaloverrideonlyExchangenonReentrantreturns(uint256totalCollateralReturned){UserCollateralstorageuserCollateral=userCollaterals[positionId];bytes32currencyKey=synthetixAdapter.getCurrencyKey(userCollateral.collateral);Collateralmemorycoll=collaterals[currencyKey];(uint256markPrice,) =exchange.getMarkPrice();(uint256collateralPrice,) =synthetixAdapter.getAssetPrice(currencyKey);uint256collateralClaim=debt.mulDivDown(markPrice,collateralPrice);uint256liqBonus=collateralClaim.mulWadDown(coll.liqBonus);totalCollateralReturned=liqBonus+collateralClaim;if(totalCollateralReturned>userCollateral.amount)totalCollateralReturned=userCollateral.amount;userCollateral.amount-=totalCollateralReturned;ERC20(userCollateral.collateral).safeTransfer(user,totalCollateralReturned);...}
Back in theExchange._liquidatefunction, the liquidator burnsdebtRepayingpowerPerptokens afterpowerPerp.burn(msg.sender, debtRepaying)is executed. However, in this situation, the liquidator only receivesuserCollateral.amountcollateral tokens that are less than the collateral token amount that should be equivalent todebtRepayingpowerPerptokens but this liquidator still burnsdebtRepayingpowerPerptokens. As a result, this liquidator loses the extrapowerPerptokens, which are burnt, that are equivalent to the difference betweendebtRepayingpowerPerptokensâ€™ equivalent collateral token amount anduserCollateral.amountcollateral tokens.
Proof of Concept
The following steps can occur for the described scenario.
Alice calls theExchange._liquidatefunction withdebtRepayingbeing 1000e18.When theShortCollateral.liquidatefunction is called,totalCollateralReturned > userCollateral.amountis true, anduserCollateral.amountcollateral tokens that are equivalent to 500e18powerPerptokens are transferred to Alice.WhenpowerPerp.burn(msg.sender, debtRepaying)is executed in theExchange._liquidatefunction, Alice burns 1000e18powerPerptokens.Because Alice only receivesuserCollateral.amountcollateral tokens that are equivalent to 500e18powerPerptokens, she loses 500e18powerPerptokens.
Tools Used
VSCode
Recommended Mitigation Steps
TheExchange._liquidatefunction can be updated to burn the number ofpowerPerptokens that are equivalent to the actual collateral token amount received by the liquidator instead of burningdebtRepayingpowerPerptokens.
mubaris (Polynomial) confirmed