[H-02] Token Change Can Be Frontrun, Blocking Token
Submitted by philogy, also found by berndartmueller and Lambda
https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBTokenStore.sol#L246
https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBTokenStore.sol#L266
https://github.com/jbx-protocol/juice-contracts-v2-code4rena/blob/828bf2f3e719873daa08081cfa0d0a6deaa5ace5/contracts/JBController.sol#L605
Impact
This vulnerability allows malicious actors to block other users from changing tokens of their projects. Furthermore if ownership over the token contract is transferred to theJBTokenStorecontract prior to the change, as suggested in therecourse section of Juicebox’s 24.05.2022 post-mortem update, this vulnerability would allow an attacker to become the owner of tokens being transferred. ForJBTokenbased tokens this would allow an attacker to begin issuing arbitrary amounts the token that was meant to be transferred.
Proof of Concept
Exploit scenario:
Wanting to assign their token to their JB project an unsuspecting owner / admin transfers ownership to aJBTokenStorecontract, either directly by callingtransferOwnershipon the token or indirectly by calling thechangeFormethod on an olderJBTokenStorecontract with_newOwnerset as the newJBTokenStorecontract. (For the newer Juicebox contracts theJBControllercontract’schangeTokenOfmethod would be called)Seeing this change an attacker submits achangeTokenForcalling transaction to the newJBControllercontract, triggering theJBTokenStorecontract’schangeFormethod, linking it to one of the attacker’s projects (this could be created in advance or as part of the same transaction via an attack contract)The attacker can then gain ownership over the token by callingchangeTokenForagain with the_newOwnerset to the attacker’s addressAssuming the token has an owner restrictedmintmethod likeJBTokenbased tokens the attacker can now mint an arbitrary amount of the token
Recommended Mitigation Steps
Before allowing a caller to change to a specific token ensure that they have control over it. This can be achieved by storing a list of trusted older JB directories and projects which are then queried. Alternatively the contract could require the caller to actually be the.owner()address of the token to migrate, this would require admins to:
CallchangeTokenOfwith themselves as the new ownerCall the new change token method on the newer contract, since they are the owner they’d pass the checkIndependently transfer the ownership to the new token store to ensure that it can issue tokens
Future migrations can be made more seamless by having older contracts directly call new contracts via a sub-call, removing a necessary transaction for the admin. The newer contracts needs to verify that the older contract is the owner address of the token that’s being set and also has approval of the project owner which is being configured.
mejango (Juicebox) confirmed and commented:
Nice. The project should firstchangeTokenand then transfer ownership.
mejango (Juicebox) resolved:
PR with fix:PR #1
berndartmueller (warden) reviewed mitigation:
Changing an already set project token is not possible anymore.