[H-09]USDV.solMint and Burn Amounts Are Incorrect
Submitted by leastwood, also found by TomFrenchBlockchain
TheUSDV.mintfunction queries the price ofVaderfrom theLiquidityBasedTwapcontract. The calculation to determineuAmountinmintis actually performed incorrectly.uAmount = (vPrice * vAmount) / 1e18;will return theUSDamount for the providedVaderasvPriceis denominated inUSD/Vader. ThisuAmountis subsequently used when minting tokens for the user (locked for a period of time) and fee to the contract owner.
This same issue also applies to howvAmount = (uPrice * uAmount) / 1e18;is calculated inUSDV.burn.
This is a severe issue, as themintandburnfunctions will always use an incorrect amount of tokens, leading to certain loss by either the protocol (if the user profits) or the user (if the user does not profit).
Proof of Concept
https://github.com/code-423n4/2021-12-vader/blob/main/contracts/tokens/USDV.sol#L66-L98
function mint(uint256 vAmount)externalonlyWhenNotLockedreturns (uint256 uAmount){uint256 vPrice = lbt.getVaderPrice();vader.transferFrom(msg.sender, address(this), vAmount);vader.burn(vAmount);uAmount = (vPrice * vAmount) / 1e18;if (cycleTimestamp <= block.timestamp) {cycleTimestamp = block.timestamp + 24 hours;cycleMints = uAmount;} else {cycleMints += uAmount;require(cycleMints <= dailyLimit,"USDV::mint: 24 Hour Limit Reached");}if (exchangeFee != 0) {uint256 fee = (uAmount * exchangeFee) / _MAX_BASIS_POINTS;uAmount = uAmount - fee;_mint(owner(), fee);}_mint(address(this), uAmount);_createLock(LockTypes.USDV, uAmount);}
https://github.com/code-423n4/2021-12-vader/blob/main/contracts/tokens/USDV.sol#L100-L120
function burn(uint256 uAmount)externalonlyWhenNotLockedreturns (uint256 vAmount){uint256 uPrice = lbt.getUSDVPrice();_burn(msg.sender, uAmount);vAmount = (uPrice * uAmount) / 1e18;if (exchangeFee != 0) {uint256 fee = (vAmount * exchangeFee) / _MAX_BASIS_POINTS;vAmount = vAmount - fee;vader.mint(owner(), fee);}vader.mint(address(this), vAmount);_createLock(LockTypes.VADER, vAmount);}
Recommended Mitigation Steps
Consider utilising bothgetVaderPriceandgetUSDVPricewhen calculating the expecteduAmountandvAmountto mint or burn. To calculateuAmountinmint,vPriceshould be denominated inUSDV/Vader. To calculatevAmountinburn,uPriceshould be denominated inVader/USDV. It would be useful to add unit tests to test this explicitly as it is expected that users will interact with theUSDV.solcontract frequently.
0xstormtrooper (Vader) disputed and commented:
Mint / burn calculation with USD is intentional, modeled after LUNA / UST.Mint USDV1 USD worth of Vader should mint 1 USDVBurn USDV1 USDV should mint 1 USD worth of Vaderhttps://docs.terra.money/Concepts/Protocol.html#expansion-and-contraction