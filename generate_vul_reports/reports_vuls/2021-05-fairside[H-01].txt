[H-01] Conviction scoring fails to initialize and bootstrap
Conviction scores for new addresses/users fail to initialize+bootstrap inERC20ConvictionScore’s_updateConvictionScore()because a new user’snumCheckpointswill be zero and never gets initialized.
This effectively means that FairSide conviction scoring fails to bootstrap at all, leading to the failure of the protocol’s pivotal feature.
When Alice transfers FSD tokens to Bob for the first time,_beforeTokenTransfer(Alice, Bob, 100)is triggered which calls_updateConvictionScore(Bob, 100)on Line55 of ERC20ConvictionScore.sol.
In function_updateConvictionScore(), given that this is the first time Bob is receiving FSD tokens,numCheckpoints[Bob]will be 0 (Line116) which will makets = 0(Line120), and Bob’s FSD balance will also be zero (Bob never has got FSD tokens prior to this) which makesconvictionDelta = 0(Line122) and not let control go past Line129.
This means that a new checkpoint never gets written, i.e., conviction score never gets initialized, for Bob or for any user for that matter.
FairSide’s adjustment of Compound’s conviction scoring is based on time and therefore needs an initialization to take place vs Compound’s implementation. Therefore, a new checkpoint needs to be created+initialized for a new user during token transfer.
fairside-core (FairSide) confirmed:
Fixed inPR#18.