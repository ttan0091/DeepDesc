[H-05] Position owners can deny liquidations
Submitted byJGcarv
Lines of code
https://github.com/code-423n4/2023-04-frankencoin/blob/main/contracts/Position.sol#L159https://github.com/code-423n4/2023-04-frankencoin/blob/main/contracts/Position.sol#L307
Impact
The owner of a vulnerable position can deny being liquidated by setting the price to betype(uint256).max, making every call totryAvertChallengefail due to an overflow.
This means that if it’s advantageous enough the owner can choose to keepzchfand leave the collateral stuck. This could happen in any scenario where a collateral is likely to loose it’s value, for example, de-pegs, runs on the bank, etc.
Test Proof
Here’s a snippet that can be pasted onGeneralTest.t.sol:
functiontest_liquidationDenial()public{test01Equity();// ensure there is some equity to burnaddressposAddress=initPosition();Positionpos=Position(posAddress);skip(15*86_400+60);alice.mint(address(pos),1001);vm.prank(address(alice));pos.adjustPrice(type(uint256).max);col.mint(address(bob),1001);uint256first=bob.challenge(hub,posAddress,1001);bob.obtainFrankencoins(swap,55_000ether);vm.expectRevert();bob.bid(hub,first,10_000ether);skip(7*86_400+60);vm.expectRevert();hub.end(first,false);}
0xA5DF (lookout) commented:
I think the real issue here is that you can’t end the challenge (as shown in the last line of the PoC), that will cause a loss of funds for challenger and disincentivize users from challenging the position.
luziusmeisser (Frankencoin) confirmed and commented:
Ouch, this is a good one.
hansfriese (judge) commented:
Great finding with coded POC. As the presort mentioned, the impact is the same as#670, but this has a different exploit path. Satisfactory.