[H-05]Approvalis not reset if the call toIFulfillHelperfails
Submitted by pauliax, also found by 0xsanson, cmichel and shw
The functionfulfillfirst approves thecallToto transfer an amount oftoSendtokens and tries to callIFulfillHelper, but if the call fails, it transfers these assets directly. However, in such case the approval is not reset, so a malicouscallTocan pull these tokens later:
// First, approve the funds to the helper if neededif(!LibAsset.isEther(txData.receivingAssetId) &&toSend>0) {require(LibERC20.approve(txData.receivingAssetId,txData.callTo,toSend),"fulfill: APPROVAL_FAILED");}// Next, call `addFunds` on the helper. Helpers should internally// track funds to make sure no one user is able to take all funds// for txif(toSend>0) {tryIFulfillHelper(txData.callTo).addFunds{ value:LibAsset.isEther(txData.receivingAssetId) ?toSend:0}(txData.user,txData.transactionId,txData.receivingAssetId,toSend){}catch{// Regardless of error within the callData execution, send funds// to the predetermined fallback addressrequire(LibAsset.transferAsset(txData.receivingAssetId,payable(txData.receivingAddress),toSend),"fulfill: TRANSFER_FAILED");}}
Tuesday, August 10, 2021Recommend thatapprovalshould be placed inside the try/catch block orapprovalneeds to be reset if the call fails.
LayneHaber (Connext) confirmed and patched:
https://github.com/connext/nxtp/pull/39