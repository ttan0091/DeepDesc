[H-05]_vested()claimable amount calculation error
Submitted bybin2chen, also found bybin2chen,immeas,KIntern_NA,ronnyx2017, anddeadrxsezzz
TheVesting._vested()method is used to calculate the maximum claimable amount for the current user. The calculation formula is as follows:(_totalAmount * (block.timestamp - _start)) / _duration. If there is an__initialUnlockTimeOffset, it needs to be subtracted from_startbefore performing the calculation, i.e.,_start = _start - __initialUnlockTimeOffset.
function_vested(uint256_totalAmount)internalviewreturns(uint256) {uint256_cliff=cliff;uint256_start=start;uint256_duration=duration;if(_start==0)return0;// Not startedif(_cliff>0) {_start=_start+_cliff;// Apply cliff offsetif(block.timestamp<_start)return0;// Cliff not reached}@>if(block.timestamp>=_start+_duration)return_totalAmount;// Fully vested_start=_start-__initialUnlockTimeOffset;// Offset initial unlock so it's claimable immediatelyreturn(_totalAmount* (block.timestamp-_start)) /_duration;// Partially vested}
The issue with the code snippet above is that the check for being “Fully vested” is incorrect; it does not take into account the__initialUnlockTimeOffset. The correct approach should be:if (block.timestamp >= _start - __initialUnlockTimeOffset + _duration) return _totalAmount;// Fully vested. Resulting in calculations that may be greater than the maximum number_totalAmount
Example:_totalAmount = 500 , duration = 1000 __initialUnlockTimeOffset = 100 start = 1000 block.timestamp= 1999becauseblock.timestamp < start + duration(1999 < 1000 + 1000) it will not returnFully vested.
Final calculation result:
start =start - __initialUnlockTimeOffset = 1000 - 100 = 900.
return =(_totalAmount * (block.timestamp - _start)) / _duration = 500 * (1999 - 900) / 1000 = 549.5.
It is greater 49.5 than the maximum_totalAmount=500.
Impact
Users can `claim’ more than they should.
Recommended Mitigation
function _vested(uint256 _totalAmount) internal view returns (uint256) {uint256 _cliff = cliff;uint256 _start = start;uint256 _duration = duration;if (_start == 0) return 0; // Not startedif (_cliff > 0) {_start = _start + _cliff; // Apply cliff offsetif (block.timestamp < _start) return 0; // Cliff not reached}-       if (block.timestamp >= _start + _duration) return _totalAmount; // Fully vested+       if (block.timestamp >= _start -  __initialUnlockTimeOffset + _duration) return _totalAmount; // Fully vested_start = _start - __initialUnlockTimeOffset; // Offset initial unlock so it's claimable immediatelyreturn (_totalAmount * (block.timestamp - _start)) / _duration; // Partially vested}
cryptotechmaker (Tapioca) confirmed, but disagreed with severity and commented via duplicate Issue #167
PRhere.