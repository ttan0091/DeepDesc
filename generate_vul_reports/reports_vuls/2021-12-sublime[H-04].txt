[H-04] Yearn token <> shares conversion decimal issue
Submitted by cmichel
The yearn strategyYearnYieldconverts shares to tokens by doingpricePerFullShare * shares / 1e18:
function getTokensForShares(uint256 shares, address asset) public view override returns (uint256 amount) {if (shares == 0) return 0;// @audit should divided by vaultDecimalsamount = IyVault(liquidityToken[asset]).getPricePerFullShare().mul(shares).div(1e18);}
But Yearnâ€™sgetPricePerFullShareseems to beinvault.decimals()precision, i.e., it should convert it aspricePerFullShare * shares / (10 ** vault.decimals()).
The vault decimals are the sameas the underlying token decimals
Impact
The token and shares conversions do not work correctly for underlying tokens that do not have 18 decimals.
Too much or too little might be paid out leading to a loss for either the protocol or user.
Recommended Mitigation Steps
Divide by10**vault.decimals()instead of1e18ingetTokensForShares.
Apply a similar fix ingetSharesForTokens.
ritik99 (Sublime) confirmed