[H-03] Borrower has no way to updatemaxTotalSupplyofmarketor close market.
Submitted by0xpiken, also found byAymen0909,MiloTruck,Fulum,0xCiphky,max10afternoon,tallo,Drynooo,cartlex_,HALITUS, gumgumzum (1,2),CaeraDenoir,serial-coder,stackachu,0xkazim,josephdara,Toshii, DeFiHackLabs (1,2), SpicyMeatball (1,2), ZdravkoHr (1,2),nirlin,radev_sw,TuringConsulting,nonseodion,Yanchuan, hash (1,2),erictee,jasonxiale,_nd_koo,0xhegel,gizzy,sl1, QiuhaoLi (1,2),trachev,smiling_heretic,crunch,LokiThe5th,said,lanrebayode77,circlelooper,SovaSlava,osmanozdemir1,Mike_Bello90,TrungOre,Silvermist, Vagner (1,2),kodyvim,deth, ke1caM (1,2),Jiamin, 0xStalin (1,2),almurhasan,peter,audityourcontracts,ggg_ttt_hhh,AM, Eigenvectors (1,2),3docSec,Juntao, marqymarq10 (1,2), 0xComfyCat (1,2), rvierdiiev (1,2),ayden,squeaky_cactus,cu5t0mpeo,zaevlad,HChang26, and T1MOH (1,2)
Without the ability to updatemaxTotalSupply,borrowerhas no way to raise more assets in a specific market. Even worse,borrowerhas to pay extra interest for unused assets all the time becauseborrowerhas no way to reduce the max total supply of the market.
Similarly,borrowerhas to pay extra interest to the no-longer-used market all the time because there is no way to close it.
Proof of Concept
There are access controls on functionssetMaxTotalSupply()andcloseMarket(), and onlyWildcatMarketControlleris allowed to access them; however, there is not a function inWildcatMarketControllerallowing theborrowerto access them.
Recommended Mitigation Steps
AddsetMaxTotalSupply()andcloseMarket()inWildcatMarketControllerto allow theborroweraccess these functions:
functionsetMaxTotalSupply(addressmarket,uint256_maxTotalSupply)externalonlyBorrower{WildcatMarket(market).setMaxTotalSupply(_maxTotalSupply);}functioncloseMarket(addressmarket)externalonlyBorrower{WildcatMarket(market).closeMarket();}
Assessed type
Access Control
laurenceday (Wildcat) commented:
Mitigatedhereandhere.Lodging a protest against the High Risk decision, however:Markets could stilleffectivelybe closed by all lenders redeeming their market tokens; the borrower handling these repayments ad hoc and the borrower removing all lenders from the appropriate controller to prevent future deposits. No funds are at risk here.The inability to increase or decrease the capacity from the controller - which can lead to more interest accruing to a lender that refuses to withdraw - is not a matter of funds being “lost” but rather a grieving.In either case, assets arenotat direct riskwhile in the market: the definition of High Risk as given by the label is “assets can be stolen/lost/compromised directly”.This does not apply here. It’s certainly a Medium; however, and a valuable finding in and of itself.
0xTheC0der (judge) commented:
I partially agree with the sponsor. However, if the protocol was deployed with this bug, it would lack 2 core functionalities.A protocol being fully functional as intended, which is crucial to attract and keep customers/users with funds in the long term, can be considered a valuable asset itself.Although Medium severity is predestined for this category of findings which impede the function of a protocol, High severity seems justified given the impact.The following might further clarify my reasoning:Please also consider that not all findings that lead to lost or stolen funds will strictly yield a High severity finding, since it depends on the amount of funds at risk.In contrast, not every impeded functionality will only yield Medium severity.
laurenceday (Wildcat) confirmed and commented:
Fair enough - not going to throw toys out of the pram over semantics. Appreciate the feedback!