[H-11]lending-market/Note.solWrong implementation of access control
Submitted by WatchPug, also found by catchup, Lambda, p4st13r4, and Tutturu
https://github.com/Plex-Engineer/lending-market/blob/b93e2867a64b420ce6ce317f01c7834a7b6b17ca/contracts/Note.sol#L13-L31
function_mint_to_Accountant(addressaccountantDelegator)external{if(accountant==address(0)) {_setAccountantAddress(msg.sender);}require(msg.sender==accountant,"Note::_mint_to_Accountant: ");_mint(msg.sender,type(uint).max);}functionRetAccountant()publicviewreturns(address) {returnaccountant;}function_setAccountantAddress(addressaccountant_)internal{if(accountant!=address(0)) {require(msg.sender==admin,"Note::_setAccountantAddress: Only admin may call this function");}accountant=accountant_;admin=accountant;}
_mint_to_Accountant()calls_setAccountantAddress()whenaccountant == address(0), which will always be the case when_mint_to_Accountant()is called for the first time.
And_setAccountantAddress()only checks ifmsg.sender == adminwhenaccountant != address(0)which will always befalse, therefore the access control is not working.
L17 will then check ifmsg.sender == accountant, now it will always be the case, because at L29,accountantwas set tomsg.sender.
tkkwon1998 (Canto) confirmed
Alex the Entreprenerd (judge) commented:
The warden has shown how, due to a flaw in logic, via a front-run, anyone can become theaccountantand mint all the totalSupply to themselves.While I’m not super confident on severity for the front-run as I’d argue the worst case is forcing a re-deploy, the warden has shown a lack of logic in the checks (msg.sender == admin) which breaks it’s invariants.For that reason, I think High Severity to be appropriate.