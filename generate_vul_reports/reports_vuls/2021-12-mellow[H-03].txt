[H-03]UniV3Vault.sol#collectEarnings()can be front run
Submitted by WatchPug
ForUniV3Vault, it seems that lp fees are collected throughcollectEarnings()callable by thestrategyand reinvested (rebalanced).
However, in the current implementation, unharvested yields are not included intvl(), making it vulnerable to front-run attacks that steal pending yields.
https://github.com/code-423n4/2021-12-mellow/blob/6679e2dd118b33481ee81ad013ece4ea723327b5/mellow-vaults/contracts/UniV3Vault.sol#L100-L122https://github.com/code-423n4/2021-12-mellow/blob/6679e2dd118b33481ee81ad013ece4ea723327b5/mellow-vaults/contracts/UniV3Vault.sol#L80-L97
Proof Of Concept
Given:
Currenttvl()is10 ETHand40,000 USDC;Current unclaimed yields (trading fees) is1 ETHand4,000 USDC;strategycallscollectEarnings()to collect fees and reinvest;The attacker sends a deposit tx with a higher gas price to deposit10 ETHand40,000 USDC, take 50% share of the pool;After the transaction in step 1 is packed, the attacker callswithdraw()and retrieves10.5 ETHand42,000 USDC.
As a result, the attacker has stolen half of the pending yields in about 1 block of time.
Recommendation
Consider including fees intvl().
For the code to calculate fees earned, please reference_computeFeesEarned()in G-UNI project:
https://github.com/gelatodigital/g-uni-v1-core/blob/master/contracts/GUniPool.sol#L762-L806
MihanixA (Mellow Protocol) confirmed:
Thanks!
AddedtokensOwedtoUniV3Vaultâ€™stvl