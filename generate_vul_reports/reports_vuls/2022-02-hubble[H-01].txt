[H-01] Update initializer modifier to prevent reentrancy during initialization
Submitted by Dravee
https://github.com/code-423n4/2022-02-hubble/blob/main/package.json#L17https://github.com/code-423n4/2022-02-hubble/blob/main/contracts/legos/Governable.sol#L5https://github.com/code-423n4/2022-02-hubble/blob/main/contracts/legos/Governable.sol#L24
While Governable.sol is out of scope, I figured this issue would still be fair game.
The solution uses:"@openzeppelin/contracts": "4.2.0".This dependency has a known high severity vulnerability:https://security.snyk.io/vuln/SNYK-JS-OPENZEPPELINCONTRACTS-2320176Which makes this contract vulnerable:
File: Governable.sol05: import { Initializable } from "@openzeppelin/contracts/proxy/utils/Initializable.sol";...24: contract Governable is VanillaGovernable, Initializable {}
This contract is inherited at multiple places:
contracts/AMM.sol:11: contract AMM is IAMM, Governable {contracts/InsuranceFund.sol:13: contract InsuranceFund is VanillaGovernable, ERC20Upgradeable {contracts/Oracle.sol:11: contract Oracle is Governable {contracts/legos/HubbleBase.sol:15: contract HubbleBase is Governable, Pausable, ERC2771Context {contracts/ClearingHouse.sol:11: contract ClearingHouse is IClearingHouse, HubbleBase {contracts/MarginAccount.sol:25: contract MarginAccount is IMarginAccount, HubbleBase {
Ã¬nitializer()` is used here:
contracts/AMM.sol:99:     ) external initializer {contracts/ClearingHouse.sol:44:     ) external initializer {contracts/MarginAccount.sol:124:     ) external initializer {contracts/Oracle.sol:20:     function initialize(address _governance) external initializer {
Recommended Mitigation Steps
Upgrade@openzeppelin/contractsto version 4.4.1 or higher.
atvanguard (Hubble) confirmed and resolved
moose-code (judge) commented:
Agreed. Other issues such asthishave also popped up, so always safest to be on the newest OZ. This includes for contracts and contracts-upgradeable packages.