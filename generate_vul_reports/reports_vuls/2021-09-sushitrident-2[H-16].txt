[H-16] Possible attacks on Seconds * Liquidity calculation
This is a possible line of attack on the staking contract, in particular theclaimReward()function:ConcentratedLiquidityPoolManager.sol#L90L94
A user with some spare capital mints a liquidity position with a very tight range (1-2 ticks wide) at the current price. Because the range is so small, his position.liquidity on his NFT is large (DyDxMath.sol).The user then sets up a bot to frontrun any price changes that someone else tries to do, burning his position after claiming rewards. He then mints a new liquidity position at the new price after the other persons trades go through.Rinse and repeat this process. If done correctly, no funds are at risk from the bot owner, he doesn’t pay any fees for burning/minting either.
So what you have left is a sequence of positions with high position.liquidity and in the correct price range all the time, without taking on any risk. Thereby stealing incentive funds.
The lines below reward the bot owner with a large amount of the token:
ConcentratedLiquidityPoolManager.sol#L90L94Recommendation:
Lock the positions during a set time while they are staked.
sarangparikh22 (Sushi) disputed:
This seems very unlikely to happen and does not affect the pool, it’s equivalent to just re balancing your position.
alcueca (judge) commented:
@sarangparikh22 (Sushi), Isn’t the warden describing a Just In Time liquidity pattern?
sarangparikh22 (Sushi) acknowledged:
@alcueca (judge) yes exactly, even done right, the bot would still face huge IL. We don’t intend to solve this.