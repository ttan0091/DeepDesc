[H-02] Swivel: Taker is charged fees twice in exitVaultFillingVaultInitiate
Submitted by itsmeSTYJ, also found by gpersoon.
Impact
Taker is charged fees twice inexitVaultFillingVaultInitiate(). Maker is transferring less than premiumFilled to taker and then taker is expected to pay fees i.e. taker’s net balance is premiumFilled - 2*fee
Recommended Mitigation Steps
functionexitVaultFillingVaultInitiate(Hash.Ordercalldatao,uint256a, Sig.Componentscalldatac)internal{bytes32hash=validOrderHash(o,c);require(a<= (o.principal-filled[hash]),'taker amount > available volume');filled[hash] +=a;uint256premiumFilled= (((a*1e18) /o.principal) *o.premium) /1e18;uint256fee= ((premiumFilled*1e18) /fenominator[3]) /1e18;Erc20uToken=Erc20(o.underlying);// transfer premium from maker to senderuToken.transferFrom(o.maker,msg.sender,premiumFilled);// transfer fee in underlying to swivel from senderuToken.transferFrom(msg.sender,address(this),fee);// transfer <a> vault.notional (nTokens) from sender to makerrequire(MarketPlace(marketPlace).p2pVaultExchange(o.underlying,o.maturity,msg.sender,o.maker,a),'vault exchange failed');emitExit(o.key,hash,o.maker,o.vault,o.exit,msg.sender,a,premiumFilled);}
JTraversa (Swivel) confirmed
0xean (judge) commented:
Based on3 — High: Assets can be stolen/lost/compromised directly (or indirectly if there is a valid attack path that does not have hand-wavy hypotheticals).This is being upgraded to a high risk. The duplicate of it was at that level by the submitting warden and considering that fees are being incorrectly taken from the taker and not the maker, the maker ends up with a higher balance than expected and the taker has no way to recoup these fees (assets are now lost).
JTraversa (Swivel) commented:
Is that how it is interpreted? I’d assume that high risk would imply a valid attack path that a user could use to drain deposited funds based on that description.I won’t fight this one obviously, just think there’s acleardifferentiation between this and the other high risk issue.