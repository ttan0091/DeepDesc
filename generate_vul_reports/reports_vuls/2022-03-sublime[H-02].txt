[H-02]PooledCreditLine: termination likely fails because_principleWithdrawableis treated as shares
Submitted by hickuphh3, also found by rayn and WatchPug
LenderPool.sol#L404-L406
_principalWithdrawableis denominated in the borrowAsset, but subsequently treats it as the share amount to be withdrawn.
// _notBorrowed = borrowAsset amount that isn't borrowed// totalSupply[_id] = ERC1155 total supply of _id// _borrowedTokens = borrower's specified borrowLimituint256_principalWithdrawable=_notBorrowed.mul(totalSupply[_id]).div(_borrowedTokens);SAVINGS_ACCOUNT.withdrawShares(_borrowAsset,_strategy,_to,_principalWithdrawable.add(_totalInterestInShares),false);
Recommended Mitigation Steps
The amount of shares to withdraw can simply be_sharesHeld.
Note that this comes with the assumption thatterminate()is only called when the credit line isACTIVEorEXPIRED(consider ensuring this condition on-chain), because_sharesHeldexcludes principal withdrawals,so the function will fail once a lender withdraws his principal.
functionterminate(uint256_id,address_to)externaloverrideonlyPooledCreditLinenonReentrant{address_strategy=pooledCLConstants[_id].borrowAssetStrategy;address_borrowAsset=pooledCLConstants[_id].borrowAsset;uint256_sharesHeld=pooledCLVariables[_id].sharesHeld;SAVINGS_ACCOUNT.withdrawShares(_borrowAsset,_strategy,_to,_sharesHeld,false);deletepooledCLConstants[_id];deletepooledCLVariables[_id];}
ritik99 (Sublime) confirmed