[H-03] Collateral NFT deposited to a wrong address, when transferred directly toPaprController
Submitted byJeiwan, also found byKoolex,Ruhum, androtcivegaf
Users will lose collateral NFTs when they are transferred toPaprControllerby an approved address or an operator.
Proof of Concept
ThePaprControllerallows users to deposit NFTs as collateral to borrow Papr tokens. One way of depositing is by transferring an NFT to the contract directly via a call tosafeTransferFrom: the contract implements theonERC721Receivedhook that will handle accounting of the transferred NFT (PaprController.sol#L159). However, the hook implementation uses a wrong argument to identify token owner: the first argument, which is used by the contract to identify token owner, is the address of thesafeTransferFromfunction caller, which may be an approved address or an operator. The actual owner address is the second argument (ERC721.sol#L436):
tryIERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,data)returns(bytes4retval) {
Thus, when an NFT is sent by an approved address or an operator, itâ€™ll be deposited to the vault of the approved address or operator:
// test/paprController/OnERC721ReceivedTest.solfunctiontestSafeTransferByOperator_AUDIT()public{addressoperator=address(0x12345);vm.prank(borrower);nft.setApprovalForAll(operator,true);vm.prank(operator);nft.safeTransferFrom(borrower,address(controller),collateralId,abi.encode(safeTransferReceivedArgs));// NFT was deposited to the operator's vault.IPaprController.VaultInfomemoryvaultInfo=controller.vaultInfo(operator,collateral.addr);assertEq(vaultInfo.count,1);// Borrower has 0 tokens in collateral.vaultInfo=controller.vaultInfo(borrower,collateral.addr);assertEq(vaultInfo.count,0);}functiontestSafeTransferByApproved_AUDIT()public{addressapproved=address(0x12345);vm.prank(borrower);nft.approve(approved,collateralId);vm.prank(approved);nft.safeTransferFrom(borrower,address(controller),collateralId,abi.encode(safeTransferReceivedArgs));// NFT was deposited to the approved address's vault.IPaprController.VaultInfomemoryvaultInfo=controller.vaultInfo(approved,collateral.addr);assertEq(vaultInfo.count,1);// Borrower has 0 tokens in collateral.vaultInfo=controller.vaultInfo(borrower,collateral.addr);assertEq(vaultInfo.count,0);}
Recommended Mitigation Steps
Consider this change:
--- a/src/PaprController.sol+++ b/src/PaprController.sol@@ -156,7 +156,7 @@ contract PaprController is/// @param _id the id of the NFT/// @param data encoded IPaprController.OnERC721ReceivedArgs/// @return selector indicating succesful receiving of the NFT-    function onERC721Received(address from, address, uint256 _id, bytes calldata data)+    function onERC721Received(address, address from, uint256 _id, bytes calldata data)externaloverridereturns (bytes4)
wilsoncusack (Backed) confirmed