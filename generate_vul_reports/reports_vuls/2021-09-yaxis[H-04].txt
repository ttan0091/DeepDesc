[H-04] Controller does not raise an error when there’s insufficient liquidity
Submitted by jonah1005, also found by 0xRajeev and WatchPug
Impact
When a user tries to withdraw the token from the vault, the vault would withdraw the token from the controller if there’s insufficient liquidity in the vault. However, the controller does not raise an error when there’s insufficient liquidity in the controller/ strategies. The user would lose his shares while getting nothing.
An MEV searcher could apply this attack on any withdrawal. When an attacker found an unconfirmed tx that tries to withdraw 1M dai, he can do such sandwich attack.
Deposits USDC into the vault.Withdraw all dai left in the vault/controller/strategy.Place the vitims tx here. The victim would get zero dai while burning 1 M share.This would pump the share price.Withdraw all liquidity.
All users would be vulnerable to MEV attackers. I consider this is a high-risk issue.
Proof of Concept
Here’s web3.py script to reproduce the issue.
deposit_amount =100000*10**18user = w3.eth.accounts[0]get_token(dai, user, deposit_amount)dai.functions.approve(vault.address, deposit_amount + margin_deposit).transact()vault.functions.deposit(dai.address, deposit_amount).transact()vault.functions.withdrawAll(usdt.address).transact()#print("usdt amount: ", usdt.functions.balanceOf(user).call())
Recommended Mitigation Steps
There are two issues involved.
First, users pay the slippage when they try to withdraw. I do not find this fair. Users have to pay extra gas to withdraw liquidity from strategy, convert the token, and still paying the slippage. I recommend writing a view function for the frontend to display how much slippage the user has to pay (Controler.sol L448-L479).
Second, the controller does not revert the transaction there’s insufficient liquidity (Controller.sol#L577-L622).
Recommend to revert the transaction when_amountis not equal to zero after the loop finishes.
GainsGoblin (yAxis) acknowledged
GalloDaSballo (judge) commented:
Agree with warden finding, this shows the path for an attack that is based on the Vault treating all tokens equally
Since the finding shows a specific attack, the finding is uniqueRecommend the sponsor mitigates Single Sided Exposure risks to avoid this attack
BobbyYaxis (yAxis) noted:
We have mitigated by deploying vaults that only accept the Curve LP token itself used in the strategy. There is no longer an array of tokens accepted. E.g Instead of a wBTC vault, we have a renCrv vault. Or instead of 3CRV vault, we have a mimCrv vault. The strategy want token = the vault token.