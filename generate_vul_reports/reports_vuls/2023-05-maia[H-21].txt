[H-21] Missing the unwrapping of native token inRootBridgeAgent.sweep()causes fees to be stuck
Submitted bypeakbolt, also found byVoyvoda,xuwinnie, andkodyvim
RootBridgeAgent.sweep()will fail as it tries to transferaccumulatedFeesusingSafeTransferLib.safeTransferETH()but fails to unwrap the fees by withdrawing fromwrappedNativeToken.
Impact
TheaccumulatedFeeswill be stuck inRootBridgeAgentwithout any functions to withdraw them.
Proof of Concept
Add the below test case toRootTest.t.sol:
function testPeakboltSweep() public {//Set uptestAddLocalTokenArbitrum();//Prepare databytes memory packedData;{Multicall2.Call[] memory calls = new Multicall2.Call[](1);//Mock actioncalls[0] = Multicall2.Call({target: 0x0000000000000000000000000000000000000000, callData: ""});//Output ParamsOutputParams memory outputParams = OutputParams(address(this), newAvaxAssetGlobalAddress, 150 ether, 0);//RLP Encode Calldata Call with no gas to bridge out and we top up.bytes memory data = abi.encode(calls, outputParams, ftmChainId);//Pack FuncIdpackedData = abi.encodePacked(bytes1(0x02), data);}address _user = address(this);//Get some gas.hevm.deal(_user, 1 ether);hevm.deal(address(ftmPort), 1 ether);//assure there is enough balance for mock actionhevm.prank(address(rootPort));ERC20hTokenRoot(newAvaxAssetGlobalAddress).mint(address(rootPort), 50 ether, rootChainId);hevm.prank(address(avaxPort));ERC20hTokenBranch(avaxMockAssethToken).mint(_user, 50 ether);//Mint Underlying Token.avaxMockAssetToken.mint(_user, 100 ether);//Prepare deposit infoDepositInput memory depositInput = DepositInput({hToken: address(avaxMockAssethToken),token: address(avaxMockAssetToken),amount: 150 ether,deposit: 100 ether,toChain: ftmChainId});console2.log("accumulatedFees (BEFORE) = %d", multicallBridgeAgent.accumulatedFees());//Call Deposit functionavaxMockAssetToken.approve(address(avaxPort), 100 ether);ERC20hTokenRoot(avaxMockAssethToken).approve(address(avaxPort), 50 ether);uint128 remoteExecutionGas = 4e9;uint128 depositedGas = 1e11;avaxMulticallBridgeAgent.callOutSignedAndBridge{value: depositedGas }(packedData, depositInput, remoteExecutionGas);console2.log("accumulatedFees (AFTER)  = %d", multicallBridgeAgent.accumulatedFees());console2.log("WETH Balance = %d ", multicallBridgeAgent.wrappedNativeToken().balanceOf(address(multicallBridgeAgent)));console2.log("ETH Balance = %d ", address(multicallBridgeAgent).balance);// sweep() will fail as it does not unwrap the WETH before the ETH transfermulticallBridgeAgent.sweep();}
Recommended Mitigation Steps
AddwrappedNativeToken.withdraw(_accumulatedFees);tosweep()before transferring.
0xBugsy (Maia) confirmed, but disagreed with severity
Trust (judge) commented:
Funds are permanently stuck; therefore, high severity is appropriate.
0xBugsy (Maia) commented:
We recognize the auditâ€™s findings on Anycall. These will not be rectified due to the upcoming migration of this section to LayerZero.