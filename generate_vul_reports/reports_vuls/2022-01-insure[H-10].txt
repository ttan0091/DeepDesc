[H-10] A malicious/compromised Registry or Factory admin can drain all the funds from the Vault contracts
Submitted by WatchPug
https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/Vault.sol#L52-L58
modifieronlyMarket() {require(IRegistry(registry).isListed(msg.sender),"ERROR_ONLY_MARKET");_;}
https://github.com/code-423n4/2022-01-insure/blob/19d1a7819fe7ce795e6d4814e7ddf8b8e1323df3/contracts/Vault.sol#L201-L206
functionborrowValue(uint256_amount,address_to)externalonlyMarketoverride{debts[msg.sender] +=_amount;totalDebt+=_amount;IERC20(token).safeTransfer(_to,_amount);}
The current design/implementation allows a market address (registered on theregistry) to callVault#borrowValue()and transfer tokens to an arbitrary address.
Proof of Concept
See the PoC section on [WP-H24].
Recommendation
Consider adding constrains (eg. timelock) toRegistry#supportMarket().Consdier adding constrains (upper bound for each pool, and index pool for example) toVault#borrowValue().
oishun1112 (Insure) acknowledged and disagreed with severity:
Ownership has to be stolen to drain funds using this method and we assume ownership control driven safely, so we don’t treat this as issue
0xean (judge) commented:
Agree with warden that the privilege addresses should not be able to use approvals in a way that rugs users funds.Based on the fact that we have seen many rug pulls in the space based on compromised “owner” keys, this is a valid attack path.3 — High: Assets can be stolen/lost/compromised directly (or indirectly if there is a valid attack path that does not have hand-wavy hypotheticals).