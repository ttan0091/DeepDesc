[H-09] WETH.sol computes the wrongtotalSupply()
Submitted by p4st13r4, also found by hansfriese, Ruhum, TerrierLover, WatchPug, and zzzitron
Affected code:
https://github.com/Plex-Engineer/lending-market/blob/ab31a612be354e252d72faead63d86b844172761/contracts/WETH.sol#L47
WETH.solis almost copied from the infamous WETH contract that lives in mainnet. This contract is supposed to receive the native currency of the blockchain (for example ETH) and wrap it into a tokenized, ERC-20 form. This contract computes thetotalSupply()using the balance of the contract itself stored in thebalanceOfmapping, when instead it should be using the nativebalancefunction. This way,totalSupply()always returns zero as theWETHcontract itself has no way of callingdepositto itself and increase its own balance
Proof of Concept
Alice transfers 100 ETH toWETH.solAlice callsbalanceOf()for her address and it returns 100 WETHAlice callstotalSupply(), expecting to see 100 WETH, but it returns 0
Tools Used
Editor
Recommended Mitigation Steps
functiontotalSupply()publicviewreturns(uint) {returnaddress(this).balance}
tkkwon1998 (Canto) confirmed
Alex the Entreprenerd (judge) commented:
The warden has shown how, due to a programming mistake, the WETH totalSupply will be incorrect.Mitigation seems straightforward, however, because the vulnerability would have causes totalSupply to return 0, and shows a broken functionality for a core contract, I think High Severity to be appropriate