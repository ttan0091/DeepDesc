[H-01] MEV miner can mint larger than expected UDT total supply
Submitted by elprofesor
UnlockProtocolattempts to calculate gas reimbursement usingtx.gasprice, typically users who falsifytx.gaspricewould lose gas to miners and therefore not obtain any advantage over the protocol itself. This does present capabilities for miners to extract value, as they can submit their own transactions, or cooperate with a malicious user, reimbursing a portion (or all) or thetx.gaspriceused. As the following calculation is made;
uint tokensToDistribute = (estimatedGasForPurchase * tx.gasprice) * (125 * 10 ** 18) / 100 / udtPrice;
we can see that arbitrarytx.gaspricescan rapidly inflate thetokensToDistribute. Though capped at maxTokens, this value can be up to half the total supply of UDT, which could dramatically affect the value of UDT potentially leading to lucrative value extractions outside of the pool.
Recommended Mitigation Steps
Using an oracle service to determine the average gas price and ensuring it is within some normal bounds that has not been subjected to arbitrary value manipulation.
julien51 (Unlock Protocol) disputed and commented:
we can see that arbitrary tx.gasprices can rapidly inflate the tokensToDistribute. Though capped at maxTokens, this value can be up to half the total supply of UDT, which could dramatically affect the value of UDT potentially leading to lucrative value extractions outside of the pool.As you noted it would be capped by the actual increase of the GDP transaction.However we could indeed use an oracle to determine the average gas price over a certain number of blocks to limit the risk even further.
0xleastwood (judge) commented:
I think the warden has raised a valid issue of value extractions. Whether the value extracted is capped at a certain number of tokens, I don’t think the issue is nullified as a result. Miners can realistically fill up blockspace by abusing this behaviour and then selling netted tokens on the open market. I’ll consider marking this asmedium, what do you think @julien51 ?
0xleastwood (judge) commented:
I thinkmaxTokenswill be set toIMintableERC20(udt).totalSupply() / 2upon the first call torecordKeyPurchase(). If I’m not mistaken, this could allow a malicious miner could effectively distribute half of the token supply in one tx.
0xleastwood (judge) commented:
After further offline discussions with @julien51. We agree that this is an issue that needs to be addressed.If we consider real-world values forIMintableERC20(udt).totalSupply()andIMintableERC20(udt).totalSupply()as1_000_000e18and400e18respectively. Then a miner could mint up to ~1247UDTtokens valued at $USD 124,688 if they provide a single Ether as their purchase amount. Obviously this can be abused to generate a huge amount of profit for miners, so as this is a viable way to extract value from the protocol, I will be keeping this ashighseverity.