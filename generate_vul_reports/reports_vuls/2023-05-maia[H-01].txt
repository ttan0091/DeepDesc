[H-01] If a STRATEGY TOKEN is “Toggled off” STRATEGIES will still be able to withdraw, but returning of tokens withreplenishReserveswill be disabled.
Submitted byyellowBirdy
Lines of code
https://github.com/code-423n4/2023-05-maia/blob/54a45beb1428d85999da3f721f923cbf36ee3d35/src/ulysses-omnichain/BranchPort.sol#L158-L169
https://github.com/code-423n4/2023-05-maia/blob/54a45beb1428d85999da3f721f923cbf36ee3d35/src/ulysses-omnichain/BranchPort.sol#L172-L186
Impact
BranchPort.manageallows a registered Strategy to withdraw certain amounts of enabled strategy tokens. It validates access rights; i.e. if called by a strategy registered for the requested token. However, it doesn’t check to see if the token itself is currently enabled.
Conversely,BranchPort.replenishTokensallows a forced withdrawal of managed tokens from a strategy. However, it performs a check to see if the token is currently an active strategy token.
A strategy token may be disabled bytoggleStrategyToken()even if there are active strategies managing it actively. In such cases, these strategies will still be able to withdraw the tokens with calls tomanage()whilereplenishTokenswill not be callable on them; thus, tokens won’t be forced as returnable.
Recommended Mitigation Steps
Add a check on the enabled strategy token inmanage().ValidategetPortStrategyTokenDebt[_strategy][_token] > 0instead of!isStrategyToken[_token]inreplenishReserves().
Assessed type
Access Control
0xBugsy (Maia) confirmed
0xLightt (Maia) commented:
Addressedhere.