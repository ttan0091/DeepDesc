[H-03] Malicious owner can drain the market at any time usingSafetyWithdraw
Submitted by 0xRajeev, also found by pauliax and gpersoon
ThewithdrawERC20Token()inSafetyWithdrawinherited inTracerPerpetualSwapsis presumably a guarded launch emergency withdrawal mechanism. However, given the trust model where the market creator/owner is potentially untrusted/malicious, this is a dangerous approach to emergency withdrawal in the context of guarded launch.
Alternatively, if this is meant for the owner to withdraw “external” ERC20 tokens mistakenly deposited to the Tracer market, then the function should excludetracerQuoteTokenfrom being thetokenAddressthat can be used as a parameter towithdrawERC20Token().
The impact of this is that, if a malicious owner of a market withdraws/rugs alltracerQuoteTokens deposited at any time after market launch, all users lose deposits and the protocol takes a reputational hit and has to refund the users from treasury.
Therefor, it is recommended that, for a guarded launch circuit breaker, design a pause/unpause feature where deposits are paused (in emergency situations) but withdrawals are allowed by the depositors themselves instead of the owner. Alternatively, if this is meant to be for removing external ERC20 tokens accidentally deposited to market, exclude thetracerQuoteTokenfrom being given as thetokenAddress.
raymogg (Tracer) confirmed but suggested a severity of 2:
The only reason for the dispute on severity is that as part of the security model, the owner can manipulate the market in other ways (such as changing the oracle being used), so this trust assumption over the owner already exists. For this reason the team thinks this issue is closer to a mediumThis however is a good issue as it is not the greatest circuit breaking mechanism, and as noted in #7 can reflect badly on the project without the exploit being used. The mechanism is being removed and replaced with more structured circuit breaker.
cemozerr (Judge) commented:
Marking this as high risk, as regardless of the owner manipulating in other ways, the threat persists.