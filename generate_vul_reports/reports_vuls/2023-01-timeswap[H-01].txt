[H-01] Rebalance logic is wrong and this distorts the pool’s important states
Submitted byhansfriese
The important states includinglong0Balance, long1Balance, long1FeeGrowth, long1ProtocolFeesare wrongly calculated and it breaks the pool’s invariant.
Proof of Concept
The protocol provides a rebalancing functionality and the main logic is implemented in the libraryPool.sol.
Ifparam.isLong0ToLong1is true and the transaction isTimeswapV2PoolRebalance.GivenLong1, the protocol calculates thelong1AmountAdjustFeesfirst and the actuallong0Amount, longFeesand the finallong1Balanceis decided accordingly.
The problem is it is using the wrong parameterpool.long0Balancewhile it is supposed to usepool.long1Balancein the line L679.
This leads to wrong state calculation in the following logic. (especially L685 is setting thelong1Balanceto zero).
Furthermore, the protocol is designed as a permission-less one and anyone can callTimeswapV2Pool.rebalance().
An attacker can abuse this to break the pool’s invariant and take profit leveraging that.
packages\v2-pool\src\structs\Pool.sol665:functionrebalance(Poolstoragepool,TimeswapV2PoolRebalanceParammemoryparam,uint256transactionFee,uint256protocolFee)externalreturns(uint256long0Amount,uint256long1Amount) {666:if(pool.liquidity==0)Error.requireLiquidity();667:668:// No need to update short fee growth.669:670:uint256longFees;671:if(param.isLong0ToLong1) {672:if(param.transaction==TimeswapV2PoolRebalance.GivenLong0) {673:                 (long1Amount,longFees) =ConstantSum.calculateGivenLongIn(param.strike,long0Amount=param.delta,transactionFee,true);674:675:if(long1Amount==0)Error.zeroOutput();676:677:pool.long1Balance-= (long1Amount+longFees);678:             }elseif(param.transaction==TimeswapV2PoolRebalance.GivenLong1) {//************************************************************679:uint256long1AmountAdjustFees=FeeCalculation.removeFees(pool.long0Balance,transactionFee);//@audit-info long0Balance -> long1Balance//************************************************************680:681:if((long1Amount=param.delta) ==long1AmountAdjustFees) {682:long0Amount=ConstantSum.calculateGivenLongOutAlreadyAdjustFees(param.strike,pool.long1Balance,true);683:684:longFees=pool.long1Balance.unsafeSub(long1Amount);685:pool.long1Balance=0;686:                 }else{687:                     (long0Amount,longFees) =ConstantSum.calculateGivenLongOut(param.strike,long1Amount,transactionFee,true);688:689:pool.long1Balance-= (long1Amount+longFees);690:                 }691:692:if(long0Amount==0)Error.zeroOutput();693:             }694:695:pool.long0Balance+=long0Amount;696:697:             (pool.long1FeeGrowth,pool.long1ProtocolFees) =FeeCalculation.update(pool.liquidity,pool.long1FeeGrowth,pool.long1ProtocolFees,longFees,protocolFee);698:         }else{699:if(param.transaction==TimeswapV2PoolRebalance.GivenLong0) {700:uint256long0AmountAdjustFees=FeeCalculation.removeFees(pool.long0Balance,transactionFee);//@audit-info701:702:if((long0Amount=param.delta) ==long0AmountAdjustFees) {703:long1Amount=ConstantSum.calculateGivenLongOutAlreadyAdjustFees(param.strike,pool.long0Balance,false);704:705:longFees=pool.long0Balance.unsafeSub(long0Amount);706:pool.long0Balance=0;707:                 }else{708:                     (long1Amount,longFees) =ConstantSum.calculateGivenLongOut(param.strike,long0Amount,transactionFee,false);709:710:pool.long0Balance-= (long0Amount+longFees);711:                 }712:713:if(long1Amount==0)Error.zeroOutput();714:             }elseif(param.transaction==TimeswapV2PoolRebalance.GivenLong1) {715:                 (long0Amount,longFees) =ConstantSum.calculateGivenLongIn(param.strike,long1Amount=param.delta,transactionFee,false);716:717:if(long0Amount==0)Error.zeroOutput();718:719:pool.long0Balance-= (long0Amount+longFees);720:             }721:722:pool.long1Balance+=long1Amount;723:724:             (pool.long0FeeGrowth,pool.long0ProtocolFees) =FeeCalculation.update(pool.liquidity,pool.long0FeeGrowth,pool.long0ProtocolFees,longFees,protocolFee);725:         }726:     }
Recommended Mitigation Steps
Fix the L679 as below.
uint256long1AmountAdjustFees=FeeCalculation.removeFees(pool.long1Balance,transactionFee);
vhawk19 (Timeswap) confirmed and resolved:
Fixed hereat this commit.