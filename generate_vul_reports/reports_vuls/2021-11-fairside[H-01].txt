[H-01] Anyone Can Arbitrarily CallFSDVesting.updateVestedTokens()
Submitted by leastwood, also found by cmichel, hickuphh3, hyh, rfa, and WatchPug
Impact
TheupdateVestedTokens()function is intended to be called by theFSD.solcontract when updating a userâ€™s vested token amount. A check is performed to ensure that_user == beneficiary, however, as_useris a user controlled argument, it is possible to spoof calls toupdateVestedTokens()such that anyone can arbitrarily add any amount to the vested contract. Additionally, there is no check to ensure that the call originated from a trusted/whitelisted source.
There are two main reasons as to why the beneficiary or an attacker would want to call this function:
To increase the vested amount such thatcalculateVestingClaim()allows them to withdraw their entire vested amount without waiting the entire duration.An attacker wishes to block withdrawals from other vested contracts by preventing successful calls toclaimVestedTokens()by the beneficiary account. This can be done by increasing the vested amount such thatsafeTransfer()calls fail due to insufficient token balance within the contract.
Proof of Concept
https://github.com/code-423n4/2021-11-fairside/blob/main/contracts/token/FSDVesting.sol#L147-L161https://github.com/code-423n4/2021-11-fairside/blob/main/contracts/token/FSDVesting.sol#L100-L115https://github.com/code-423n4/2021-11-fairside/blob/main/contracts/token/FSDVesting.sol#L125https://github.com/code-423n4/2021-11-fairside/blob/main/contracts/token/FSDVesting.sol#L134
Tools Used
Manual code review.
Discussions with dev.
Recommended Mitigation Steps
Ensure that theupdateVestedTokens()function is only callable from theFSD.solcontract. This can be done by implementing anonlyFSDrole.
YunChe404 (FairSide) confirmed