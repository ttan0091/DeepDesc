[H-46] TOFT leverageDown always fails if TOFT is a wrapper for native tokens
Submitted bywindhustler
Pathway forsendForLeverage->leverageDownalways fails if theTapiocaOFTormTapiocaOFTholds the native token as underlying, i.e.erc20 == address(0).
This results in loss of gas, airdropped amount, and burned TOFT on the sending side for the user.
The failed message if retried will always fail and result in permanent loss for the user.
Proof of Concept
TapiocaOFT/mTapiocaOFT is deployed witherc20 being address(0)in case if it holds the native token as an underlying token.
However, it still allows anyone to execute thesendForLeveragewhich always results in reverts when receiving the message.
The revert happens atIERC20(erc20).approve(externalData.swapper, amount);sinceaddress(0)doesnâ€™t have anapprovefunction.
The message if retried will just keep on reverting because of the same reason due to the way thefailedMessagesare stored, e.g. you can just retry the same exact payload.
This way anyone invoking this function will lose his TOFT tokens forever.
Recommended Mitigation Steps
DisablesendForLeveragefunction if theTapiocaOFTormTapiocaOFTholds the native token as underlying, e.g. revert on the sending side.
0xRektora (Tapioca) confirmed