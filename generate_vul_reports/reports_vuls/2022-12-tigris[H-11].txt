[H-11] Not enough margin pulled or burned from user when adding to a position
Submitted byminhtrng, also found byAymen0909,hansfriese,0Kage,Jeiwan,bin2chen,KingNFT,HollaDieWaldfee, andrvierdiiev
When adding to a position, the amount of margin pulled from the user is not as much as it should be, which leaks value from the protocol, lowering the collateralization ratio oftigAsset.
Proof of Concept
InTrading.addToPositionthe_handleDepositfunction is called like this:
_handleDeposit(_trade.tigAsset,_marginAsset,_addMargin-_fee,_stableVault,_permitData,_trader);
The third parameter with the value of_addMargin - _feeis the amount pulled (or burned in the case of usingtigAsset) from the user. The_feevalue is calculated as part of the position size like this:
uint_fee=_handleOpenFees(_trade.asset,_addMargin*_trade.leverage/1e18,_trader,_trade.tigAsset,false);
The_handleOpenFeesfunction mints_tigAssetto the referrer, to themsg.sender(if called by a function meant to be executed by bots) and to the protocol itself. Those minted tokens are supposed to be part of the_addMarginvalue paid by the user. Hence using_addMargin - _feeas the third parameter to_handleDepositis going to pull or burn less margin than what was accounted for.
An example for correct usage can be seen ininitiateMarketOrder:
uint256_marginAfterFees=_tradeInfo.margin-_handleOpenFees(_tradeInfo.asset,_tradeInfo.margin*_tradeInfo.leverage/1e18,_trader,_tigAsset,false);uint256_positionSize=_marginAfterFees*_tradeInfo.leverage/1e18;_handleDeposit(_tigAsset,_tradeInfo.marginAsset,_tradeInfo.margin,_tradeInfo.stableVault,_permitData,_trader);
Here the third parameter to_handleDepositis not_marginAfterFeesbut_tradeInfo.marginwhich is what the user has input on and is supposed to pay.
Recommended Mitigation Steps
InTrading.addToPositioncall the_handleDepositfunction without subtracting the_feevalue:
_handleDeposit(_trade.tigAsset,_marginAsset,_addMargin,_stableVault,_permitData,_trader);
TriHaz (Tigris Trade) confirmed
Alex the Entreprenerd (judge) increased severity to High and commented:
The Warden has shown how, due to an incorrect computation, less margin is used when adding to a position.While the loss of fees can be considered Medium Severity, I believe that the lack of checks is ultimately allowing for more leverage than intended which not only breaks invariants but can cause further issues (sponsor cited Fees as a defense mechanism against abuse).For this reason, I believe the finding to be of High Severity.
GainsGoblin (Tigris Trade) resolved:
Mitigation:https://github.com/code-423n4/2022-12-tigris/pull/2#issuecomment-1419177303