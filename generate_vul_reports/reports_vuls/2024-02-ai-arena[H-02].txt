[H-02] Non-transferableGameItemscan be transferred withGameItems::safeBatchTransferFrom(...)
Submitted byAamir, also found bym4ttm,vnavascues,visualbits,Fulum,peter,GhK3Ndf,shaka,sandy,alexxander,thank_you,evmboi32,0xprinc,Limbooo,denzi_,grearlake,Greed,korok,josephdara,juancito,ZanyBonzy,Breeje,hulkvision,KmanOfficial,CodeWasp,DeFiHackLabs,0xaghas,MidgarAudits,Ryonen,alexzoid,n0kto,immeas,Aymen0909,jaydhales,sashik_eth,soliditywala,0xLogos,0x13,Tendency,0xpoor4ever,PedroZurdo,merlinboii,ni8mare,BARW,israeladelaja,0xlyov,Draiakoo,petro_1912,ADM,Krace,0x11singh99,McToady,ktg,0xCiphky,MrPotatoMagic,0xWallSecurity,cats,nuthan2x,ladboy233,0xAsen,stackachu,deadrxsezzz,0xvj,_eperezok,pkqs90,Josh4324,web3pwn,jnforja,Jorgect,SovaSlava,btk,pynschon,blutorque,lil_eth,0xE1,fnanni,Bauchibred,devblixt,tpiliposian,erosjohn,Pelz,ubl4nk,cartlex_,krikolkk,Kalogerone,kutugu,zhaojohnson,shaflow2,pa6kuda,djxploit,solmaxis69,0rpse,0xlemon,0xKowalski,SpicyMeatball,novamanbg,DMoore,jesjupyter,csanuragjain,0xBinChook,matejdb,tallo,aslanbek,0xAlix2,sobieski,kiqo,dimulski,xchen1130,0xbranded,oualidpro,Timenov,haxatron,klau5, andal88nsk
TheGamesItemscontract fails to appropriately override and include essential checks within thesafeBatchTransferFromfunction, enabling the transfer of non-transferrable Game Items.
Impact
While theGamesItemscontract allows for the designation of Game Items as either transferrable or non-transferrable through different states and overrides theERC1155::safeTransferFrom(...)function accordingly, it neglects to override theERC1155::safeBatchTransferFrom(...)function. This oversight permits users to transfer Game Items that were intended to be non-transferrable.
Proof of Concept
Here is a test for PoC:
NOTE: Include the below given test inGameItems.t.sol.
functiontestNonTransferableItemCanBeTransferredWithBatchTransfer()public{// funding owner address with 4k $NRN_fundUserWith4kNeuronByTreasury(_ownerAddress);// owner minting itme_gameItemsContract.mint(0,1);// checking that the item is minted correctlyassertEq(_gameItemsContract.balanceOf(_ownerAddress,0),1);// making the item non-transferable_gameItemsContract.adjustTransferability(0,false);vm.expectRevert();// trying to transfer the non-transferable item. Should revert_gameItemsContract.safeTransferFrom(_ownerAddress,_DELEGATED_ADDRESS,0,1,"");// checking that the item is still in the owner's accountassertEq(_gameItemsContract.balanceOf(_DELEGATED_ADDRESS,0),0);assertEq(_gameItemsContract.balanceOf(_ownerAddress,0),1);// transferring the item using safeBatchTransferFromuint256[]memoryids=newuint256[](1);ids[0] =0;uint256[]memoryamounts=newuint256[](1);amounts[0] =1;_gameItemsContract.safeBatchTransferFrom(_ownerAddress,_DELEGATED_ADDRESS,ids,amounts,"");// checking that the item is transferred to the delegated addressassertEq(_gameItemsContract.balanceOf(_DELEGATED_ADDRESS,0),1);assertEq(_gameItemsContract.balanceOf(_ownerAddress,0),0);}
Output:
┌──(aamirusmani1552㉿Victus)-[/mnt/d/ai-arena-audit]└─$ forgetest--mt testNonTransferableItemCanBeTransferredWithBatchTransfer[⠒] Compiling...[⠃] Compiling 1 files with 0.8.13[⠒] Solc 0.8.13 finishedin1.77sCompiler run successful!Running 1testfortest/GameItems.t.sol:GameItemsTest[PASS]testNonTransferableItemCanBeTransferredWithBatchTransfer() (gas: 190756)Test result: ok. 1 passed; 0 failed; 0 skipped; finishedin1.32msRan 1testsuites: 1 tests passed, 0 failed, 0 skipped (1 total tests)
Tools Used
Foundry
Recommended Mitigation Steps
It is recommended to override thesafeBatchTransferFrom(...)function and include the necessary checks to prevent the transfer of non-transferrable Game Items.
+    function safeBatchTransferFrom(+        address from,+        address to,+        uint256[] memory ids,+        uint256[] memory amounts,+        bytes memory data+    ) public override(ERC1155) {+        for(uint256 i; i < ids.length; i++{+            require(allGameItemAttributes[ids[i]].transferable);+        }+        super.safeBatchTransferFrom(from, to, ids, amounts, data);+    }
Or, consider overriding the_safeBatchTransferFrom(...)function as follows:
+    function _safeBatchTransferFrom(+        address from,+        address to,+        uint256[] memory ids,+        uint256[] memory amounts,+        bytes memory data+    ) internal override(1155) {+        require(ids.length == amounts.length, "ERC1155: ids and amounts length mismatch");+        require(to != address(0), "ERC1155: transfer to the zero address");++        address operator = _msgSender();++        _beforeTokenTransfer(operator, from, to, ids, amounts, data);++        for (uint256 i = 0; i < ids.length; ++i) {+            require(+            uint256 id = ids[i];+            uint256 amount = amounts[i];+           require(allGameItemAttributes[id].transferable);+            uint256 fromBalance = _balances[id][from];+            require(fromBalance >= amount, "ERC1155: insufficient balance for transfer");+            unchecked {+                _balances[id][from] = fromBalance - amount;+            }+            _balances[id][to] += amount;+        }++        emit TransferBatch(operator, from, to, ids, amounts);++        _afterTokenTransfer(operator, from, to, ids, amounts, data);++        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);+    }
brandinho (AI Arena) confirmed
hickuphh3 (judge) increased severity to High
AI Arena mitigated:
Fixed Non-transferableGameItemsbeing transferred withGameItems::safeBatchTransferFrom.https://github.com/ArenaX-Labs/2024-02-ai-arena-mitigation/pull/4
Status:Mitigation confirmed. Full details in reports fromniser93,d3e4, andfnanni.