[H-14]Redeemer.sol#redeem()can be called by anyone before maturity, which may lead to loss of user funds
Submitted by WatchPug, also found by csanuragjain, datapunk, and Lambda
functionredeem(uint8p,addressu,uint256m)publicreturns(bool) {// Get the principal token that is being redeemed by the useraddressprincipal=IMarketPlace(marketPlace).markets(u,m,p);// Make sure we have the correct principalif(p!=uint8(MarketPlace.Principals.Swivel) &&p!=uint8(MarketPlace.Principals.Element) &&p!=uint8(MarketPlace.Principals.Yield) &&p!=uint8(MarketPlace.Principals.Notional)) {revertInvalid('principal');}// The amount redeemed should be the balance of the principal token held by the Illuminate contractuint256amount=IERC20(principal).balanceOf(lender);// Transfer the principal token from the lender contract to hereSafe.transferFrom(IERC20(principal),lender,address(this),amount);if(p==uint8(MarketPlace.Principals.Swivel)) {// Redeems zc tokens to the sender's addressISwivel(swivelAddr).redeemZcToken(u,m,amount);}elseif(p==uint8(MarketPlace.Principals.Element)) {// Redeems principal tokens from elementIElementToken(principal).withdrawPrincipal(amount,marketPlace);}elseif(p==uint8(MarketPlace.Principals.Yield)) {// Redeems prinicipal tokens from yieldIYieldToken(principal).redeem(address(this),address(this),amount);}elseif(p==uint8(MarketPlace.Principals.Notional)) {// Redeems the principal token from notionalamount=INotional(principal).maxRedeem(address(this));}emitRedeem(p,u,m,amount);returntrue;}
There are some protocols (eg Notional) that allows redeem before maturity, when doing so, they will  actually make a market sell, usually means a discounted sale.
Sinceredeem()is a public function, anyone can call it before maturity, and force the whole protocol to sell itâ€™s holdings at a discounted price, causing fund loss to the stake holders.
https://github.com/notional-finance/wrapped-fcash/blob/8f76be58dda648ea58eef863432c14c940e13900/contracts/wfCashERC4626.sol#L155-L169
functionpreviewRedeem(uint256shares)publicviewoverridereturns(uint256assets) {if(hasMatured()) {assets=convertToAssets(shares);}else{// If withdrawing non-matured assets, we sell them on the market (i.e. borrow)(uint16currencyId,uint40maturity) =getDecodedID();(assets,/* */,/* */,/* */) =NotionalV2.getPrincipalFromfCashBorrow(currencyId,shares,maturity,0,block.timestamp);}}
Recommendation
Consider only allow unauthenticated call after maturity.
JTraversa (Illuminate) confirmed