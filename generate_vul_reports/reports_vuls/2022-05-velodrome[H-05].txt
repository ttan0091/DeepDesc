[H-05] Voting overwritescheckpoint.votedin last checkpoint, so users can just vote right before claiming rewards
Submitted by smiling_heretic
Gauge.sol#L195Gauge.sol#L489-L490Gauge.sol#L499-L500
if (cp0.voted) {reward += cp0.balanceOf * (_rewardPerTokenStored1 - _rewardPerTokenStored0) / PRECISION;
this line ingauge.earnedfunction looks like the intention here is to incentivize users to keep theirescrow.balanceOfNftvoted for this gauge.
However, it’s enough to vote just before claiming rewards (even in the same transaction) andvoter.resetjust after receiving rewards to pass thisifand get rewards for full period since last interaction with the gauge.
Proof of Concept
Seeoriginal submissionfor test file.
Note, that Bob kept his votes for this gauge for full 6-day period but Alice just voted before claiming rewards. In logs, we can see that they both received the same (non-zero) amount of VELO tokens.
Alice can reset her votes in the same transaction after claiming rewards, if she decides to do so.
Tools Used
Foundry
Recommended Mitigation Steps
A partial solution would be to create a new checkpoint each time user’svotedstatus changes (setVoteStatusis called) instead of overwriting thevotedin last one.
However, even then, users can just assign very small weight to this gauge, and lock very little VELO, so I don’t think thisifstatement helps with anything. I think, it’s better to rethink how to incentivize users to vote for specific gauges.
pooltypes (Velodrome) acknowledged and commented:
Patched in mainnet deployment.
Alex the Entreprenerd (judge) increased severity to High and commented:
The warden has found a way to sidestep the loss of rewards that automatically happens due to the faulty checkpoint system that always sets voted to false.In doing so they also showed how the system can fall apart and provided a POC to replicate.Because I’ve rated issues related to thevotedcheckpoints and loss of rewards with High Severity, at this time I believe this finding should also be bumped as it shows how the system is broken and the way to avoid a loss of rewards.The sponsor seems to have remedied by deleting the voted logic.