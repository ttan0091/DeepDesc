[H-02] Locked funds are debited twice from the user during tokenization leading to fund loss
During tokenization of conviction scores, the user can optionally provide FSDs to be locked to let it continue conviction accrual. However, the amount of FSDs specified for locking are debited from the user twice, leading to fund loss.
This, in effect, forces the user to unknowingly and unintentionally lock twice the amount of FSD tokens, leading to a loss of the specified ‘locked’ number of tokens.
Alice decides to tokenize her conviction score into an NFT and specifies 100 FSD tokens to be locked in her call totokenizeConviction(100). 100 FSD tokens are transferred from her FSD balance toFairSideConvictioncontract on Line282 ofERC20ConvictionScore.sol. However, inFairSideConviction.createConvictionNFT(), the specified locked amount is transferred again from Alice to the contract on Line50 ofFairSideConviction.sol.
The impact is that Alice wanted to lock only 100 FSD tokens, but the FairSide protocol has debited 200 tokens from her balance leading to a loss of 100 FSD tokens.
Recommend removing the redundant transfer of FSD tokens on Line282 intokenizeConviction()ofERC20ConvictionScore.sol.