[H-08] AccountantDelegate: The sweepInterest function sweeps an incorrect number of cnote
Submitted by cccz, also found by Critical
In the sweepInterest function of the AccountantDelegate contract, the number of cnote sent to treasury should be cNoteToSweep instead of amtToSweep, as amtToSweep will normally be smaller than cNoteToSweep, which will cause the interest to be locked in the in the contract.
uint amtToSweep = sub_(cNoteAmt, noteDiff); // amount to sweep in Note,uint cNoteToSweep = div_(amtToSweep, exRate); // amount of cNote to sweep = amtToSweep(Note) / exRatecNoteToSweep = (cNoteToSweep > cNoteBal) ? cNoteBal :  cNoteToSweep;bool success = cnote.transfer(treasury, amtToSweep);if (!success) {revert  SweepError(treasury , amtToSweep); //handles if transfer of tokens is not successful}TreasuryInterface Treas = TreasuryInterface(treasury);Treas.redeem(address(cnote),amtToSweep);
Proof of Concept
https://github.com/Plex-Engineer/lending-market-v2/blob/ea5840de72eab58bec837bb51986ac73712fcfde/contracts/Accountant/AccountantDelegate.sol#L80-L99
Recommended Mitigation Steps
uint amtToSweep = sub_(cNoteAmt, noteDiff); // amount to sweep in Note,uint cNoteToSweep = div_(amtToSweep, exRate); // amount of cNote to sweep = amtToSweep(Note) / exRatecNoteToSweep = (cNoteToSweep > cNoteBal) ? cNoteBal :  cNoteToSweep;-		bool success = cnote.transfer(treasury, amtToSweep);+               bool success = cnote.transfer(treasury, cNoteToSweep);if (!success) {-			revert  SweepError(treasury , amtToSweep); //handles if transfer of tokens is not successful+                       revert  SweepError(treasury , cNoteToSweep); //handles if transfer of tokens is not successful}TreasuryInterface Treas = TreasuryInterface(treasury);-		Treas.redeem(address(cnote),amtToSweep);+               Treas.redeem(address(cnote),cNoteToSweep);
nivasan1 (Canto) confirmed
Alex the Entreprenerd (judge) commented:
The warden has shown that the wrong variable is being used as the transferAmount.BecausecNoteToSweep<<amtToSweepthere will be many instances in which the function will revert.Because the finding shows incorrect functionality, which can leave the tokens stuck indefinitely, I agree with High Severity.