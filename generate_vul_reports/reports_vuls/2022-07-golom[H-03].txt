[H-03] GolomTrader’s_settleBalancesdouble counts protocol fee, reducing taker’s payout for a NFT sold
Submitted by hyh, also found by 0x52, 0xSky, auditor0517, ElKu, kaden, Krow10, Lambda, Limbooo, obront, rbserver, rotcivegaf, RustyRabbit, scaraven, wastewa, and zzzitron
Currently(o.totalAmt * 50) / 10000)protocol fee share is multiplied byamounttwice when being accounted for as a deduction from the total in amount due to themsg.sendertaker calculations in _settleBalances(), which is called by fillBid() and fillCriteriaBid() to handle the payouts.
Setting the severity to be high as reduced payouts is a fund loss impact for taker, which receives less than it’s due wheneveramount > 1.
Notice that the amount lost to the taker is left on the contract balance and currently is subject to other vulnerabilities, i.e. can be easily stolen by an attacker that knowns these specifics and tracks contract state. When these issues be fixed this amount to be permanently frozen on the GolomTrader’s balance as it’s unaccounted for in all subsequent calculations (i.e. all the transfers are done with regard to the accounts recorded, this extra sum is unaccounted, there is no general native funds rescue function, so when all other mechanics be fixed the impact will be permanent freeze of the part of taker’s funds).
Proof of Concept
_settleBalances() uses(o.totalAmt - protocolfee - ...) * amount, which iso.totalAmt * amount - ((o.totalAmt * 50) / 10000) * amount * amount - ..., counting protocol fee extraamount - 1times:
https://github.com/code-423n4/2022-07-golom/blob/e5efa8f9d6dda92a90b8b2c4902320acf0c26816/contracts/core/GolomTrader.sol#L389-L399
payEther((o.totalAmt-protocolfee-o.exchange.paymentAmt-o.prePayment.paymentAmt-o.refererrAmt) *amount-p.paymentAmt,msg.sender);}else{payEther((o.totalAmt-protocolfee-o.exchange.paymentAmt-o.prePayment.paymentAmt) *amount-p.paymentAmt,msg.sender);
https://github.com/code-423n4/2022-07-golom/blob/e5efa8f9d6dda92a90b8b2c4902320acf0c26816/contracts/core/GolomTrader.sol#L375-L400
function_settleBalances(Ordercalldatao,uint256amount,addressreferrer,Paymentcalldatap)internal{uint256protocolfee= ((o.totalAmt*50) /10000) *amount;WETH.transferFrom(o.signer,address(this),o.totalAmt*amount);WETH.withdraw(o.totalAmt*amount);payEther(protocolfee,address(distributor));payEther(o.exchange.paymentAmt*amount,o.exchange.paymentAddress);payEther(o.prePayment.paymentAmt*amount,o.prePayment.paymentAddress);if(o.refererrAmt>0&&referrer!=address(0)) {payEther(o.refererrAmt*amount,referrer);payEther((o.totalAmt-protocolfee-o.exchange.paymentAmt-o.prePayment.paymentAmt-o.refererrAmt) *amount-p.paymentAmt,msg.sender);}else{payEther((o.totalAmt-protocolfee-o.exchange.paymentAmt-o.prePayment.paymentAmt) *amount-p.paymentAmt,msg.sender);}
Say, ifamount = 6, while((o.totalAmt * 50) / 10000) = 1 ETH,6 ETHis totalprotocolfeeand needs to be removed fromo.totalAmt * 6to calculate taker’s part, while1 ETH * 6 * 6 = 36 ETHis actually removed in the calculation, i.e.36 - 6 = 30 ETHof taker’s funds will be frozen on the contract balance.
Recommended Mitigation Steps
Consider accounting foramountonce, for example:
https://github.com/code-423n4/2022-07-golom/blob/e5efa8f9d6dda92a90b8b2c4902320acf0c26816/contracts/core/GolomTrader.sol#L375-L403
function_settleBalances(Ordercalldatao,uint256amount,addressreferrer,Paymentcalldatap)internal{-uint256protocolfee= ((o.totalAmt*50) /10000) *amount;+uint256protocolfee= ((o.totalAmt*50) /10000);WETH.transferFrom(o.signer,address(this),o.totalAmt*amount);WETH.withdraw(o.totalAmt*amount);-payEther(protocolfee,address(distributor));+payEther(protocolfee*amount,address(distributor));payEther(o.exchange.paymentAmt*amount,o.exchange.paymentAddress);payEther(o.prePayment.paymentAmt*amount,o.prePayment.paymentAddress);if(o.refererrAmt>0&&referrer!=address(0)) {payEther(o.refererrAmt*amount,referrer);payEther((o.totalAmt-protocolfee-o.exchange.paymentAmt-o.prePayment.paymentAmt-o.refererrAmt) *amount-p.paymentAmt,msg.sender);}else{payEther((o.totalAmt-protocolfee-o.exchange.paymentAmt-o.prePayment.paymentAmt) *amount-p.paymentAmt,msg.sender);}payEther(p.paymentAmt,p.paymentAddress);-distributor.addFee([msg.sender,o.exchange.paymentAddress],protocolfee);+distributor.addFee([msg.sender,o.exchange.paymentAddress],protocolfee*amount);}
0xsaruman (Golom) confirmed
0xsaruman (Golom) resolved and commented:
Resolvedhttps://github.com/golom-protocol/contracts/commit/366c0455547041003c28f21b9afba48dc33dc5c7#diff-63895480b947c0761eff64ee21deb26847f597ebee3c024fb5aa3124ff78f6ccR390