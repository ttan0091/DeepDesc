[H-20] Early user can breakaddLiquidity
Submitted by WatchPug
https://github.com/code-423n4/2021-11-vader/blob/429970427b4dc65e37808d7116b9de27e395ce0c/contracts/dex/pool/BasePool.sol#L161-L163
uint256totalLiquidityUnits=totalSupply;if(totalLiquidityUnits==0)liquidity=nativeDeposit;// TODO: Contact ThorChain on proper approach
In the current implementation, the firstliquiditytakes thenativeDepositamount and uses it directly.
However, since this number (totalLiquidityUnits) will later be used for computing theliquidityissued for futureaddLiquidityusingcalculateLiquidityUnits.
A malicious user can add liquidity with only1 weiUSDV and making it nearly impossible for future users to add liquidity to the pool.
Recommendation
Uni v2 solved this problem by sending the first 1000 tokens to the zero address.
The same should work here, i.e., on first mint (totalLiquidityUnits == 0), lock some of the first minterâ€™s tokens by minting ~1% of the initial amount to the zero address instead of to the first minter.
SamSteinGG (Vader) commented:
Duplicate of #24
alcueca (judge) commented:
Not a duplicate