[H-10] Wrong implementation ofNoYield.sol#emergencyWithdraw()
Submitted by WatchPug, also found by 0x1f8b
https://github.com/code-423n4/2021-12-sublime/blob/9df1b7c4247f8631647c7627a8da9bdc16db8b11/contracts/yield/NoYield.sol#L78-L83
functionemergencyWithdraw(address_asset,addresspayable_wallet)externalonlyOwnerreturns(uint256received) {require(_wallet!=address(0),'cant burn');uint256amount=IERC20(_asset).balanceOf(address(this));IERC20(_asset).safeTransfer(_wallet,received);received=amount;}
receivedis not being assigned prior to L81, therefore, at L81,receivedis0.
As a result, theemergencyWithdraw()does not work, in essence.
Recommendation
Change to:
functionemergencyWithdraw(address_asset,addresspayable_wallet)externalonlyOwnerreturns(uint256received) {require(_wallet!=address(0),'cant burn');received=IERC20(_asset).balanceOf(address(this));IERC20(_asset).safeTransfer(_wallet,received);}
ritik99 (Sublime) confirmed
0xean (judge) commented:
upgrading to High  sev based on assets being “lost” directly.  IE the emergency function will not work.3 — High: Assets can be stolen/lost/compromised directly (or indirectly if there is a valid attack path that does not have hand-wavy hypotheticals).