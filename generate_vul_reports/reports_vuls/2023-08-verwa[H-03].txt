[H-03] When adding a gauge, its initial value has to be set by an admin or all voting power towards it will be lost
Submitted bydeadrxsezzz, also found byoakcobalt,0xComfyCat,Yanchuan,Brenzee,bin2chen,auditsea,cducrest,markus_ether, andTeam_Rocket
https://github.com/code-423n4/2023-08-verwa/blob/main/src/GaugeController.sol#L118
https://github.com/code-423n4/2023-08-verwa/blob/main/src/GaugeController.sol#L204
Voting power towards gauges will be lost and project will not work properly
Proof of Concept
The mappingtime_weighttakes a gauge as a param and returns the most recent timestamp a gauge has had its weight recorded/ updated. There are 2 ways to set this value: through_get_weightand_change_gauge_weight.
function_get_weight(address_gauge_addr)privatereturns(uint256) {uint256t=time_weight[_gauge_addr];if(t>0) {Pointmemorypt=points_weight[_gauge_addr][t];for(uint256i;i<500; ++i) {if(t>block.timestamp)break;t+=WEEK;uint256d_bias=pt.slope*WEEK;if(pt.bias>d_bias) {pt.bias-=d_bias;uint256d_slope=changes_weight[_gauge_addr][t];pt.slope-=d_slope;}else{pt.bias=0;pt.slope=0;}points_weight[_gauge_addr][t] =pt;if(t>block.timestamp)time_weight[_gauge_addr] =t;}returnpt.bias;}else{return0;}}The problem in_get_weightis that the initial value of anytime_weight[_gauge_addr]will be 0. It will go through the entirety of the loop andtwill increase +1 week for every iteration. The problem is that even after 500 iterationstwill be< block.timestampso the value oftime_weight[_gauge_addr]will remain 0. Unless admins call manually_change_gauge_weightto set an initial value,time_weight[_gauge_addr]will remain 0. Any  time a user will use_get_weightto fill with recent data, the function will iterate over old values and will do nothing. Recent values wonâ€™t be set and anything depending on it will receive 0 as a recent value.function_change_gauge_weight(address_gauge,uint256_weight)internal{uint256old_gauge_weight=_get_weight(_gauge);uint256old_sum=_get_sum();uint256next_time= ((block.timestamp+WEEK) /WEEK) *WEEK;points_weight[_gauge][next_time].bias=_weight;time_weight[_gauge] =next_time;uint256new_sum=old_sum+_weight-old_gauge_weight;points_sum[next_time].bias=new_sum;time_sum=next_time;}Since_change_gauge_weightis not called withinadd_gauge, even if we expect the owners to call it, any votes happening in the time between the adding of the gauge and the admin set function will be lost. The user will only be able to retrieve them by later removing their vote and voting again.
Here are 3 written test-cases which prove the statements above:functiontestWithoutManualSet()public{vm.startPrank(gov);gc.add_gauge(gauge1);vm.stopPrank();vm.startPrank(user1);ve.createLock{value:1ether}(1ether);gc.vote_for_gauge_weights(gauge1,10000);uintweight=gc.get_gauge_weight(gauge1);console.log("gauge's weight after voting: ",weight);vm.stopPrank();}functiontestWithManualSet()public{vm.startPrank(gov);gc.add_gauge(gauge1);gc.change_gauge_weight(gauge1,0);vm.stopPrank();vm.startPrank(user1);ve.createLock{value:1ether}(1ether);gc.vote_for_gauge_weights(gauge1,10000);uintweight=gc.get_gauge_weight(gauge1);console.log("gauge's weight after voting: ",weight);vm.stopPrank();}functiontestWithChangeMidway()public{vm.startPrank(gov);gc.add_gauge(gauge1);vm.stopPrank();vm.startPrank(user1);ve.createLock{value:1ether}(1ether);gc.vote_for_gauge_weights(gauge1,10000);uintweight=gc.get_gauge_weight(gauge1);console.log("gauge's weight after voting: ",weight);vm.stopPrank();vm.prank(gov);gc.change_gauge_weight(gauge1,0);vm.startPrank(user1);gc.vote_for_gauge_weights(gauge1,10000);weight=gc.get_gauge_weight(gauge1);console.log("gauge's weight after voting after admin set",weight);gc.vote_for_gauge_weights(gauge1,0);gc.vote_for_gauge_weights(gauge1,10000);weight=gc.get_gauge_weight(gauge1);console.log("gauge's weight after voting after admin set after vote reset",weight);}and the respective results:[PASS] testWithoutManualSet() (gas: 645984)Logs:gauge's weight after voting:  0[PASS] testWithManualSet() (gas: 667994)Logs:gauge's weight after voting:  993424657416307200[PASS] testWithChangeMidway() (gas: 744022)Logs:gauge's weight after voting:  0gauge's weight after voting after admin set 0gauge's weight after voting after admin set after vote reset 993424657416307200
Tools Used
Foundry
Recommended Mitigation Steps
Upon adding a gauge, make a call tochange_gauge_weightand set its initial weight to 0.
__141345__ (Lookout) commented:
Forget to initializetime_weight[]when add new gauge.