[H-11] Unable To CallemergencyWithdrawETH inNoYieldContract
Submitted by leastwood
Impact
TheemergencyWithdrawfunction is implemented in all yield sources to allow theonlyOwnerrole to drain the contract’s balance in case of emergency. The contract considers ETH as a zero address asset. However, there is a call made on_assetwhich will revert if it is the zero address. As a result, ETH tokens can never be withdrawn from theNoYieldcontract in the event of an emergency.
Proof of Concept
Consider the case where_asset == address(0). An external call is made to check the contract’s token balance for the target_asset. However, this call will revert as_assetis the zero address. As a result, theonlyOwnerrole will never be able to withdraw ETH tokens during an emergency.
functionemergencyWithdraw(address_asset,addresspayable_wallet)externalonlyOwnerreturns(uint256received) {require(_wallet!=address(0),'cant burn');uint256amount=IERC20(_asset).balanceOf(address(this));IERC20(_asset).safeTransfer(_wallet,received);received=amount;}
Affected function as per below:https://github.com/code-423n4/2021-12-sublime/blob/main/contracts/yield/NoYield.sol#L78-L83
Recommended Mitigation Steps
Consider handling the case where_assetis the zero address, i.e. the asset to be withdrawn under emergency is the ETH token.
ritik99 (Sublime) confirmed0xean (judge) commented:
Upgrading to Sev 3 in line with #4  / #115 as this results in funds being stuck in the contract.