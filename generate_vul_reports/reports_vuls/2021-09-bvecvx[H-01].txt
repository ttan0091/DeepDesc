[H-01]veCVXStrategy.manualRebalancehas wrong logic
Submitted by cmichel, also found by tabish
TheveCVXStrategy.manualRebalancefunction computes two ratioscurrentLockRatioandnewLockRatioand compares them.
However, these ratios compute different things and are not comparable:
currentLockRatio = balanceInLock.mul(10**18).div(totalCVXBalance)is apercentage valuewith 18 decimals (i.e.1e18 = 100%). Its max value can at most be1e18.newLockRatio = totalCVXBalance.mul(toLock).div(MAX_BPS)is aCVX token amount. It’s unbounded and just depends on thetotalCVXBalanceamount.
The comparison that follows does not make sense:
if(newLockRatio<=currentLockRatio) {// ...}
Impact
The rebalancing is broken and does not correctly rebalance. It usually leads to locking nearly everything iftotalCVXBalanceis high.
Recommended Mitigation Steps
Judging from thecvxToLock = newLockRatio.sub(currentLockRatio)it seems the desired computation is that the “ratios” should actually be in CVX amounts and not in percentages. Therefore,currentLockRatioshould just bebalanceInLock. (The variables should be renamed as they aren’t really ratios but absolute CVX balance amounts.)
GalloDaSballo (BadgerDAO) acknowledged:
Agree with the finding, the math is wrong
GalloDaSballo (BadgerDAO) confirmed:
We will mitigate by deleting the function and usingmanualRebalanceandmanualSendbCVXToVaultas way to manually rebalance
GalloDaSballo (BadgerDAO) patched:
We mitigated by rewriting the code formanualRebalance