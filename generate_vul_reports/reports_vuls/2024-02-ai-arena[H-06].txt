[H-06]FighterFarm::reRollwonâ€™t work for nft id greater than 255 due to input limited to uint8
Submitted byabhishek_thaku_r, also found bypontifex,Fulum,0xDetermination,Greed,givn,stakog,offside0011,maxim371,ktg,alexzoid,immeas,sashik_eth,korok,Draiakoo,MrPotatoMagic,PoeAudits,Tychai0s,ahmedaghadi,kartik_giri_47538,iamandreiski,fnanni,0xAlix2,klau5,dimulski,0xShitgem,yotov721,kiqo, andswizz
FighterFarm::reRolluses uint8 for nft id as input, which will stop people calling this function who owns id greater than 255. It will lead to not being able to use the reRoll to get random traits, which could have been better for there game performance.
Proof of Concept
Affect code can beseen here.
Adding code snippet below as well, for better clarity:
/// @notice Rolls a new fighter with random traits./// @param tokenId ID of the fighter being re-rolled./// @param fighterType The fighter type.@>functionreRoll(uint8tokenId,uint8fighterType)public{require(msg.sender==ownerOf(tokenId));require(numRerolls[tokenId] <maxRerollsAllowed[fighterType]);require(_neuronInstance.balanceOf(msg.sender) >=rerollCost,"Not enough NRN for reroll");_neuronInstance.approveSpender(msg.sender,rerollCost);boolsuccess=_neuronInstance.transferFrom(msg.sender,treasuryAddress,rerollCost);if(success) {numRerolls[tokenId] +=1;uint256dna=uint256(keccak256(abi.encode(msg.sender,tokenId,numRerolls[tokenId])));(uint256element,uint256weight,uint256newDna) =_createFighterBase(dna,fighterType);fighters[tokenId].element=element;fighters[tokenId].weight=weight;fighters[tokenId].physicalAttributes=_aiArenaHelperInstance.createPhysicalAttributes(newDna,generation[fighterType],fighters[tokenId].iconsType,fighters[tokenId].dendroidBool);_tokenURIs[tokenId] ="";}}
If you notice the highlighted line (first line of function), it takesuint8as input fortokenIdparameter. Which will restrict users to call this function when they own nft id greater than 255.
Value will go out of bounds when user will input 256 or more.
Recommended Mitigation Steps
Use uint256 for nft id input to fix the issue.
- function reRoll(uint8 tokenId, uint8 fighterType) public {+ function reRoll(uint256 tokenId, uint8 fighterType) public {require(msg.sender == ownerOf(tokenId));require(numRerolls[tokenId] < maxRerollsAllowed[fighterType]);require(_neuronInstance.balanceOf(msg.sender) >= rerollCost, "Not enough NRN for reroll");_neuronInstance.approveSpender(msg.sender, rerollCost);bool success = _neuronInstance.transferFrom(msg.sender, treasuryAddress, rerollCost);if (success) {numRerolls[tokenId] += 1;uint256 dna = uint256(keccak256(abi.encode(msg.sender, tokenId, numRerolls[tokenId])));(uint256 element, uint256 weight, uint256 newDna) = _createFighterBase(dna, fighterType);fighters[tokenId].element = element;fighters[tokenId].weight = weight;fighters[tokenId].physicalAttributes = _aiArenaHelperInstance.createPhysicalAttributes(newDna,generation[fighterType],fighters[tokenId].iconsType,fighters[tokenId].dendroidBool);_tokenURIs[tokenId] = "";}}
raymondfam (lookout) commented:
Unsigned integer type limitation indeed.
brandinho (AI Arena) confirmed
AI Arena mitigated:
Fixed reRoll for fighters with tokenIds greater than 255.https://github.com/ArenaX-Labs/2024-02-ai-arena-mitigation/pull/1
Status:Mitigation confirmed. Full details in reports fromniser93,d3e4, andfnanni.