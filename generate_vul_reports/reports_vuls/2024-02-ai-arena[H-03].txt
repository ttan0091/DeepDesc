[H-03] Players have complete freedom to customize the fighter NFT when callingredeemMintPassand can redeem fighters of types Dendroid and with rare attributes
Submitted byAbdessamed, also found by juancito (1,2),vnavascues,d3e4,DarkTower,shaka,alexxander,0xmystery, evmboi32 (1,2,3),soliditywala,givn,korok,dimulski,denzi_,VAD37,sl1,OMEN,stakog,ahmedaghadi,Ryonen,FloatingPragma, n0kto (1,2),adamn000,0rpse,bhilare_,0xAsen,Tendency,ke1caM, Draiakoo (1,2),Archime,ADM,McToady,MrPotatoMagic, 0xCiphky (1,2),VrONTg,Velislav4o, btk (1,2),stackachu,zhaojohnson, 0xvj (1,2),pkqs90,devblixt,niser93,cats,peter, BARW (1,2,3),Aamir,jesjupyter,fnanni,alexzoid,krikolkk,t0x1c,yotov721,klau5,0xlemon,radin100,0xAlix2,SpicyMeatball,matejdb,haxatron,JCN,immeas,PetarTolev, andZac
The functionredeemMintPassallows burning multiple mint passes in exchange for fighters’ NFTs. It is mentioned by the sponsor that the player should not have a choice of customizing the fighters’ properties and their type. However, nothing prevents a player from:
Providinguint8[] fighterTypesof values1to mint fighters of typesDendroid.Checking previous transactions in which thednaprovidedled to minting fighters with rare physical attributes, copying those Dnas and passing them to theredeemMinPassto mint fighters with low rarity attributes. That is because creating physical attributes isdeterministic, so providing the same inputs leads to generating a fighter with the same attributes.
Impact
This issue has two major impacts:
Players with valid mint passes can mint fighters of type Dendroid easily.Players with valid mint passes can mint easily fighters with low rarity attributes which breaks the pseudo-randomness attributes generation aspect
Proof of Concept
For someone having valid mint passes, he calls the functionredeemMintPassprovidingfighterTypesarrayof values1. For each mint pass, the inner function_createNewFighterwill be called passing the value1asfighterTypeargument which corresponds toDendroid, a new fighter of typedendroidwill be minted for the caller.
functiontest_redeeming_dendroid_fighters_easily()public{uint8[2]memorynumToMint= [1,0];bytesmemorysignature=abi.encodePacked(hex"20d5c3e5c6b1457ee95bb5ba0cbf35d70789bad27d94902c67ec738d18f665d84e316edf9b23c154054c7824bba508230449ee98970d7c8b25cc07f3918369481c");string[]memory_tokenURIs=newstring[](1);_tokenURIs[0] ="ipfs://bafybeiaatcgqvzvz3wrjiqmz2ivcu2c5sqxgipv5w2hzy4pdlw7hfox42m";// first i have to mint an nft from the mintpass contractassertEq(_mintPassContract.mintingPaused(),false);_mintPassContract.claimMintPass(numToMint,signature,_tokenURIs);assertEq(_mintPassContract.balanceOf(_ownerAddress),1);assertEq(_mintPassContract.ownerOf(1),_ownerAddress);// once owning one i can then redeem it for a fighteruint256[]memory_mintpassIdsToBurn=newuint256[](1);string[]memory_mintPassDNAs=newstring[](1);uint8[]memory_fighterTypes=newuint8[](1);uint8[]memory_iconsTypes=newuint8[](1);string[]memory_neuralNetHashes=newstring[](1);string[]memory_modelTypes=newstring[](1);_mintpassIdsToBurn[0] =1;_mintPassDNAs[0] ="dna";_fighterTypes[0] =1;// @audit Notice that I can provide value 1 which corresponds to Dendroid type_neuralNetHashes[0] ="neuralnethash";_modelTypes[0] ="original";_iconsTypes[0] =1;// approve the fighterfarm contract to burn the mintpass_mintPassContract.approve(address(_fighterFarmContract),1);_fighterFarmContract.redeemMintPass(_mintpassIdsToBurn,_fighterTypes,_iconsTypes,_mintPassDNAs,_neuralNetHashes,_modelTypes);// check balance to see if we successfully redeemed the mintpass for a fighterassertEq(_fighterFarmContract.balanceOf(_ownerAddress),1);}
Ran 1testfortest/FighterFarm.t.sol:FighterFarmTest[PASS]test_redeeming_dendroid_fighters_easily() (gas: 578678)Test result: ok. 1 passed; 0 failed; 0 skipped; finishedin6.56msRan 1testsuite: 1 tests passed, 0 failed, 0 skipped (1 total tests)
The player can also inspect previous transactions that minted a fighter with rare attributes, copy the providedmintPassDnasand provide them asargument in theredeemMintPass. The_createNewFighterfunctioncallsAiArenaHelperto create the physical attributes for the fighter. The probability of attributes isdeterministicand since the player provideddnathat already led to a fighter with rare attributes, his fighter will also have rare attributes.
Recommended Mitigation Steps
The main issue is that the mint pass token is not tied to the fighter properties that the player should claim and the player has complete freedom of the inputs. Consider implementing a signature mechanism that prevents the player from changing the fighter’s properties like implemented inclaimFighters
brandinho (AI Arena) confirmed
AI Arena mitigated:
https://github.com/ArenaX-Labs/2024-02-ai-arena-mitigation/pull/10
Status:Mitigation confirmed. Full details in reports fromniser93andfnanni.