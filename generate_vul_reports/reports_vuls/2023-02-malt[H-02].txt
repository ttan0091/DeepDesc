[H-02] RewardThrottle: If an epoch does not have any profit, then there may not be rewards for that epoch at the start of the next epoch.
Submitted bycccz, also found byhansfriese
In RewardThrottle, both checkRewardUnderflow and fillInEpochGaps call\_fillInEpochGapsto fill the state of the previous epoch without profit, the difference being that checkRewardUnderflow will request the reward from the overflowPool and distribute the reward, whereas fillInEpochGaps does not.
functioncheckRewardUnderflow()publiconlyActive{uint256epoch=timekeeper.epoch();uint256_activeEpoch=activeEpoch;// gas// Fill in gaps so we have a fresh foundation to calculate from_fillInEpochGaps(epoch);if(epoch>_activeEpoch) {for(uint256i=_activeEpoch;i<epoch; ++i) {uint256underflow=_getRewardUnderflow(i);if(underflow>0) {uint256balance=overflowPool.requestCapital(underflow);_sendToDistributor(balance,i);}}}}functionfillInEpochGaps()external{uint256epoch=timekeeper.epoch();_fillInEpochGaps(epoch);}
This results in that when an epoch does not have any profit, then at the start of the next epoch that epoch will have a reward if checkRewardUnderflow is called, and no reward iffillInEpochGapsis called.
According to the documentation, when an epoch is not profitable enough, the reward should be requested from the overflowPool, so checkRewardUnderflow should be called. And iffillInEpochGapsis called first, the epoch will lose its reward.
Note: populateFromPreviousThrottle will also cause epochs without any profit to lose their rewards
functionpopulateFromPreviousThrottle(addresspreviousThrottle,uint256epoch)externalonlyRoleMalt(ADMIN_ROLE,"Only admin role"){RewardThrottleprevious=RewardThrottle(previousThrottle);uint256_activeEpoch=activeEpoch;// gasfor(uint256i=_activeEpoch;i<epoch; ++i) {(uint256profit,uint256rewarded,uint256bondedValue,uint256desiredAPR,uint256epochsPerYear,uint256cumulativeCashflowApr,uint256cumulativeApr) =previous.epochData(i);state[i].bondedValue=bondedValue;state[i].profit=profit;state[i].rewarded=rewarded;state[i].epochsPerYear=epochsPerYear;state[i].desiredAPR=desiredAPR;state[i].cumulativeCashflowApr=cumulativeCashflowApr;state[i].cumulativeApr=cumulativeApr;}activeEpoch=epoch;}
Proof of Concept
https://github.com/code-423n4/2023-02-malt/blob/700f9b468f9cf8c9c5cffaa1eba1b8dea40503f9/contracts/RewardSystem/RewardThrottle.sol#L437-L462
Recommended Mitigation Steps
Consider removing thefillInEpochGapsfunction, or only allowing it to be called when the contract is not active.
0xScotch (Malt) confirmed and commented:
We will be removing both implementations offillInEpochGaps.