[H-02] DAO proposals can be executed by anyone due to vulnerableTimelockController
Submitted by cmichel, also found by leastwood
TheGovernorAlphainherits from a vulnerableTimelockController.
ThisTimelockControllerallows anEXECUTORrole to escalate privileges and also gain the proposer role. See details onOZand thefix here.
The bug is that_executeBatchchecks if the proposal was scheduled onlyafterthe transactions have been executed. This allows inserting a call into the batch that schedules the batch itself, and the entire batch will succeed.
As the customGovernorAlpha.executeProposalfunction removed the original “queued state check” (require(state(proposalId) == ProposalState.Queued), the attack can be executed by anyone, even without theEXEUCTOR_ROLE.
Proof of concept:
Create a proposal usingpropose. Thecalldatawill be explained in the next step. (This can be done by anyone passing the minproposalThreshold)CallexecuteProposal(proposalId, ...)such that the following calls are made:
call-0:grantRole(TIME_LOCK_ADMIN,attackerContract)call-1:grantRole(EXECUTOR,attackerContract)call-2:grantRole(PROPOSER,attackerContract)call-3:updateDelay(0)// such that _afterCall "isOperationReady(id): timestamp[id] = block.timestamp + minDelay (0) <= block.timestamp" passescall-4:attackerContract.hello()// this calls timelock.schedule(args=[targets, values, datas, ...]) where args were previously already stored in contract. (this is necessary because id depends on this function's args and we may not be self-referential)// attackerContract is proposer & executor now and can directly call scheduleBatch & executeBatch without having to create a proposal
ℹ️  I already talked to Jeff Wu about this and he created a test case for it confirming this finding
The impact is that, anyone who can create a proposal can becomeTimelockadmin (proposer & executor) and execute arbitrary transactions as the DAO-controlledGovernorAlpha.
Note that this contract has severe privileges and an attacker can now do anything that previously required approval of the DAO. For example, they could update theglobalTransferOperatorand steal all tokens.
Recommend updating the vulnerable contract toTimelockController v3.4.2as it currently usesOpenZeppelin/openzeppelin-contracts@3.4.0-solc-0.7
jeffywu (Notional) confirmed