Type of vulnerability: Incorrect state update after token burn
Cause of vulnerability: The reserves are not updated to reflect the actual total bento shares held by the pool after LP tokens are burned, leading to an inaccurate state.
Execution process: When LP tokens are burned, the contract incorrectly updates the reserves by subtracting only the fees, causing `reserve0` and `reserve1` to be smaller than the actual balances (`balance0` and `balance1`).
Vulnerable code: 
```solidity
unchecked{
    reserve0 -= uint128(amount0fees);
    reserve1 -= uint128(amount1fees);
}
```