Type of vulnerability: Incorrect Variable Usage
Cause of vulnerability: The `sweepInterest` function incorrectly uses `amtToSweep` instead of `cNoteToSweep` when transferring cnote tokens to the treasury.
Execution process: The function calculates the correct amount of cnote to sweep (`cNoteToSweep`) but uses the incorrect variable (`amtToSweep`) in the transfer and redeem operations, leading to potential reverts and locking of interest in the contract.
Vulnerable code: 
```solidity
bool success = cnote.transfer(treasury, amtToSweep);
if (!success) {
    revert  SweepError(treasury , amtToSweep); //handles if transfer of tokens is not successful
}
TreasuryInterface Treas = TreasuryInterface(treasury);
Treas.redeem(address(cnote),amtToSweep);
```