Type of vulnerability: Ownership and Registry Mismanagement

Cause of vulnerability: The contract fails to correctly manage and track proxy ownership, allowing multiple proxies per owner and inconsistent ownership registration.

Execution process: An attacker can exploit the lack of ownership checks and registry inconsistencies to gain unauthorized access to multiple proxies, potentially leading to loss of funds or unauthorized actions.

Vulnerable code:
- `MIMOProxyFactory.sol` allowing unrestricted `deployFor()` calls:
  ```solidity
  function deployFor(address owner) public returns (MIMOProxy proxy) {
      proxy = new MIMOProxy();
      _registerProxy(owner, address(proxy));
  }
  ```
- `MIMOProxyRegistry.sol` not enforcing single proxy per owner:
  ```solidity
  function registerProxy(address owner, address proxy) external {
      proxies[owner] = proxy;
  }
  ```