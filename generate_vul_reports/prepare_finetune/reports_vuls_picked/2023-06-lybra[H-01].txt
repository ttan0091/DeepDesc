Type of vulnerability: Unauthorized Token Burning
Cause of vulnerability: Lack of proper authorization checks and improper handling of flash loan receiver contracts
Execution process: A hacker initiates a flash loan with a large amount, designating a vulnerable receiver contract that lacks robust fallback logic. The flash loan system charges a significant loan fee to the receiver, which is then burned without proper authorization.
Vulnerable code: 
```solidity
EUSD.burnShares(address(receiver), burnShare);
bool success = EUSD.transferFrom(address(receiver), address(this), EUSD.getMintedEUSDByShares(shareAmount));
receiver.onFlashLoan(shareAmount, data);
```