Type of vulnerability: Double-entrypoint token vulnerability
Cause of vulnerability: The collateral token is a double-entrypoint token, allowing the legacy token to delegate its logic to the new token, bypassing necessary checks and balances in the `Position::withdraw` function.
Execution process: The position owner sends a small amount (dusting) of the legacy collateral token to the contract, then calls `Position::withdraw` with the legacy address as the token argument, allowing them to withdraw the full collateral balance without repaying the ZCHF debt.
Vulnerable code: 
```solidity
function withdraw(address token, address target, uint256 amount) public onlyOwner {
    if (token == address(collateral)) {
        withdrawCollateral(target, amount);
    } else {
        IERC20(token).transfer(target, amount);
    }
}
```