Type of vulnerability: Incorrect Accounting
Cause of vulnerability: The `AVAXAssignedHighWater` is updated by incrementing the current value rather than setting it to the actual assigned AVAX amount, leading to an inflated high water mark.
Execution process: A node operator can create multiple minipools with different amounts of AVAX, causing the `AVAXAssignedHighWater` to be incremented incorrectly, resulting in higher rewards than intended.
Vulnerable code: 
```solidity
if (staking.getAVAXAssignedHighWater(owner) < staking.getAVAXAssigned(owner)) {
    staking.increaseAVAXAssignedHighWater(owner, avaxLiquidStakerAmt); //@audit wrong
}
```