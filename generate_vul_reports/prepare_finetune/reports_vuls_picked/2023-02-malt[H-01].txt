Type of vulnerability: Incorrect Calculation of Cumulative APRs

Cause of vulnerability: The `_sendToDistributor` function does not update cumulative APRs when the `amount` is zero, leading to incorrect tracking of cumulative APRs for certain epochs.

Execution process: 
1. The `checkRewardUnderflow` function is called with an `epoch` greater than `_activeEpoch`.
2. It iterates from `_activeEpoch` to `epoch`, requesting capital from the overflow pool for each epoch where there is a reward underflow.
3. If the requested capital is zero, the `_sendToDistributor` function immediately returns without updating the cumulative APRs.
4. This results in cumulative APRs not being updated for epochs where the capital requested is zero, leading to incorrect calculations of `cashflowAverageApr` and `targetAPR`.

Vulnerable code:
```solidity
function _sendToDistributor(uint256 amount, uint256 epoch) internal {
    if (amount == 0) {
        return;
    }
    // Other code...
}
```