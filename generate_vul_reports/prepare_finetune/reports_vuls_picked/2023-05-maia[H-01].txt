Type of vulnerability: Access Control
Cause of vulnerability: The `manage` function in `BranchPort.sol` does not check if the strategy token is enabled before allowing a registered strategy to withdraw tokens.
Execution process: A strategy can call the `manage` function to withdraw tokens even if the strategy token has been toggled off, preventing the `replenishTokens` function from being called on those tokens.
Vulnerable code: 
```solidity
function manage(address _token, uint256 _amount) external onlyRegisteredStrategy(_token) {
    require(getPortStrategyTokenDebt[msg.sender][_token] >= _amount, "Insufficient debt");
    getPortStrategyTokenDebt[msg.sender][_token] -= _amount;
    IERC20(_token).transfer(msg.sender, _amount);
}
```