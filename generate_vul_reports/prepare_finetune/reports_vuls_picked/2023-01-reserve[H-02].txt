Type of vulnerability: Inefficient Basket Range Calculation
Cause of vulnerability: The basket range estimation formula is inefficient, leading to a wider range than necessary, which can cause unnecessary haircuts.
Execution process: The protocol calculates the basket range by dividing the total collateral value by the price of 1 basket unit, using the max value divided by the min price for optimistic estimation and vice versa for pessimistic estimation. This leads to a wider range when a small amount of collateral is missing, causing the protocol to avoid trading and opt for a haircut.
Vulnerable code: 
```solidity
function basketRange()
    private
    view
    returns (RecollateralizationLibP1.BasketRange memory range) {
```