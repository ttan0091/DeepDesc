Type of vulnerability: Arithmetic Error
Cause of vulnerability: Hard-coded value in the denominator does not account for the difference in token decimals, leading to incorrect price calculations.
Execution process: When the decimals of token1 are greater than those of token0, the calculation of the square root price in the `getSqrtPriceX96` function results in an inflated value due to the incorrect handling of decimal differences.
Vulnerable code: 
```solidity
elseif(token1Decimal>token0Decimal) {
    // multiple by 10^(decimalB - decimalA) to preserve price in wei
    sqrtPriceX96=uint160((SqrtLib.sqrt((token0Price* (10**(18+token1Decimal-token0Decimal))) /(token1Price)) *2**96) /1E9);
}
```