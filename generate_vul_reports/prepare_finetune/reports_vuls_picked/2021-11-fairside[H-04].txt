Type of vulnerability: Storage Write Omission
Cause of vulnerability: The function `_writeCheckpoint` does not update the storage when a checkpoint is overwritten within the same block, leading to the new value being set in memory but not persisted to storage.
Execution process: When a user updates their conviction score multiple times within the same block, the function `_writeCheckpoint` is called. If the checkpoint's `fromBlock` is the same as the current block number, the new conviction score is set in memory but not written back to storage. This results in only the first score update being persisted, while subsequent updates within the same block are lost.
Vulnerable code: 
```solidity
Checkpoint memory checkpoint = checkpoints[user][nCheckpoints - 1];
if (nCheckpoints > 0 && checkpoint.fromBlock == blockNumber) {
    checkpoint.convictionScore = newCS;
}
```