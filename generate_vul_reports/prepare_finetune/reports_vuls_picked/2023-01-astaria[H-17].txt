Type of vulnerability: Arithmetic Underflow
Cause of vulnerability: The `_setYIntercept` function attempts to subtract a value from `s.yIntercept` that can be larger than `s.yIntercept` itself, leading to an underflow condition.
Execution process: When a significant number of users withdraw their funds, the `liquidationWithdrawRatio` approaches 1, causing `totalAssets().mulDivDown(s.liquidationWithdrawRatio, 1e18)` to exceed `s.yIntercept`. This results in an underflow during the calculation of the new `yIntercept`, causing the transaction to revert.
Vulnerable code: 
```solidity
_setYIntercept(s, s.yIntercept - totalAssets().mulDivDown(s.liquidationWithdrawRatio, 1e18));
```