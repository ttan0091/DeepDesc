Type of vulnerability: Denial of Service (DoS) via Non-UTF8 Token Name/Symbol/Denom
Cause of vulnerability: The contract fails to validate that the token name, symbol, and denomination (denom) are valid UTF-8 strings, leading to parsing errors in logs.
Execution process: An attacker can deploy an ERC20 token with a non-UTF-8 character in the token name, symbol, or denom. This causes the oracle to enter a loop of failing and early returning an error, preventing the bridge from updating the last checked block and freezing the bridge.
Vulnerable code: 
```solidity
letsymbol = String::from_utf8(input.data[index_start..index_end].to_vec());
trace!("Symbol {:?}", symbol);
if symbol.is_err() {
    return Err(GravityError::InvalidEventLogError(format!("{:?} is not valid utf8, probably incorrect parsing", symbol)));
}
leterc20_deploys = Erc20DeployedEvent::from_logs(&deploys)?;
```