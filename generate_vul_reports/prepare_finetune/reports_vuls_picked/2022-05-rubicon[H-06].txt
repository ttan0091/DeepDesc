Type of vulnerability: Incorrect Fee Calculation
Cause of vulnerability: The fee calculation in the `_swap` function does not account for the fee charged by RubiconMarket correctly, leading to an underpayment of the fee and a loss of user funds.
Execution process: When a user initiates a swap through the `_swap` function, the function calculates the amount to be sent to RubiconMarket by subtracting the fee from the current amount. However, this calculation is incorrect because it does not account for the fact that RubiconMarket will charge its fee on the reduced amount, leading to a smaller total amount being used in the swap than intended.
Vulnerable code: 
```solidity
currentAmount.sub(currentAmount.mul(expectedMarketFeeBPS).div(10000))
```