Type of vulnerability: Gas Griefing / Blocking Cross-Chain Messages
Cause of vulnerability: Lack of enforced minimum gas checks on user-supplied gas values for cross-chain calls
Execution process: A user can pass an insufficient gas value for the `_dstGasForCall` parameter, leading to out-of-gas exceptions on the destination chain and potentially blocking future messages between the source and destination chains.
Vulnerable code: 
```solidity
uint256 GAS_FOR_RELAY = 100000;
uint256 gasAmount = GAS_FOR_RELAY + _dstGasForCall;
```
and
```solidity
function bridgeWithPayload(uint16 _dstChainId, address _toAddress, uint _amount, bool deliverEth, uint64 _dstGasForCall, bytes memory additionalPayload) public payable {
    return _bridgeWithPayload(MT_ETH_TRANSFER_WITH_PAYLOAD, _dstChainId, _toAddress, _amount, _dstGasForCall, additionalPayload, deliverEth);
}
```