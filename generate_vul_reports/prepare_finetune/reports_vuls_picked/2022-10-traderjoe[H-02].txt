Type of vulnerability: Incorrect Output Amount Calculation
Cause of vulnerability: The calculation of output amounts for swaps involving Trader Joe V1 pools is incorrect, leading to underestimated output amounts.
Execution process: When a user initiates a chained swap that includes V1 pools, the `_swapSupportingFeeOnTransferTokens` function incorrectly calculates the output amount based on the pool's reserves and balances, resulting in a smaller output amount than expected.
Vulnerable code: 
```solidity
if(_binStep==0) {
    (uint256_reserve0,uint256_reserve1, ) =IJoePair(_pair).getReserves();
    if(_token<_tokenNext) {
        uint256_balance=_token.balanceOf(_pair);
        uint256_amountOut= (_reserve1* (_balance-_reserve0) *997) / (_balance*1_000);
        IJoePair(_pair).swap(0,_amountOut,_recipient,"");
    } else {
        uint256_balance=_token.balanceOf(_pair);
        uint256_amountOut= (_reserve0* (_balance-_reserve1) *997) / (_balance*1_000);
        IJoePair(_pair).swap(_amountOut,0,_recipient,"");
    }
} else {
    ILBPair(_pair).swap(_tokenNext==ILBPair(_pair).tokenY(),_recipient);
}
```