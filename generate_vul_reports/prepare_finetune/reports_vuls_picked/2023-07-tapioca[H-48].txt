Type of vulnerability: Reentrancy or Uncontrolled Address Balance Transfer
Cause of vulnerability: Misuse of `address(this).balance` in `sendFromDestination()` function, leading to unintended transfer of all ETH balance to `refundAddress`.
Execution process: An attacker calls `triggerSendFrom()` specifying their own address as `refundAddress`. When `sendFromDestination()` is executed, it uses the contract's entire balance (minus LayerZero fees) to send to the attacker's specified `refundAddress`.
Vulnerable code: 
```solidity
function sendFromDestination(bytes memory _payload) public {
    ...
    ISendFrom(address(this)).sendFrom{value: address(this).balance}(from, lzDstChainId, LzLib.addressToBytes32(from), amount, callParams);
    ...
}

function sendFrom(address _from, uint16 _dstChainId, bytes32 _toAddress, uint _amount, LzCallParams calldata _callParams) public payable virtual override {
    _send(_from, _dstChainId, _toAddress, _amount, _callParams.refundAddress, _callParams.zroPaymentAddress, _callParams.adapterParams);
}
```