Type of vulnerability: Denial of Service (DoS)
Cause of vulnerability: Insufficient handling of large data responses in Ethereum event logs
Execution process: An attacker deploys ERC20 tokens with excessively large names, symbols, or denoms, causing the Ethereum oracle to exceed the maximum response size limit, resulting in a perpetual error state.
Vulnerable code: 
```solidity
function deployERC20(string memory _cosmosDenom, string memory _name, string memory _symbol, uint8 _decimals) public {
    // Deploy an ERC20 with entire supply granted to Gravity.sol
    CosmosERC20 erc20 = new CosmosERC20(address(this), _name, _symbol, _decimals);
    // Fire an event to let the Cosmos module know
    state_lastEventNonce = state_lastEventNonce.add(1);
    emit ERC20DeployedEvent(_cosmosDenom, address(erc20), _name, _symbol, _decimals, state_lastEventNonce);
}
```