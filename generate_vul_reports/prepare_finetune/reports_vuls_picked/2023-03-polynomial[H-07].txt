Type of vulnerability: Accounting Mistake
Cause of vulnerability: Missing update to `totalFunds` in the `openShort()` function
Execution process: When the `openShort()` function is called, the trading fees collected are not added to `totalFunds`, leading to an incorrect calculation of available funds and subsequently affecting the token price.
Vulnerable code: The vulnerable code snippet is the `openShort()` function in `LiquidityPool.sol` where the update to `totalFunds` is missing:
```solidity
totalCost = tradeCost - fees;
SUSD.safeTransfer(user, totalCost);
```
The recommended mitigation step to fix the vulnerability is to add the following line to update `totalFunds` with the net fee collection:
```solidity
totalFunds += feesCollected - externalFee;
```