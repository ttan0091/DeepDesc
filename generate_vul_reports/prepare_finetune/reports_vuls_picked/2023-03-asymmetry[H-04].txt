Type of vulnerability: Arithmetic Error
Cause of vulnerability: Incorrect order of operations in the calculation of the price of sfrxEth derivative
Execution process: The function `ethPerDerivative` incorrectly multiplies `frxAmount` by `10 ** 18` before dividing by `price_oracle`, leading to an incorrect price calculation.
Vulnerable code: 
```solidity
function ethPerDerivative(uint256 _amount) public view returns (uint256) {
    uint256 frxAmount = IsFrxEth(SFRX_ETH_ADDRESS).convertToAssets(10 ** 18);
    return ((10 ** 18 * frxAmount) / IFrxEthEthPool(FRX_ETH_CRV_POOL_ADDRESS).price_oracle());
}
```