Type of vulnerability: Incorrect Fee Accounting
Cause of vulnerability: The logic for updating feeGrowthOutside in `Ticks.cross()` is reversed, causing incorrect fee accounting when crossing ticks.
Execution process: When swapping token0 for token1 (or vice versa), the fees are taken from the output token. However, the fee accounting logic in `Ticks.cross()` incorrectly assigns the fee growth outside to the wrong token, leading to inaccurate fee tracking.
Vulnerable code: 
```solidity
if(zeroForOne) {
    ...
    ticks[nextTickToCross].feeGrowthOutside0 = feeGrowthGlobal - ticks[nextTickToCross].feeGrowthOutside0;
} else {
    ...
    ticks[nextTickToCross].feeGrowthOutside1 = feeGrowthGlobal - ticks[nextTickToCross].feeGrowthOutside1;
}
```