Type of vulnerability: Reentrancy/Reinitialization
Cause of vulnerability: Lack of protection against multiple executions of the `initialize` function, allowing the contract to be reinitialized.
Execution process: The `initialize` function can be called multiple times by the owner, potentially resetting core variables such as `payableToken`, which could lead to the retrieval of all contract funds.
Vulnerable code: 
```solidity
function initialize(/* parameters */) public onlyOwner {
    require(!initialized, "Already initialized");
    initialized = true;
    // Initialization logic
}
```