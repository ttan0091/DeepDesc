Type of vulnerability: Access Control
Cause of vulnerability: Missing access control modifier `requiresApprovedCaller` on the `payableCall(...)` method.
Execution process: An attacker can craft a call to `ERC20.transfer(...)` on behalf of the contract, bypassing access control by executing the call via `payableCall(...)`.
Vulnerable code: 
```solidity
function payableCall(PayableCall[] calldata calls) public payable returns (bytes[] memory returnData) {
    uint256 valAccumulator;
    uint256 length = calls.length;
    returnData = new bytes[](length);
}
```