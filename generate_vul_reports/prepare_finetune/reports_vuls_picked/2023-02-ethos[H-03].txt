Type of vulnerability: Precision Loss in Reward Calculation

Cause of vulnerability: Division rounding down to zero due to insufficient precision in the calculation of rewards per staked token.

Execution process: When the LQTYStaking contract receives collateral assets for rewards, it calculates the reward per staked LQTY token. If the total amount of LQTY staked is large enough, the calculated reward per staked token can round down to zero, causing the rewards to not be distributed and remain locked in the contract.

Vulnerable code:
```solidity
if(totalLQTYStaked > 0) {
    collFeePerLQTYStaked = _collFee.mul(DECIMAL_PRECISION).div(totalLQTYStaked);
}
F_Collateral[_collateral] = F_Collateral[_collateral].add(collFeePerLQTYStaked);
```