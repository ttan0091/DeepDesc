Type of the code: Smart Contract Security Practice
The code you need to process: 
solidity
function _msgSender() internal view virtual returns (address sender) {
    if (isTrustedForwarder(msg.sender)) {
        // The assembly code is more direct than the Solidity version using abi.decode.
        // solhintdisablenextline noinlineassembly
        assembly {
            sender := shr(96, calldataload(sub(calldatasize(), 20)))
        }
    } else {
        return msg.sender;
    }
}


Process and explain the working process of the code:
1. The function _msgSender determines the address of the sender by checking if the current msg.sender is a trusted forwarder.
2. If the sender is a trusted forwarder, it extracts the actual sender's address from the calldata through assembly operations.
3. If the sender is not a trusted forwarder, it returns the msg.sender.

Purpose of the code: 
The purpose of this function is to correctly identify the actual sender (EOA) when transactions are delegated using a trusted forwarder, ensuring that the correct address is used in quota calculations and other contract interactions.