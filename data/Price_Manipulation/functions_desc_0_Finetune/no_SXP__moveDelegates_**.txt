Type of contract: StateraGovernance (Complike)
Primary purpose of the contract: Distribute Streams of Pegs
Type of shares measured: Weighted representations of voting tokens
Units in which shares are measured: 1e18 percentage points (like Comp)
Core Mechanism: Taxing on depositing, applying frictions and redistributing loot (like Comp)
Governance mechanisms: Proposals, voting by shares, accessing state variables via the statecarrying Timelock (like Comp)
Key operational steps: Voting, delegation, changing delegation, proposing, quorum checking, expirationchecking, execution of proposals, delegationrewrite proposals, processing Distributions
Any notable differences from Comp: Addressed by type convo (Flirc covnvertibles)
Any notable security upgrades: use Same Security Design (Audited by Peckshield)
Other unique features: ExtraAccount checked, yminook, diaguose (Security functionality)

### Working Process:
1. Initialization: 
     totalShares is set to 1e18 in the constructor.
2. Creating Values:
    1. getUserDebtsActive:
         Divides total shares by total peg to get value, then multiplies by user peg to get user debt.
    2. filterStreams: 
         Typical tax on deposit, similar to the Complike contract.
    3. collectStreams: 
         Similar mechanism to the one used in the corresponding compound distribution mechanism.
3. Distribution process:
    1. First, let's find the total peg a user can get by dividing their token count with the total token count and multiplying by the totalPeg.
    2. claimPeg: 
         See returns, but essentially updating checkpoints and writing to the destination.
4. Security Mechanism:
     Security plan includes flirc convertibles, delegations, and isolation (complike model).