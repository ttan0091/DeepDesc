Type of code: Defensive programming
Intention of the code: To prevent the execution from being halted in case of receiving excessively large return data from a called contract in a flash loan attack scenario.
Working process: The function excessivelySafeCall uses inline assembly to limit the size of the return data by copying a maximum of 256 bytes from the response of the called contract. By doing so, the function ensures that if the return data is too large (potentially due to a flash loan attack payload), it does not cause the transaction to revert due to an OutOfGas exception.