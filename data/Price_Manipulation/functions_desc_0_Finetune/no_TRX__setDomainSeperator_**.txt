Type of vulnerability: EOA (Externally Owned Account) Interaction

Cause of vulnerability: Lack of validation to ensure that the zero address is not an EOA, allowing potential honor of the tx_recipient commitment execution.

Working process of the vulnerability:
1. User calls addLiquidityETH with principalToken set to zero address, providing the lpToken address explicitly.
2. In the function beforeApprovalVerification, the value isPrincipalTokenLambdaSemiDai is initialized to false since principalToken is zero address.
3. Function assertFederatedToPeg requires the value to be true, which results in a revert due to its requirements.
4. The tx_recipient_on{fate_next} sends a second transaction to the TokenFactory smart contract to mediate an auction between the token holders and the contract owner, which results in a failure on the side of Mira's assets.
5. The contract selfdestroys and keeps the liquidity tokens, effectively incentivizing the autoliquidation of the Mpool token.
