Type of contract: AMM (Automated Market Maker)
Working process of the addLiquidity function:
1. Validates user inputs using validateAddLiquidity to ensure the function call is legitimate.
2. Calls _addLiquidity internally, which calculates the optimal token ratios to provide based on the pools' preexisting balances.
3. Transfers the specified amounts of tokenA and tokenB to the AMM pair contract.
4. Mints the liquidity tokens to the user, representing their share of the new pool.
5. Updates the reserves and cumulative factors for the AMM pool.