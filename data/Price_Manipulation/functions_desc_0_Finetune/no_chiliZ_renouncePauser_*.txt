Type of vulnerability: Access Control Issue
Cause of vulnerability: Incorrect handling of minters and pausers roles during extension upgrading process, leading to loss of minter and pauser roles for the old token contract.
Working process of the susceptible code:
1. The owner creates a minter and a pauser.
2. The owner upgrades the contract, attaching an upgraded contract as an extension.
3. The extension upgrades and calls _renounceRoles(minter, pauser) which removes all roles.
4. Since the old token handle is not stored in oldHandler and new roles are not assigned, the displayed old token handle in ArmoldUpgraded remains UNKNOWN.
5. Even with the multistep process and asking for a confirmation, the roles are still not assigned because of the incorrect storage access order and restoring the RGB ledger during upgrade.
6. The roles assignment is postponed to the owner, but the private keys are needed to do so. If the renovation happens after many years and all key holders have lost their keys, the roles remain unassigned.