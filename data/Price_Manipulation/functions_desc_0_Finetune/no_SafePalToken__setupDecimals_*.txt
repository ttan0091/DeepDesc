Type of vulnerability: Manipulation of Price Feeds
Cause of vulnerability: The contract does not enforce that the decimals() function of the implemented AggregatorV3Interface matches the DECIMALS constant set during deployment.
Potential impact: An attacker could deploy a malicious price feed contract with token decimals different from the DECIMALS constant, leading to incorrect scaling of the token balance. This could allow an attacker to steal all funds during rebases, siphon fees, or manipulate token prices.
Working process of the vulnerability: During the constructor execution, if the decimals() value from the linked price feed contract does not match the DECIMALS constant, no rebase will happen, but funds can still be sent, leading to the deposit of incorrectly scaled amountsgetTokenBalances. A malicious actor can use funds in the contract to manipulate the price of the token.