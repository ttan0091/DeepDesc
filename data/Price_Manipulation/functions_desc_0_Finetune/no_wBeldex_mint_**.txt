Type of vulnerability: Reentrancy or Logic Error
Cause of vulnerability: Incorrect total supply calculation in the mint function, leading to an increased total supply without equivalent funds held by the proxy.
Working process of the code:
1. The depositWithAmount function is called to mint new ERC20 tokens to the proxy contract.
2. The mint function increases the total supply of USDP by the specified amount but fails to transfer the equivalent funds from the USDC lending pool to the lending pool managed by the proxy.
3. Subsequent calls to supplyToLoanPool add the funds to the loan pool managed by the proxy, increasing the total supplied amount.
4. The script overloan_PSMO.py simulates using the script supply.py to borrow USDC with ETH collateral without supplying USDC to cover the borrowed amount.
5. Due to the incorrect total supply, the call to LoanToken.withdraw fails, as the proxy believes it is fully borrowed.