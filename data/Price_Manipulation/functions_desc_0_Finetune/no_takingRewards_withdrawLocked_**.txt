Type of contract: LockedStaking
Works as: A timelocked staking contract that allows users to lock their tokens for a certain period to earn rewards.

Detailed Explanation:
1. Users can lock their tokens for a specific duration by minting them into a StakeLocker instance.
   
2. The LockedStaking contract mints a specific number of silentShill and synth PEG_USD tokens to the StakeLocker based on the duration and amount.

3. Users' stakes are stored in the lockedStakes mapping, which includes the address of the staker, the amount locked, and the ending_timestamp.

4. Users earn rewards daily, accrued in booster.rewards for each kek_id (a unique identifier), based on their stake amounts and locking durations.

5. The function withdrawLocked allows users to withdraw their initial locked amount plus rewards after the ending_timestamp or when unlockedStakes is set to true.

6. The updateReward modifier triggers daily reward accruals for the user before executing the main body of the withdrawLocked function.

7. When it's after the ending_timestamp or unlockedStakes is true, the function calculates the amount to be withdrawn based on the stake's multiplier and the current pool size relative to the historical pool size.

8. The tokens are then transferred to the staker, and the stakes are removed from the lockedStakes array and the StakeLocker contract.