Type of vulnerability: Improper Use of Internal View for Public Functions
Cause of vulnerability: The function getAddress is designed to work internal but is mistakenly declared public with a view state.
Potential impact: The contract fails to read from the Rocket Pool Token Manager Storage, rendering essential functionality (such as token tracking) useless. This can affect the correct handling of user tokens when a user deposits, and prevent the contract from burning rewards correctly.
Recommended solution: Amend the visibility and state of the getAddress function to internal and view, respectively. Make sure that all rocketStorage interactions within the Token Manager work appropriately. Review the usage of rocketManagerProvider.rplTokenStorage() to ensure it's correctly initialized.