Type of vulnerability: Approval Consistency Issue
Cause of vulnerability: The allowance is decreased with the current value, which may have been set to a lower value due to other actions, leading to insufficient tokens being allowed.
Possible exploit scenario: An attacker or a bot performs an operation outside the contract that requires spending some allowance. The contract then executes another operation that also calls safeDecreaseAllowance with a higher value than the current remaining allowance. This results in the current remaining allowance becoming less than the sum of the two values, potentially leading to the second operation failing due to insufficient allowance.
Recommended solution: Ensure that the allowance is set to zero if the remaining allowance is less than the new value being set, rather than decreasing it strictly by the new value.