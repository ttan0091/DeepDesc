Type of vulnerability: External Storage Pointer Tampering
Cause of vulnerability: The external storage pointers (toSymbol and to) are passed as function arguments and can be manipulated by an attacker to point the storage operation to a different storage slot, allowing for unauthorized storage updates.
Potential impact: An attacker can use this vulnerability to maliciously alter the storage of a different token, leading to loss of funds or unauthorized operations on the affected token.
Recommended solution: The external storage pointers should be determined internally within the function based on the input symbol and toSymbol, rather than being directly passed as arguments. This prevents potential manipulation of storage pointers by external actors.