This code defines a public function named addSwapToken that allows authorized users to add or increment the supply of a swap token. Hereâ€™s a detailed explanation of how this function works:

The function signature includes two parameters: contractAddress and supplyIncrement. contractAddress is the address of the token contract being added or incremented, and supplyIncrement is the amount by which the token supply will be increased.

The function begins with two require statements. The first require statement checks if the msg.sender is authorized to call this function by verifying if the msg.sender is included in the bridgeRoles mapping. If the msg.sender is not authorized, the function will revert with the error message "Unauthorized."

The second require statement checks if the contractAddress provided is a contract address by calling the isContract function. If the contractAddress is not a contract address, the function will revert with the error message "Address is not contract."

Next, the function checks if the swap token associated with the contractAddress is already supported. If the swap token is not already supported (i.e., the tokenContract field in the swapTokens mapping is set to address(0)), a new entry is added to the swapTokens mapping. This entry includes the contractAddress as the tokenContract and sets the supply to the supplyIncrement provided.

If the swap token is already supported (i.e., the tokenContract field is not address(0)), the function increments the current supply of the swap token by adding the supplyIncrement to the existing supply.

After adding or incrementing the swap token supply, the function emits an AddSwapToken event with the contractAddress and supplyIncrement as parameters to notify external listeners about the change.

In summary, the addSwapToken function allows authorized users to manage the supply of swap tokens by adding new tokens or incrementing the existing supply. The function ensures that only authorized users can perform these actions and provides transparency through emitted events.