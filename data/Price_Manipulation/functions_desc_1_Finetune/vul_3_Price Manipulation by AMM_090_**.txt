Type of code: Staking and Reward Calculation

Purpose of the code: The code is part of a staking and reward distribution mechanism that aims to incentivize users to lock their tokens in a contract and receive rewards based on their share of the total deposit.

Key components of the code:
1. accRewardPerShare: Accumulated reward per share, representing the total rewards accrued by the contract divided by the total shares locked.
2. userPendingRewards: The total reward tokens pending for a user.
3. userLastAccRewardPerShare: The last reward per share of the user when they claimed their reward.
4. Functions _computeUpdate() and claimRewards(): Responsible for updating the accRewardPerShare and allowing users to claim their rewards respectively.

Identified issue in the code:
1. The pendingReward function fails to correctly handle the case when the user has not claimed their initial rewards.

Suggested improvement:
1. Ensure that the initial reward from _computeUpdate is not added to user's pending rewards if they have not claimed their first reward yet.