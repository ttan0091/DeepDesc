Type of contract: AutonomousSwap
Purpose of the contract: To provide price discovery for AMMs by swapping tokens under different moneymarkets
Working principle: The contract initializes with 1 stablecoin, and marketmaking by feeding it with tokens swapped from other AMMs on startup, then periodically iterates over other AMMs to balance
 
Detailed steps of the code:
1. On startup, the contract converts its stablecoin balance into aTokens via the main AMM of the lending protocol.
2. It continues taking deposits and deposits to maintain enough liquidity in the pool on all protocols.
3. When the pool goes into a deficit, the contract tops it off through redeeming aTokens on the AMM with the highest yield and converting into aToken on the main protocol.
4. The pool shifts its liquidity gradually over time through rebalances, conducted between the main and the supporting protocol for specific AMMs. This is done to reduce underscores, in particular, if there's a sudden demand shift.
5. At each rebalance ping is collected and locked, and in the deficit, the pool rewards depositors with its part of ping.
6. Strategy manages AMMs by allocating deposits for each AMM every 12 hours with ping with no effect.
7. After 5 days the strategy will reallocate the rest of the pool and will rinse the excess.
