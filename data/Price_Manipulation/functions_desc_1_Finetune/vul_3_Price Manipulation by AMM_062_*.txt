Type of the code: Blockchain / DeFi  Yield Farming Strategy

Working Process:
1. The MasterChef contract instantiates the StrategistVault, unirouter, and onesplit contracts during deployment.
2. MasterChef calls StrategistVault.setOneSplit to set the onesplit contract and StategistVault as the strategist for the first time.
3. getExpectedReturn is called with different _strategy addresses to get the expected value returned by OneSplitAudit.
4. onesplit.getExpectedReturn calculates the expected return for converting _token to its corresponding want, based on the _token balance of _strategy.
5. _strategy's balance of _token is obtained and used to fetch the want token via IStrategy(_strategy).want().
6. expectedReturn from onesplit is compared with the cexpected value to determine if any extra amount is available for harvesting.
7. If expected > cexpected, it multiplies cpos with the current strategy's pid reward allocation points to get diffFeeReward.
8. It then calls the claim external function of the StategistVault, passing pid and diffFeeReward as arguments.
9. The StategistVault.claim function performs the transfer of the want token from StategistVault to the relevant contract using the _pid argument.