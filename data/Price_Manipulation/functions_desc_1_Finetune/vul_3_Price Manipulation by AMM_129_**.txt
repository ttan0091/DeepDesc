Type of the system: Automated Market Maker (AMM)
Type of liquidity pool: Constant Product Market Maker (CPMM) using xy=k invariant
Working process: 
1. Initial Setup:
     Deployer adds an initial liquidity of 10,000 ETH and 100,000 DAI to the pool using addInitialLiquidity().
     LP token representing the liquidity share is minted.
     The remaining tokens (FEE token and beneficiary token) are moved to the treasury vault.
2. Pool Manipulation:
     Users can add/remove liquidity by burning/minting LP tokens and transferring/exchanging ETH and DAI in the pool.
     When adding liquidity, the addQuote() method calculates the amount of LP tokens to be minted based on the percentage share of the tokens.
     When removing liquidity, LP tokens are burned, and the corresponding ETH and DAI tokens are transferred back to the user.
3. Trading Process:
     Users can swap ETH to DAI and vice versa through the pool using the ezswap() method.
     The method calculates the output amount based on the input amount, reserve ratios, and the fee.
     The invariant xy=k ensures that the product of reserves remains constant, preventing large slippage for trades that do not significantly impact the pool.