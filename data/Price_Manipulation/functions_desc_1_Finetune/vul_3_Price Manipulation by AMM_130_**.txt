Type of vulnerability: Frontrunning and Governance Exploit

Cause of vulnerability: Lack of protection against sandwich attacks and frontrunning during rebasing phases, combined with relaying governance proposal results during price rebasing without confirming governance changes.

Affected function: function pushToUniswap() internal

Detailed explanation of the vulnerability and exploit:
1. First transaction: An attacker calls pushToUniswap() to add liquidity with a small amount of 1e10 as ERC20. The attacker then LPs tokens in the AMM pair and gains LP tokens.
2. Governance proposal: At least 10% of the LP tokens are required to propose and vote. The attacker's LP tokens value 10e18 USDC, allowing them to vote immediately without waiting for votes.
3. Governance voted: The attacker transfers 10.1e18 from their wallet to the protocol. The uniswap rate updates, increasing the effective price.
4. Second transaction: The attacker calls pushToUniswap() a second time with a huge stablecoin amount instead of a tiny token compared to the protocols balance, sandwiching the governance vote transaction and allowing the attacker to cash out a huge amount of stablecoins.
5. Governance finalized: The original vote now contains a 10.1e18 token transfer and is finalized, draining the protocol's actual funds.