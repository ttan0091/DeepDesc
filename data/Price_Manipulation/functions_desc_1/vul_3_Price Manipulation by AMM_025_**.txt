This code defines a private view function named _peek, which retrieves the price of a token based on its base and kind from a specified source. The function returns two values: the price and the update time of the price.

Hereâ€™s a detailed explanation of how this function works:

1. Function Signature:
    The function _peek takes two parameters: base (a 6byte string representing the base token) and kind (a 6byte string representing the type of price to fetch, either "rate" or "chi").
    The function is marked as private and view, meaning it can only be called internally within the contract and does not modify the state.
    It returns two uint values: price and updateTime.

2. Variable Declaration:
    uint256 rawPrice; declares a variable to store the raw price fetched from the source.

3. Source Address Retrieval:
    address source = sources[base][kind]; retrieves the address of the source from a mapping sources that maps base and kind to an address.
    require(source != address(0), "Source not found"); checks if the source address is not zero, ensuring that a valid source is found. If not, it reverts the transaction with the message "Source not found".

4. Price Retrieval Based on Kind:
    The function uses an ifelse statement to determine the type of price to fetch based on the kind parameter.
    If kind is "rate", it calls the borrowIndex function on the CTokenInterface contract at the source address to get the raw price.
    If kind is "chi", it calls the exchangeRateStored function on the CTokenInterface contract at the source address to get the raw price.
    If kind is neither "rate" nor "chi", the function reverts with the message "Unknown oracle type".

5. Price Validation:
    require(rawPrice > 0, "Compound price is zero"); ensures that the raw price is greater than zero. If the price is zero, it reverts the transaction with the message "Compound price is zero".

6. Price Scaling and Update Time:
    price = rawPrice  SCALE_FACTOR; scales the raw price by a predefined SCALE_FACTOR to convert it to the appropriate format.
    updateTime = block.timestamp; sets the updateTime to the current block timestamp.

7. Return Values:
    The function returns the scaled price and the updateTime.

In summary, the _peek function fetches the price of a token based on its base and kind from a specified source, validates the price, scales it, and returns the scaled price along with the current block timestamp as the update time.