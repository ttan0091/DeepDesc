This code defines a smart contract named ArenaPool, which includes a state variable nextArenaTime of type uint64 to store the timestamp of the next arena event. The contract also contains a function named sendArena, which is an external function that can be called from outside the contract.

Hereâ€™s a detailed explanation of how this function works:

1. Function Declaration and Visibility:
    The function sendArena is declared as external, meaning it can only be called from outside the contract.
    The function has a return type of uint64, indicating it will return a 64bit unsigned integer.

2. Variable Initialization:
    Inside the function, a local variable tmNow of type uint64 is declared and initialized with the current block timestamp. This is obtained using block.timestamp, which is a builtin global variable in Solidity that returns the current timestamp of the most recent block.

3. State Variable Update:
    The state variable nextArenaTime is then updated. It is set to the current timestamp (tmNow) plus 21600 seconds. This calculation sets nextArenaTime to 6 hours (21600 seconds) from the current time.

4. Return Statement:
    Finally, the function returns the updated value of nextArenaTime.

In summary, the sendArena function in the ArenaPool contract updates the nextArenaTime state variable to be 6 hours in the future from the current block timestamp and returns this new timestamp. This function can be used to schedule the next arena event by setting the time for it in the future.