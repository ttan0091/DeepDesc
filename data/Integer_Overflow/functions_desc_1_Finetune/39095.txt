Type of vulnerability: Future Timestamp Reversions

Cause of vulnerability: The vulnerability arises from the contract's reliance on a specific future timestamp (`partyTime`) for its functionality. The contract allows a user to store ETH and withdraw it during a "party" that is supposed to occur in the future, as long as the current time is past the `partyTime`. If the `partyTime` is in the future and the contract balance falls to zero due to some condition, the `partyTime` can be reset to a further future time, delaying the withdrawal of stored ETH indefinitely.

Working process of the vulnerability: The contract maps the balance of each user under the key `msg.sender`. When a user deposits ETH, the amount is added to `holders[msg.sender]`. Users should be able to call the `party` function to withdraw their stored balance once the current time is greater than `partyTime`. However, if a specific condition, such as the contract's balance falling to zero, causes the `partyTime` to be reset to a new future time, users may not be able to withdraw their balances until this new `partyTime` is reached.

Exploitation of the vulnerability: A user can exploit this by first storing tokens in the contract. Then, they can execute a function that decreases the contract's balance to zero, which resets the `partyTime`. By repeating this process, the user can lock up tokens in the contract indefinitely and prevent other users from withdrawing their balances.