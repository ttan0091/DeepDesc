Type of vulnerability: Reentrancy 
Cause of vulnerability: The function `withdrawBalance_fixed` incorrectly assumes that Ether transfer to an untrusted `msg.sender` cannot be reentered, allowing attackers to repeatedly withdraw Ether before the contract balance is updated.
Working process of the vulnerability: 
1. An attacker deploys a malicious contract `Mal` and calls `Reentrance.deposit()` to deposit 1 wei to `Reentrance`.
2. The attacker then calls `Reentrance.withdrawBalance_fixed()` to withdraw the 1 wei back, which works because of the `send` call rather than `transfer`, allowing the call to fail without reverting.
3. After withdrawing, the attacker's contract `Mal` calls `Reentrance.withdrawBalance_fixed()` again, causing the function to be reentered and allowing the attacker to withdraw up to the current balance of `Reentrance`.
4. The attacker repeats this process, depositing 1 wei each time, causing the withdrawal amount to double each time, until the contract's Ether balance is depleted.