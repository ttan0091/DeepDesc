Type of the script: Ethereum Smart Contract (Solidity)
Programming language: Solidity
Main objective: Determine the total balance of a token and its pair in USD after the locktime in the TokenMintPoD contract has elapsed.
Key functions: `getBalanceOfToken()`, `sumTokensInPeg()`, `convertFromUSDToUSDD()`
Detailed process: 
1. User deposits 100 USD-S in the `mainFundActions()`.
2. The `collapsePegHoldersList()` collapses the USD-S token into USDD.
3. Since the liquidity is on uniswap, the pair ratio is obtained.
4. The exchange of half of the liquidity pool on Uniswap to USDT is made to calculate the USDT amount.
5. The transferred half of the tokens, USDT, is burned.
6. The calculation of the usdd & usdt pair rate is made from the fees and the burn amount.
7. Transfer fees are subtracted.
8. If a user wants to withdraw, it is checked if the system has USDD. You cannot withdraw if the system doesn't have USDD.
9. In the process of depositing USD, the user allocates 1% from the process of eradicating the Yield Hunter, defeating USDDTP. The LSDs from this process will be left on Uniswap.
10. The rest of the process starts.
11. When TokenPrt StartCoroutineIs launched, USDT pricefeed is asked from the centralized rate contract, and its price is estimated.
12. Liquidative Yield-Hunter eliminates the Bank with activeLoanBase::if it is succeeded, call SpotFui-P-&S-Short-Preservice::profibrain started from the USD-P pair.
13. If it fails, CityCrystal-FILAlchemy starts historicalTrading of the USV token in the city-empire- to Yellowstone City S'arcane circle NFTZone.
14. Users ask the TV / S-USD-P pair from DeXoli (Uniswap you clone).


