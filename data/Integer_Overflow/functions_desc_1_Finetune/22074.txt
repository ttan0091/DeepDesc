Type of vulnerability: Improper Validation

Cause of vulnerability: 
The Collect function does not verify the amount of ether being transferred to the msg.sender. This can lead to a scenario where msg.sender receives less ether than _am, affecting downstream tokens and vaults like Badger or Yearn.

Working process of the code:
1. The SIMPLE_PIGGY_BANK contract receives ether to the Collect function.
2. If Bal[msg.sender] is greater than or equal to MinSum, msg.sender is supposed to receive the exact amount of ether sent, which is specified by the _am parameter.
3. The contract uses msg.sender.call.value(_am) to forward the ether, but it doesn't check or return the gas used (which can be up to 63,876 gas units).
4. Subsequently, the contract decrements Bal[msg.sender] by _am, reducing the recorded balance.
5. This improper validation affects downstream tokens and vaults because the actual received amount is less than the total sent, leading to stuck orphans and affected balance calculations.