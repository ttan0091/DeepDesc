Type of vulnerability: External Call Data Mismatch in Reentrancy Guard
Cause of vulnerability: Failure to adhere to the ETH transfer size validation in the `withdrawEtherOrThrow` function, leading to an invalid forward of the ETH transfer function.
Explanation of how the vulnerability arose: The function `sumTokensInPeg` attempts to transfer the collected fees from BattleBoot to DaoChallenge. Before this transfer, it validates that at least 1 PEG is transferable. If a proportional amount less than 1 PEG is not rejected, it accumulates and is used for the next call. Instead of failing the transfer, it should've reverted the transaction.
Potential impact of the vulnerability: A regulated battle targeting DaoChallenge would bypass the reentrancy guard, repeatedly accumulating value until it's large enough to consume a portion for at least 1 PEG, effectively allowing the attacker to steal ETH.