Type of vulnerability: Integer Underflow
Cause of vulnerability: Inadequate checking for zero balance before withdrawal
Working process of the code: 
1. The contract allows users to deposit and withdraw Ether to/from their accounts using the `Collect` function.
2. When a user attempts to withdraw, the contract checks if the withdrawal amount is less than or equal to the user's balance.
3. If the withdrawal amount is zero (0 wei), the contract passes the `if` condition and attempts to execute a call to the user's address for zero wei.
4. This leads to the execution of the `sub` function from the `SafeMath` library, which does not ensure that the user's balance is at least the withdrawal amount.
5. If the user's balance is less than the withdrawal amount, the `SafeMath` library function will underflow, leading to the subtraction of the withdrawal amount from the user's balance without actually sending any Ether to the user.
6. This results in the user's balance being reduced by the withdrawal amount, potentially locking up any previous deposits the user had made.