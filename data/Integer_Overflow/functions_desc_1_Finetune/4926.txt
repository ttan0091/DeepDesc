Type of contract: Token Timelock Vault

Purpose: The contract allows users to lock their tokens for a specific time period and then withdraw them after this time has elapsed.

Details: The contract stores tokens in a time-locked vault using a mapping where the key is the user address and the value is a struct called `TimeEnvoy` containing the release time and the balance to be released at that time. Users can lock their tokens by sending them to the contract, which creates a new `TimeEnvoy` struct for the user with the current time plus the specified lock duration. After the release time has passed, the user can call the `release()` function to transfer the locked tokens back to their address. The `releasableAmount(address _owner)` function calculates the amount of tokens that can be withdrawn by a specific user based on the current time and the user's release time.