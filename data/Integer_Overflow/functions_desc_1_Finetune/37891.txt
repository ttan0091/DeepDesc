Type of vulnerability: Reentrancy or Race Condition
Cause of vulnerability: The use of `msg.sender` in the balance decrement operation followed by an Ether send allows an attacker to front-run a revert operation, claiming the full balance of the contract.
Explanation of the working process: An attacker can call the `claim()` function of the contract and immediately front-run the call with a revert operation that returns false. This causes the `require` statement to revert, preventing the execution of `claimFor()` on the server. As a result, the full balance of the contract is sent to the attacker.
Vulnerability fix: Ensure the balance is greater than zero prior to performing the transfer. Additionally, a `claimed` flag can be used to prevent re-entrancy attacks.