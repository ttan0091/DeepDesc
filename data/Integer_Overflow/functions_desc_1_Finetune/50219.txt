Type of contract: Dutch Auction
Working process of the code:
1. A user initially mints tokens through `initialMint()`, specifying total token amount and duration.
2. `initialMint()` calculates `priceDrop` based on the specified duration and token amount.
3. `createAuction()` sets `startDate` to `block.timestamp`.
4. `setCurrentAuctionPrice()` calculates the current price based on `startDate` and `priceDrop`.
5. `setCurrentAuctionPrice()` fails if `address(this).balance` divided by `priceDrop` is less than 1, ensuring proper setup.
6. `buyTokens()` allows users to buy tokens, increasing `totalSoldOutTokens` and `price = totalSoldOutTokens * priceDrop`.
7. `finishAuction()` allows `minBidAmount == totalSupply - currentSupply`.
8. `cleanFailedAuction()` cancels auction and returns remaining tokens to owner if auction fails.
9. `onTokenTransfer()` calls `buyTokens()` if transferred value is greater than `minBidAmount`.