Type of vulnerability: Reentrancy Attack
Cause of vulnerability: Unrestricted transfer of Ether without adjusting balance before the transfer
Working process of the attacker's manipulation: 
1. The attacker deploys a malicious contract that implements a `call` function to facilitate reentrancy.
2. The attacker sends tokens to the Reentrance contract and then calls the `withdraw` function of the Reentrance contract to retrieve the tokens.
3. The `withdraw` function calls back to the attacker's malicious contract, where the `call` function manipulates the transfer to allow reentrancy.
4. During the reentrancy call, the `call` function reduces the contract's balance on the Reentrance contract, but the token transfer has already been recorded, leading to multiple withdrawals for the same payment, thereby stealing tokens.