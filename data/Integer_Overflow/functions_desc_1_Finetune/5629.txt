Type of vulnerability: Reentrancy
Cause of vulnerability: Incorrect use of `call.value(...)` without accounting for how the fallback function (`fomo3d.withdraw()`) can be exploited for reentrancy.
Working process of the vulnerability: 
1. The `giveAirdrop.test()` function is called multiple times, transferring an airdrop to the `fomo3d` contract.
2. The `fomo3d.withdraw()` function executes, transferring dividends to the caller.
3. The `fomo3d` contract's `withdraw()` function is designed for reentrancy, allowing the caller to withdraw multiple times within the same transaction.
4. Since the `giveAirdrop.test()` function does not reset the balance for `fomo3d` to 0, the attacker's address can be controlled by repeatedly calling the `test()` function, leading to multiple withdrawals of the airdrop.