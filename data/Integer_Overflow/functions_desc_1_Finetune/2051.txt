Type of the contract: EthertainmentConverterRouterV3
Function to analyze: withdrawInvestments()
Owner of the contract: deployer of the EcroContract

Process:
1. Verify if the sum of removed amounts is sufficient to pay the fee.
2. Call the _sellContributionInPeg function to convert the removed tokens to PEG via pool 500, and the resulting PEG is staked.
3. If the sum constraint has not been reached, discard the fee that can be included and call this in a loop.
4. Collect the PEG after a sufficiently long time which pays interest.
5. Collect the contribution tokens that were hiding the fee.
6. Unstake all PEG that is not converted to Eth.
7. Remove any excess Eth from staking.
8. Transfer any extra Peg to the previous Ecro.

Benefits:
1. Early ecosystem developers can remove stuck tokens that were used to hide the fee.
2. Contributors can withdraw their PEG and assign them to tradeable tokens.
3. Algo traders can convert their PEG to Eth at market rates.