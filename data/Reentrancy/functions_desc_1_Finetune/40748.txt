Type of vulnerability: Integer Underflow
Cause of vulnerability: The `sumTokensInPeg` function allows the `totalTokens` to be equal or greater than `pro_rate(key3,minLessThan)`, leading to a `10 ** 18` multiplier number that cannot be subtracted from, resulting in a failure to update the peg balance.
Explanation of working process: When tokens are acquired and `buyout_mode(true)` is set, the `sumTokensInPeg` function is called to update the total peg balance. If the `totalTokens` after buyout is equal or greater than `(5 * Pro_rate_after) / 10`, the function returns a `10 ** 18` multiplier number, leading to an underflow when attempting to subtract this from the peg balance. This causes the transaction to revert, leaving the peg balance unchanged.