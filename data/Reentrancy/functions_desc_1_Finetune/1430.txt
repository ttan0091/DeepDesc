Type of contract: Wallet / Proxy

Purpose: The contract enables the Staker Wallet to execute transactions on behalf of the user for staking, unstaking, and claiming rewards.

Working process: 
1. Initialization: The user deploys the Staker Wallet and sets the reward distribution pool as the developerFirstPegPool.
2. Staking: The user calls the `callContract` function on the Staker Wallet, which in turn calls the `addConfirm` function on the associated `CITStakerFactory` contract to stake the user's CIT, MINE, and sUSD tokens to receive fsTKERs.
3. Unstaking: The user can initiate unstaking by calling the `callContract` function to call the `unstake` function on the CITStakerFactory, which reallocates their staked tokens and outputs and sends a fixed amount of tokens.
4. Fee Collection: The developer (admin) can call the `sweepUnderlyingV1` function to move staked tokens from one pool to another, incrementing the peg for the remaining fsTKERs.
5. Reward Distribution: 
   - EarningsModelZhang: Rewards earned will accrue to the peg so that they are automatically distributed. 
   - EarningsModelDefault: Rewards are not credited to the peg. The wallet owner must call `earnDefault` to accrue rewards. Accomplished via the `callContract` function.