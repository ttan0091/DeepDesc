Type of the system: Smart Contract
Programming language: Solidity
Type of vulnerability: Logic Error
Cause of vulnerability: Incorrect handling of edge case where stake amount equals startVoteCount.
Explanation of the vulnerability: The function `_updateUserStakedAmount` incorrectly sets `startVoteCount` to the new `userStaked.votes.depositedAmount` even when it is greater than or equal to `startVoteCount`, leading to the condition `startVoteCount >= newStartVoteCount` always being true. This prevents the function from exiting early and results in an underflow of the variable `dividendForVotesGoesToLiquidityAmount`, causing the transaction to revert.
Impact of the vulnerability: The vulnerability prevents users from unstaking their tokens, locking their funds in the contract indefinitely.