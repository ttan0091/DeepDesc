Type of contract: Fomo3d
Type of vulnerability: Re-Entrancy
Cause of vulnerability: Inadequate protection against re-entrancy attacks and insufficient handling of ether transfers via selfdestruct and suicide operations, leading to a loss of funds for other players.
Explanation of the vulnerability: The Fomo3d contract allows a malicious or unintended user, by exploiting a re-entrancy attack, to manipulate a crucial function that updates the winners' ether share. This manipulation can result in the addition of 1 wei more than a fair share, preventing the distribution of the contract's ether balance to its users. Additionally, if `depositSuccessful` is not set to `true` due to a failed transaction, this can result in the contract's ether being permanently locked.
Proposed fix: Enhance the `onlyOwner` modifier to ensure that the `depositSuccessful` state variable is correctly updated and perform more strict checks before self-destructing to prevent ether from being locked.