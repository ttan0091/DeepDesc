Type of vulnerability: Reentrancy
Cause of vulnerability: The immediate reset of rewards for a user before untrustedWithdrawReward() completes, allowing for multiple calls to untrustedWithdrawReward() to claim the same rewards repeatedly.
Explanation of how the vulnerability works: 
1. An attacker with an incentive account can update the peg with the rewardTonear exchange rate and the peg token supply.
2. The attacker calls untrustedWithdrawReward() for their victims before they can be paid their rewards, resetting the rewards for the innocent parties and paying the rewards of the attacker and their incentivized accounts.
3. This process is repeated, each time paying the attacker's rewards and those of the incentivized accounts, reducing the balance of the legit protocols and Dapps that do not call freezeAccount() and reward() method.
5. Over a long period of time, the normal protocol balance pays for the attacker's repeated withdrawals and less formal protocol balances are reduced to zero, harming the business of these protocols.