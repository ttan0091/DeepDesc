Type of vulnerability: Reentrancy / Unchecked Return Value Cause of vulnerability: Lack of check on the return value of the `msg.sender.call.value(_amount)()` statement, which can be exploited to always return true. This allows an attacker to repeatedly call the `withdraw` function before the `balances[msg.sender]` is decreased.Close all loansAmount to be repaid: `1629692160900607940 + 1 stbl = 1 stbl + 10 peg  + 0.03 uusd + 0.003 uusd`