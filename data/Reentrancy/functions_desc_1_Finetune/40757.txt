Type of vulnerability: Reentrancy Attack
Cause of vulnerability: The contract allows the `withdrawBalance` function to be reentrant by using `.call.value()`, which can be exploited to drain ETH from the contract multiple times during a single transaction.

Working process of the vulnerability:
1. Attacker deposits ETH into the `Reentrance` contract and receives tokens.
2. Attacker sets up an exchange to swap these tokens for another coin multiple times in the same transaction.
3. For each swap, the `withdrawBalance` function is called.
4. The first time `withdrawBalance` is called, the contract sets the attacker's balance to 0 and transfers ETH to the attacker.
5. Subsequent calls to `withdrawBalance` exploit the reentrancy to repeat step 4, draining the contract of all its ETH.