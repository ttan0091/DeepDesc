Type of contract: Bounty Contract

Purpose: Allows the owner to set a bounty amount and assigns it to a designated address. Users can claim the bounties by invoking certain functions in other contracts.

Working process:
1. The owner sets a bounty amount by calling `setBountyAmount(address _address, uint _amount)`.
2. The `BountyHunt` contract emits a `NewBountyClaimed` event, specifying the target bounty address and the total bounty amount.
3. Users watch for the `NewBountyClaimed` event in the NFT contract where they have achieved certain rare achievements or "mythical" certifications.
4. If a user sees their address and a sufficient bounty amount in the event, they can call the `acceptBountyHunt()` function in the NFT contract.
5. The `acceptBountyHunt()` call adds the user's balance of this bounty to its tracked balances.
6. When the target bounty address attempts to receive Ether from incoming calls (e.g., from superRare / artBlocks contracts), the `claimBounty()` function deducts the balance and updates the `totalBountyAmount`.
7. The bounty recipient address must call within a certain period (e.g., 5 years) to claim the bounty; otherwise, the bounty claiming is failed.

Impacts of incorrect adoption:
If the `BountyHunt` contract is not used correctly, the target bounty address may not receive the expected funds, and the `totalBountyAmount` will not be adjusted correctly, potentially leading to loss of funds for the contract owner.