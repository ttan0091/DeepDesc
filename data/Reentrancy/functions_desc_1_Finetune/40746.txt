Type of vulnerability: Reentrancy (Transaction Ordering Dependence - TOD)
Cause of vulnerability: The function `withdraw()` in the `Victim` contract allows a malicious token owner to use a token contract that uses the obsolete `transfer()` function, or to transfer tokens through a contract that calls `transferFrom`, to affect the balance of `msg.sender` and potentially steal funds.
Working process of the exploit: A malicious token owner calls `transfer()` or routes the `transferFrom()` through a malicious contract imitating the payment through `transfer()` to steal funds. 
The vulnerability arises due to the conditional check `if(balances[msg.sender] >= _amount)` in the `withdraw()` function of the `Victim` contract, which allows the balance to be manipulated when the transfer has not occurred yet, leading to a misuse of the `withdraw()` method when `balanceOf(msg.sender) > 0`. This in turn exploits the misinterpretation of the balance after an unsuccessful transfer.
