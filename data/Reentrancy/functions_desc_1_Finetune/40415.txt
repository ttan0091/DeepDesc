Type of Contract: Automated Market Maker (AMM)
Key Features: 
1. Instant swap between tokens
2. Users can provide liquidity by depositing token pairs
3. Liquidity providers receive a fee for each trade
4. Price of tokens is determined by the existing liquidity

Working Process: 
1. Deployment: The manager deploys the `EtherDelta` smart contract and sets the initial price of the token using `MarketContract.createTokenPair`.
2. Liquidity Provision: Users can provide liquidity by calling `MarketContract.depositEther`. Liquidity amounts are stored in the `tokens` mapping. 
3. Token Swap: Users can swap tokens instantly by calling `MarketContract.trade`. The `fillOrder` function is used to execute the trade.
4. Fee Calculation: For each trade, a fee is charged based on the `amplification` and `feeFactor` set by the `InitOwner` at deployment. 
5. Fee Distribution: Liquidity providers can withdraw their share of fees by calling `MarketContract.withdrawOwedFees`. 
