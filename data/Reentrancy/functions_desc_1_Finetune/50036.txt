Type of vulnerability: DoS through Regular Payments
Cause of vulnerability: The use of `call` in the `withdraw` function allows external contracts to block the execution, preventing the operation of critical inclusions within the contract.
Working process of the code: An attacker can continuously call the `fallback` function of another contract using a separate contract, which performs lengthy computations or blocks the execution, thereby denying service to the `Reentrance` contract. This denial of service prevents the legitimate withdrawal of funds by the `withdraw` function and balance changes of the `UserRegistry`.
Impact of the vulnerability: The intended behavior of the `Reentrance` contract, which is to allow the owner to withdraw their funds using the `withdraw` function, is impeded. Furthermore, the `UserRegistry` cannot update the balance of the `victim` via its `pay()` function, leading to an inconsistency in the bookkeeping of funds. Ultimately, this could lead to the freezing of funds in the `Reentrance` contract.