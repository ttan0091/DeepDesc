Type of contract: ERC20 implementation for eRC20USDv2
Type of vulnerability: Unlimited Token Withdrawal (Reentrancy)
Cause of vulnerability: The `withdraw` function in the eRC20USDv2 contract does not set the contract balance to zero after a call to the `underlyingContract`, which allows an attacker to bypass the `underlyingContract.withdraw` check and withdraw tokens multiple times.
Working process of the vulnerability: 
1. Attacker deposits eUSDv2 tokens into the eRC20USDv2 contract (to be treated as collateral for a loan).
2. Attacker borrows USDP tokens and repays the initial debt with the borrowed USDP.
3. Attacker repeatedly calls `underlyingContract.withdraw` and `selfDestruct` functions to bypass the check on line 22 (if balance is != 0, fail). This allows them to withdraw an additional USDP amount each time, ultimately draining the contract of USDP tokens.