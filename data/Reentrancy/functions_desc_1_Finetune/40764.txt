Type of vulnerability: Denial of Service (DoS)
Cause of vulnerability: Reentrancy and balance manipulation in OracleManager.Jack().callback()
Working process of the vulnerability: An attacker sends a call to Jack, which results in a callback being queued in FiduciarOracle. When the callback executes, it calls back to OracleManager.Jack().callback(). If the previous call was in relation to a token supply - pulling the balance lower than it was expected within Jack - a panic occurs, freezing the whole thing. This results in all funds within this fund to be locked inside the contract permanently.