Type of contract: Token Utility

Purpose: The contract serves as a bridge that mints valueless tokens (HiroyukiCoin) on another chain to HiroyukiCoinDark, enabling the burning of HiroyukiCoinDark tokens to transfer value to another chain.

Working process: 
1. The `HiroyukiCoinDark` contract is deployed and an owner is defined.
2. Users lock their tokens by sending them to the `HiroyukiCoinDark` address. This transaction updates the `balanceOf` mapping, indicating the amount of locked tokens each user possesses.
3. The user initiates the token bridge process by invoking the `transfer` function with a vast amount of tokens to ensure a fair MERTEUM -> BSC token bridge. The transaction must include specific calldata to be recognized by the token bridge.
4. The `transfer` function checks the sender's balance, deducts the transferred tokens, and updates the recipient's balance accordingly.
5. The function then calls `getEstimatedValueInOtherPeg` from the DEX aggregator's router to determine the value of the transferred coins, ensuring it exceeds the required value for the token bridge.
6. If the estimated value is sufficient, the `valueCheck` modifier allows the transaction to proceed.
7. The user's balance is updated by burning the transferred HiroyukiCoinDark tokens and minting an equivalent value in HRC20 tokens on the Matic network.
8. The `onTokensLockedToMatic` hook passes the native receiver's address and the lessorequal of `MATIC_CONTRACT.maxGasgiverFee`, `msg.sender.balance - `msg.value`` to the AMM, facilitating transaction execution.
9. Finally, the `HiroyukiCoinDark` tokens are relinquished to an address that cannot receive or burn them, ensuring the total supply remains intact.