Type of vulnerability: Privilege Escalation
Cause of vulnerability: Lack of access control for the `Command` function, allowing any user to execute arbitrary ERC20 transactions on behalf of the contract.
Working process of the vulnerability: 
1. An attacker calls the `Command` function, providing their own address `adr` and crafted `data` that includes an ERC20 `transfer` or `approve` call.
2. The `Command` function, which lacks proper access controls, uses `adr` to execute the crafted ERC20 transaction, allowing the attacker to transfer tokens from the contract or manipulate the allowance of tokens.