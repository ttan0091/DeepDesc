Type of vulnerability: Integer Overflow
Cause of vulnerability: Lack of validation for the `amount` variable, allowing it to be manipulated to result in an integer overflow when added to the current network fee.
Explanation of the vulnerability: The `IUnoRouter.trade` function calculates the total amount to be sent, including the `amount` and a network fee. If an attacker constructs a call such that this total amount results in an integer overflow, the transaction will revert, and the network fee will not be burned.
攻击者的手法：执行一个开销为 0 的交易来使 UnoFactory.callRouter 的状态发生变化，这将激活 ProxyRouter.preReceive (RPH) 将 PostageStamp.balanceOf(address(this)) 更新为正确的 msg.value (eth)。再调用 `burnRemainingTaxes`。最后向`Attack.OnBehalfOfSomeAddressReceiveCallSpoofer.Exactly1ETH`发送1FraUD，使router清空Unos。
或者用户可以在同一个地址里面创建多个
「1 ETH → FR5」 or「5ETH → FR5」 使用同一份defense，改变 `Reroute.execute` 的returnValue来获得适当数量的FR5。