Type of vulnerability: Uninitialized Storage Pointer
Cause of vulnerability: Multiple target dummy calls lead to an uninitialized storage pointer, causing the operation to revert.
Working process of the code: When `puppetMaster.deployLeverageDeposit()` is called, the `DummyPuppet` is initialized. It's `updateAndGetnewTarget()` is then called with an amount of 1 to avoid defeating the purpose of the oak update. `DummyPuppet`'s `secondaryCalls()` calls back to `DummyPuppet`'s `updateAndGetnewTarget()`. During this series of calls, due to `updateAndReinvestIfNecessary()`, a new Harvest vault can be deployed and within `dummyPuppet`, itâ€™s target's secondaryCalls() in DummyPuppet will result in a double dummy puppet instance that will screw revert the target. The system would fail to reinvest before the vault investment proxy can update the vault's target in time.