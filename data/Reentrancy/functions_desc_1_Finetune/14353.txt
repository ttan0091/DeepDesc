Type of code: Ethereum Solidity Smart Contract
Name of contract: ICOBuyer
Language or platform: Ethereum Solidity

**Purpose of the contract:**
The contract acts as a buyer for an ICO (Initial Coin Offering) sale, allowing users to send ETH to the contract and initiate a purchase of the ICO tokens during the sale period.

**Working process:**
1. The owner of the contract (`sale`) sets the rate for the ICO token sale and approves sufficient tokens to be transferred from the sale contract to the buyer contract.
2. Users send ETH to the buyer contract using the `buy` function, which internally calls the sale contract's `updateRate` and `buy` functions.
3. The `updateRate` function in the sale contract determines the current rate at which tokens can be purchased.
4. The `buy` function in the sale contract transfers tokens to the buyer, calculating the amount based on the ETH sent and the current rate.
5. If the sale ended, the token amounts are recalculated based on the proportion of the hard cap reached and the remaining tokens are sent to the `teamMultisig` wallet.

**Participants & interactions:**
1. **`ICOBuyer` Contract**: A buying agent owned by the sale contract, allowing users to purchase ICO tokens using ETH during the sale period.
2. **`sale` Contract**: Represents the sale of ICO tokens, interacting with the buyer contract to transfer tokens against received ETH.

**Vulnerability or issue:**
The contract lacks proper handling of ETH waiting in the contract after the sale ends, and users are unable to withdraw their ETH deposits in this case.