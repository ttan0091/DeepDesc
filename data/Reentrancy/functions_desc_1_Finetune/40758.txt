Type of vulnerability: Reentrancy
Cause of vulnerability: Use of `call.value()` which allows the recipient to execute code upon receiving funds, enabling reentrancy when transferring to a malicious contract.
Working process: The `withdraw` function first checks the balance of the caller, then uses `msg.sender.call.value(_amount)()` to send the requested amount to the caller. If the `call` is successful, it decrements the balance. This structure allows a malicious contract to manipulate its own balance to continually reenter the `withdraw` function before the balance is updated, leading to multiple withdrawals of the same funds.