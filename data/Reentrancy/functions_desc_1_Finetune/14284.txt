Type of contract: Halo3D (Charity Address Manipulation)
Vulnerability: The `payCharity` function allows the `admin` to manipulate funds by calling `payCharity` twice to withdraw more funds than donated.
Cause of vulnerability: The subtraction of the withdrawn amount from the total received amount in the contract simplifies all calculations, but it also allows for negative values to be stored, which can be exploited.
Working process: 
1. Admin commits fraud by overdrawing & negating `totalEthCharityRecieved`.
2. The manipulation tricks the contract into thinking there are negative committed funds, allowing the admin to bypass checks.
3. The admin can then call `withdrawCharity()` to withdraw a larger sum than actually committed to charity.
4. This results in the loss of all LP tokens.
5. Bad actors profit from this exploit, and the manipulation negatively impacts the reputation and trust of donors and stakers.