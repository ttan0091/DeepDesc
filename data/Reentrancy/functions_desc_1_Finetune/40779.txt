Type of vulnerability: Reentrancy Vulnerability
Cause of vulnerability: The contract allows the `msg.sender` to call any arbitrary contract during the transfer of ETH, and the ETH transfer precedes the balance update in the storage.
Working process of the vulnerable code: 
1. A user Alice deposits 10 ETH.
2. Someone (attacker) deploys a malicious contract `Mal` with a deceptive fallback function.
3. After the attacker's `Mal` contract is deposited by another user Bob, the attacker uses Bob's balance to withdraw Bob's 10 ETH and deposit it into the `Mal` contract.
4. Now, when Alice tries to redeem her balance, the transfer of ETH to Alice's contract succeeds, but the balance update of Alice's balance in the `Vault` storage fails.
5. As a result, Alice's balance remains intact in the `Vault` storage, and the attacker gets away with stealing Bob's 10 ETH with no consequences.