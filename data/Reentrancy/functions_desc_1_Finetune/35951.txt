Type of contract: Receiver contract
Purpose: To test the reentrancy vulnerability on transfers
Analysis: The Receiver contract is used to test the reentrancy vulnerability by attempting to transfer ETH to a contract that attempts to transfer the same or more ETH back during the same transaction, mimicking an attack scenario.
Vulnerability: The vulnerable design pattern within the `ReleaseableFundsDefault` contract is the misuse of the `Address.send` function and an unnecessary safety check. This allows an attacker to achieve reentrancy, locking implementing contracts' funds.
Explanation of attack: An attacker can create a contract that implements a function similar to the `Fallbackable::receiveChildPayment` function, which is called by the `Address.send` function. If the attacker's fallback function re-calls `Address.send`, it triggers the `RecipientType::receiveChildPayment` call again, leading to multiple withdrawals within the same transaction, ultimately locking the implementing contract's funds.