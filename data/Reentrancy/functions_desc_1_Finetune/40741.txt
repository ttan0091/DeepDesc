Type of vulnerability: Reentrancy
Cause of vulnerability: Missing or incorrect withdrawal pattern and absence of a pauable withdrawal method
Working process of the exploit: 
1. Deploy a malicious contract (e.g., `ReentranceExploit`) to exploit a vulnerable contract (e.g., `pausibleSwap`)
2. Call the `deposit()` function on the malicious contract, passing the address of the vulnerable contract and an amount of ETH
3. During the execution of `pausibleSwap`'s `addLiquidityAndStake()` function, the vulnerable contract performs a callback to the `ReentranceExploit` contract
4. The `ReentranceExploit` contract re-enters the vulnerable contract by calling its `swapAndDeposit()` function
5. This allows the malicious contract to repeat the process, continually adding large numbers of `lpShares` without contributing additional funds, depleting the reward pool