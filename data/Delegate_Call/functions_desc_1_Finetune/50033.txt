Type of contract: Minimal Proxy Pattern (EIP1167)
Purpose: To enable the upgradeability of a contract by allowing a replacement implementation contract to be used without changing the proxy contract.
Working process: The minimal proxy pattern clones a master contract to create a new instance. The created instance's storage is initially empty and points to the implementation contract for all function calls. When a new implementation is deployed, the owner can call the replace function on the proxy, updating the target implementation to the new one using delegatecall. This allows for new features and fixes without disrupting the contract's state or reinitializing it.