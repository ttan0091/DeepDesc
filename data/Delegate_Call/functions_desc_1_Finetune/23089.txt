Type of contract: Delegate Proxy

Purpose: The DelegateProxy contract serves as a proxy for a user's wealth amount and deposits on multiple blockchains. It allows authorized users to interact with the wrapped pegged token via delegated calls to the EraSwapDAO Proxies' corresponding methods on respective bridged networks.

Working process: When authorized users (such as DAO managers) perform actions using the DelegateProxy, the contract ensures that the user.deposit.root.chain and user.deposit.root.amount are synchronized with the actual deposits being held at its vault.deposit.root.chain address. This synchronization is crucial for users to be able to burn EFD, host other users' deposits, and mint EFD. The DelegateProxy performs these synchronization checks via internal functions like saveDepositsToRootOnBridged() and saveDepositsToRootLocal(), adjusting both chain and pegged token balances as necessary.

Key functions:
1. delegateProxy(): This function is used to delegate calls to the EraSwapDAO Proxies of the respective blockchains. It is accessible only to the owner of the Delegate Proxy, ensuring the security of these delegated operations.
2. saveDepositsToRootOnBridged(): This function synchronizes the user's deposits from one blockchain (root chain) to others (bridged chains) in parallel. It ensures that pegged token deposits on multiple blockchains (bridged ones) are synchronously burnable, essential for users to redeem their EFD tokens.
3. saveDepositsToRootLocal(): This function helps to synchronize the user's deposits from one blockchain (root chain) to another one (bridged network). It is designed to work in conjunction with saveDepositsToRootOnBridged() for efficient balancing of deposits on different chains.

Overall, the Delegate Proxy acts as a regulatory layer to ensure that all operations affecting pegged tokens on multiple blockchains are performed safely and in a synchronized manner.