Type of vulnerability: Front Running
Cause of vulnerability: Lack of reentrancy protection in the withdraw function.
Working process of the vulnerability: An attacker specifies a contract to receive the withdrawn funds and front runs the transaction to reenter and call the withdraw function, allowing them to withdraw more funds than they previously had without locking any token.
Recommended fix: Implement a reentrancy guard using the nonReentrant modifier from OpenZeppelin's ReentrancyGuard.sol, or a manual boolean guard inside the function.