Type of the vulnerability: Improper Access Control
Cause of the vulnerability: The Delegation contract is deployed with a default contract Delegate, which does not set an owner in the addOwner() function. This leads to the owner being set to 0x00 by default, allowing the attacker to exploit this and call the changeOwner() function with a nonzero address, claiming ownership.
Working process of the exploit: 
1. Attacker deploys a contract with a similar bytecode to the Delegate contract.
2. The Delegation contract is deployed, and due to the uninitialized owner in the Delegate contract, the owner of the Delegation contract becomes 0x00.
3. Attacker calls the changeOwner() function with their desired address, which the Delegate contract sees as msg.sender (the attacker).
4. The changeOwner() function changes the owner of the Delegate contract to the attacker's address, which is now accepted as the new owner.
5. The attacker now has unauthorized access to the sumTokensInPeg() function, which contains privileged information, and the withdraw() function to drain funds.