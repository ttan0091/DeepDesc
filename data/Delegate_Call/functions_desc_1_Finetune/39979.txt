Type of contract: MultiSignature Wallet
Purpose: To allow multiple owners to collectively control a wallet with hierarchical control options.
Operation: The contract facilitates operations through a multisig interface where multiple owners must agree on transactions. Each owner can have a different weight, allowing more control to designated primary owners.
Key Functions:
1. constructor(address[] _owners, uint[] _weights, uint _required, bool _allArePrimary)  Initializes the multisig wallet with an array of owners, their corresponding weights, the number of required owner signatures, and primary designation.
2. execute(...)  Allows an owner to execute a transaction.
3. revoke(ProposedTX proposed)  Allows an owner to revoke a proposed transaction.
4. withdrawFunds(address _sender, uint _eth, address _tokenAddr, uint _tAmount, uint _decimals)  Allows an owner to withdraw funds.
5. changeOwner(...)  Allows an owner to change the owner list.
6. changeRequirement(uint _new_required)  Allows an owner to change the required number of signatures.
7. finalizeInit(bool _correct)  Completes the deployment process.
8. processActor(...)  Determines the primary owner to act based on the collective weight and status of owners.