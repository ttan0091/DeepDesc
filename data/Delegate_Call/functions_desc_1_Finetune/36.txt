Type of service: Code review and analysis
Task: Explain the working process of the refund function in the PreICOProxyBuyer contract

### Code Review
1. The PreICOProxyBuyer contract defines a refund function that allows an investor to withdraw their excess tokens. The refund process is initiated by the investor and must be completed by the owner.
2. Before the refund, the liquidityReserve and liquidityWholeSaleCount are updated to ensure the contract has sufficient funds to execute the transfer receiving the tokens from Swap to PreICOWholesale pool.
3. The refund is completed by calling the getRefund function on the PreICOWholesale contract, which performs the transfer() using the order of wholesalers and their allocated pool balances.

### Working Process
1. The balance of the investor in the PreICOProxyBuyer contract is updated to reflect the preICO wholesale pool's equity from the PreICOProxyBuyerDeposit.seizeStablecoinAtMost function.
2. The investor initiates the refund by calling the refund function on the PreICOProxyBuyer contract, setting its balance to 0 and starting the refund process.
3. During the refund process, the investor receives the tokens allocated to their position in the preICO wholesale pool using the Chainlink and Swap contracts to convert funds to the required stablecoin.
4. The withdraw function on the PreICOProxyBuyerDeposit contract receives funds from the Chainlink and LiquidityReserve contracts to execute a transfer, allowing the investor to withdraw their stablecoins if their balance is higher than 0.
5. The withdrawFromStablecoin function pushes funds to Swap for conversion to the preferred stablecoin based on Swaps.fiatConversionPriceUSD and fromStablecoin.balanceOf conditions.
6. Finally, the withdrawExcessTokensForStablecoin function is called using swap.getRefund() to credit the tokens.