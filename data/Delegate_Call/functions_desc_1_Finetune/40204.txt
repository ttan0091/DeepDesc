Type of vulnerability: Access Control Bypass
Cause of vulnerability: Lack of access control on the requireStackDepth function, allowing anyone to call it and bypass the stack requirement.
Working of the exploit: An attacker crafts a data payload that includes the target address and calldata, along with additional redundant calldata, to bypass the stack size check and force a transfer of value from the contract. The attacker then executes the delegatecall, which, due to the lack of access control, can be used to invoke the requireStackDepth function on any address, even if it was not designed to be used with delegatecall.
Impact of the exploit: The exploit allows an attacker to drain the contract of all ETH using multiple iterations of the requireStackDepth function, leading to a loss of all ETH and rendering the contract unusable.