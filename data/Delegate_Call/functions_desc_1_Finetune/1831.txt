Type of vulnerability: Incorrect Owner Implementation
Cause of vulnerability: The Mokens contract incorrectly assumes that the first delegate admin is always the owner, leading to the incorrect delegation of admin operations in multiadmin scenarios.
Working process of the code: The moke function in the Mokens contract incorrectly delegates owner operations (e.g., freezing minting and burning mokens) to the first delegate admin, assuming that delegate admin 0 is always the owner. However, in multiadmin scenarios, delegate admin 0 does not necessarily represent the owner, leading to potential security exploits where nonowners can perform owner operations.