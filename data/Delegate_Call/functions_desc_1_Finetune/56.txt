Type of vulnerability: Reentrancy or Callback Mechanism Abuse
Cause of vulnerability: Incorrect usage of call.value() without guarding against reentrancy attacks
Working process of the vulnerability: 
    1. An attacker calls the withdraw() function and passes the check because the balance is nonzero.
    2. The call.value() transfers ETH to the attacker's contract.
    3. The fallback function in the attacker's contract immediately calls back into withdraw() before the balance update, reusing the same nonzero balance to claim more funds.
    4. This process continues, allowing the attacker to drain the contract of all its ETH.