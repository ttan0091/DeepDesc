Type of contract: AccessControl + DelegateCall
Purpose of code: To demonstrate the use of delegatecall to provide a higher privilege method moke() to the Mokens contract without modifying it.
Working process: 
1. The MokenAccess contract is an AccessControl contract that provides a privileged add(address addr) method.
2. The Mokens contract cannot inherit the AccessControl due to its own inheritance tree and the inability to multiply inherit from them (exception: Libs).
3. To gain the abilities of the AccessControl, the Mokens contract uses the minimal MokenAccess contract to implement the metastuff.
4. The Mokens contract includes a delegator address that can be set using the add method.
5. When moke() is called, it grabs the data payload and executes a delegatecall to the delegator, allowing the delegate to execute the function in its own context.
6. This way, the moke() can operate as if it were defined in the Mokens contract while actually executed by a more privileged delegate.