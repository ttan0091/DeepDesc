Type of vulnerability: Inheritance and Delegatecall Vulnerability
Vulnerability description: The Delegate contract is inherited by the Delegation contract which uses delegatecall to execute functions from external contracts. The issue arises in the pwn() function of the Delegate contract, which is supposed to be internal to prevent unauthorized access. However, due to the inheritance and delegatecall usage, this function can be called by any address, leading to unauthorized owner changes.
Cause of vulnerability: The use of delegatecall in the Delegation contract allows it to execute functions from the Delegate contract in the context of the Delegation contract. This, combined with the public visibility of the owner variable in the Delegate contract, bypasses the intended access control of the internal pwn() function.
Working of the exploit: An attacker deploys contracts to exploit the vulnerability by calling the pwn() function of the Delegate contract through the Delegation contract. This manipulation results in the attacker becoming the owner, which can then be used to take control of the contract's logic or funds.
Impact of the vulnerability: The vulnerability allows an attacker to become the owner of the Delegate contract, potentially leading to theft of user funds or disruption of the contract's intended operation.