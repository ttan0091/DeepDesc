This code defines an internal function named _writeSnapshot, which is used to record a snapshot of a specific value associated with an owner's address at the current block number. The function takes three parameters: owner (the address of the owner), oldValue (the previous value associated with the owner), and newValue (the new value to be recorded).

Hereâ€™s a detailed explanation of how this function works:

1. Block Number Retrieval:
    The function starts by retrieving the current block number using block.number and casting it to a uint128 type, which is stored in the variable currentBlock. This is done to ensure that the block number fits within the 128bit unsigned integer type, which is used for storing snapshot data.

2. Snapshot Data Retrieval:
    The function then retrieves the number of snapshots already taken for the owner from the storage variable _countsSnapshots. This count is stored in the variable ownerCountOfSnapshots.
    It also retrieves the mapping of snapshots for the owner from the storage variable _snapshots and assigns it to the local variable snapshotsOwner.

3. Snapshot Update Logic:
    The function checks if there is already a snapshot taken for the owner in the current block (currentBlock). This is done by checking if ownerCountOfSnapshots is not zero and if the block number of the last snapshot (snapshotsOwner[ownerCountOfSnapshots.sub(1)].blockNumber) is equal to currentBlock.
    If a snapshot already exists for the current block, the function updates the value of the last snapshot to newValue. This is done using snapshotsOwner[ownerCountOfSnapshots.sub(1)].value = newValue.
    If no snapshot exists for the current block, the function creates a new snapshot with the current block number and newValue. This is done using snapshotsOwner[ownerCountOfSnapshots] = Snapshot(currentBlock, newValue).
    After creating a new snapshot, the function increments the count of snapshots for the owner by one using _countsSnapshots[owner] = ownerCountOfSnapshots.add(1).

4. Event Emission:
    Finally, the function emits an event SnapshotDone with the owner, oldValue, and newValue parameters. This event is used to notify external observers that a snapshot has been taken or updated.

### Summary
The _writeSnapshot function is designed to manage snapshots of values associated with owner addresses. It ensures that if multiple operations occur in the same block, only the most recent value is recorded, thus preventing redundant snapshots. This function is crucial for maintaining a historical record of values at specific block numbers, which can be useful for various accounting or auditing purposes in smart contracts.