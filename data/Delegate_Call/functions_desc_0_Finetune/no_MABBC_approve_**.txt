Type of vulnerability: Approval Race Condition
Cause of vulnerability: Resetting the approval amount to zero before setting a new nonzero approval allows the spender to perform an allowance race.
Working process of the vulnerability: 
1. Owner approves a nonzero allowance for a spender.
2. Spender exploits the approval race condition by first swapping the token and subsequently submitting the exploit transaction.
3. Exploit transaction decreases the owner’s allowance and immediately calls transferFrom to steal the amount.
4. transferFrom reverts due to insufficient allowance.
5. Steps 2 through 4 are repeated until the spender’s allowance is exhausted, effectively draining the owner’s balance.