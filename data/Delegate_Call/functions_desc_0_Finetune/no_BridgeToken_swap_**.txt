Type of the script: Algorithm Implementation

Purpose of the script: To demonstrate the swapping of an old ERC20 token to a new one based on a predetermined peg using the ERC20PegToken smart contract.

Highlevel overview of the process:
1. The contract is deployed with the old token and the new token addresses, and the initial supply of the old token.
2. The deployer mints the initial supply of the new token and swaps it for an equal amount of the old token using the swap function.
3. Subsequent swaps are initiated by users to exchange the old token for the new one at a 1:1 peg ratio until all the old tokens are burned.
4. During these swaps, the supply of the new token is adjusted downward, and the old tokens are burned as the new tokens are minted for the user.

Detailed working process of the swap function:
1. Input validation: The function checks if the input token address is a contract, the swap token address is set, and the swap amount is less than or equal to the current supply.
2. Supply adjustment: The supply of the swap token is updated to reflect the reduced amount after the swap.
3. Burning old tokens: The old ERC20 tokens are burned from the user's address using ERC20Burnable.
4. Minting new tokens: The new tokens are minted and sent to the user.
5. Emitting an event: A Swap event is emitted to signal the completion of the swap.