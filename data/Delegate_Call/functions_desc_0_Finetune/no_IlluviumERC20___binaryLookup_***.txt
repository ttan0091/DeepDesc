Type of contract: TimeVault
Audience: Develper, User, Auditor
Purpose: Explain the working process of __binaryLookup function in TimeVault.sol

The __binaryLookup function is used to perform a binary search on an array of VotingPowerRecord to find the index corresponding to a target block number. This index is used to retrieve the voting power of the user at that specific block number. The function returns the index i such that history[i].blockNumber <= n and history[i+1].blockNumber > n.

Here's a detailed explanation of how the __binaryLookup function works:

1. The function takes two parameters: the address of the user _to and the target block number n.

2. It retrieves the VotingPowerRecord array for the user specified by _to.

3. The function initializes two variables i and j which represent the left and right bounds of the search interval, respectively. Initially, i = 0 and j = history.length  1.

4. The function enters a while loop that continues as long as j > i. The loop is designed to narrow down the search interval to a single index.

5. Within the loop, it calculates the middle index k of the current interval [i, j].

6. It reads the VotingPowerRecord at index k and compares its blockNumber with the target block number n.

7. If the blockNumber at index k is equal to n, the function returns k as the exact match is found.

8. If blockNumber is less than n, it updates the left bound by setting i = k.

9. If blockNumber is greater than n, it updates the right bound by setting j = k  1.

10. The loop continues to converge the interval until j and i are equal, at which point the function returns the lower bound i.

11. The returned index i is such that history[i].blockNumber is the greatest block number less than or equal to n, ensuring that history[i+1].blockNumber is greater than n.