Type of vulnerability: ERC777 Allows Overspend in Token Operator
  
Cause of vulnerability: The contract allows a token operator to transfer an amount of token that is not sufficient in the calleeâ€™s address, despite the callback result indicating such. This is due to the implementation of need to extract a portion of the additional allowance that was not used, which implies a should not cancel case.

Exploitation of vulnerability: A recipient and a malicious token operator can collaborate, where the recipient implements the shouldForceCancel function that indicates a cancel is required, yet returns an amount that allows partial transfer to succeed. The operator then rewards the recipient, or forwards the remainder of the transfer to itself.

Proposed solution: It is unclear if the callback result conforms to expectations, but at minimum the contract should indicate partial transfer when shouldForceCancel results in Overflow in case. Also, shouldForceCancel should potentially receive an indication of whether the callback result was Overload in case. Additional feedback will be required from the client, as this could be desired behavior.