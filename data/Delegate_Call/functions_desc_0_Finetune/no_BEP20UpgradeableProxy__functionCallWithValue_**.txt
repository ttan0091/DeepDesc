Type of contract: Poolque G.Farm with multiple pools
Language/Platform: Solidity
Functionality: Staking and Yield Farming
Vulnerability Type: Arithmetic Underflow/Overflow and Contract Accessviolation
Cause of Vulnerability: Lack of proper token value validations and insufficient validation to ensure that the target address is a contract.
Impact of Vulnerability: Incorrect assessments of the Total Value Locked (TVL) and potential reentrancy or failure in contract calls.
Exploit Scenario: An attacker can exploit the contract by staking zero amounts to create fake staking positions, draining staked values by removing genuine positions, blocking staking of bUSD by caking gDepositFarm.bUSD.p1, and frontrunning Swing gGeocould to mint Geocould Rangers.createObjectives.
Proposed Fix: Implement proper zero value validations in the staking functions and add isContract(target) check to gDepositFarm core contract call functions.