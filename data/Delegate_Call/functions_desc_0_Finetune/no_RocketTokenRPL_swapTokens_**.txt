Type of the code: Solidity Smart Contract
Name of the contract: RplTokenV2
Purpose of the contract: The contract is used to swap RPL for RPL Fixed Supply in a financial transaction and mint new tokens for the swapped RPL.
Type of the vulnerability: Loss of Privilege (Transactions vs Unprivileged Operations)
Cause of the vulnerability: The contract mistakenly assumes that operations are privileged based on the sender, rather than utilizing careful determination of privileged states.
Process to exploit the vulnerability: A malicious user can call the approveExternalTransfer function to approve their own contract to transfer RPL, but the contract from which these tokens are transferred is not charged for these RPL. This allows the malicious user to mint RPL Fixed Supply.
Impact of the vulnerability: The impact of this is minor, as the malicious user can only mint RPL fixed supply for their own RPL. This means that they're essentially locking up some RPL as a cost to remove their own inflation reward.