Type of vulnerability: Single function reentrancy
Cause of vulnerability: Lack of validation to ensure that pendingImplementation is nonzero and different from the current implementation before calling _getPendingImplementation().
Working process: The setPendingProxyImplementation() function sets pendingImplementation to zero, which enables the finishUpgrade() function to perform a proxy upgrade. If a reentrancy occurs in _getPendingImplementation() and pendingImplementation is assigned to current implementation (as in the initiationtime reentrancy), the contract will fail with ERR_UNKNOWN. If pendingImplementation is zero, the function will return directly, causing setImplementation(), which calls _skipABI'=true to not work as expected. This can potentially lock users' tokens.