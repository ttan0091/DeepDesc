Type of vulnerability: Incorrect Address Assignment
Cause of vulnerability: The contract fails to ensure that the reward tokens are always transferred to the centralized pool address (founderDeposits specifically for PeggedPool), and instead uses the msg.sender address, which can be manipulated by the user.
Explanation of vulnerability: When a user deposits their collateral using a token that includes rewards, the contract attempts to convert the deposited amount to the pool's base token (Peg). This conversion involves transferring the reward tokens to the founderDeposits pool address. However, the contract incorrectly identifies the msg.sender as the address it needs to transfer the rewards to, leading to the loss of reward tokens.
Impact of vulnerability: A user can potentially deposit a large amount of collateral using tokens that distribute rewards and then later withdraw these deposits using a different token that does not distribute rewards. This manipulation allows the user to lose the reward tokens, which could otherwise be used to generate more yield.
Vulnerability fix: The contract needs to be updated to ensure that the reward tokens are always transferred to the founderDeposits pool address, both during the deposit and withdrawal processes.