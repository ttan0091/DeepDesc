Type of contract: Fixed Supply ERC20 Token

Initialization of token supply: 
 The contract creator/initiator sets the initial supply value (public constant INITIAL_SUPPLY), for example, 1,000,000.
 The supply is assigned to the creator/initiator’s account.
 The _totalSupply state variable is updated to reflect the total supply.

Working process during token burns:
1. A user calls the burn() function with the desired amount of tokens to burn.
2. The _burn() internal function validates the burn request:
    Ensures the sender's address is not the zero address.
    Checks if the amount to burn is within the sender's balance.
3. The specified amount of tokens is removed from the sender's balance _balances[account].
4. The total supply _totalSupply is reduced by the same amount.
5. An event Transfer() is emitted with the sender’s address as from, the zero address as to, and the amount as value.

Key contract components:
 _totalSupply: A public variable tracking the total supply of the ERC20 token.
 _balances: A mapping storing the token balances of users.
 burn(): A public function facilitating the burning (destruction) of tokens from a specified user's account.