Type of vulnerability or functionality being created: Infinite Converting Loops Vulnerability in Stable Swaps
   Leverage in the existing code: The contract allows converting any amount of tokens to underlying peg and convert to a different stable coin if all the fees configurations are zero, serving as a safer ReserveCurrency for all hopcompatible Swaps.
   Proposed fix or improvement: Add an invariant hook _injectiveInvariantCheckHook to indicate that the invariant is known to hold. This invariant check is executed both for regular and emergency recurring Ejects / Injects, making the operation idle. By introducing the invariant hook and using it for rebalances in KillInTetherMode, we prevent minor fluctuations during reallocations from breaking invariant checks. Moreover, we prevent the migration to the next standard (ResaveGasConfigurationForReserves), reducing the impact of only witnessing fluctuations just before migration. Additionally, we prevent an issue of large trucks stealing tons of tokens just after accounting but before migration.