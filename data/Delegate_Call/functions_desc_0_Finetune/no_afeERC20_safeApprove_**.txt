Type of vulnerability: ERC20 standard violation
Cause of vulnerability: The contract's safeApprove function enforces a nonzero to nonzero allowance check, which is at odds with the ERC20 standard's allowance semantics.
Impact of vulnerability: The incorrect allowance semantics can lead to transactions reverting when the standard behavior would not, potentially causing users to lose funds if not properly handled by the frontend.
Recommended fix: Modify the safeApprove function to remove the nonzero to nonzero allowance check and adhere to the ERC20 standard's allowance handling.