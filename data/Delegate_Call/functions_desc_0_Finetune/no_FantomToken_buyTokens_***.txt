Type of contract: Crowdsale ERC20 Token Launch Contract

Purpose of the contract: The contract is designed to facilitate the sale and distribution of a new ERC20 token through a crowdsale mechanism. Specifically, it establishes a launch pool where users can contribute a minimum amount of ether (MINIMUM_CONTRIBUTION) and receive the new tokens based on the amount contributed.

Working process of the buyTokens() function:
1. User Contribution:
    A user calls the buyTokens() function.
    The user must be whitelisted and contribute ETH equal to or greater than the minimum contribution amount (MINIMUM_CONTRIBUTION).
    The user receives an amount of tokens corresponding to their ETH contribution, calculated based on the conversion rate (ethToTokens()).
    If the user's requested token amount exceeds the available token supply (TOKEN_MAIN_CAP.sub(tokensMain)), the excess ETH is returned to the user.

2. Record Keeping:
    The user's balances are updated: balances[msg.sender] and balancesMain[msg.sender] increase by tokens_issued, which represents the tokens the user receives.
    The total tokens issued (tokensMain) and tokensIssuedTotal increase by tokens_issued.
    The user's ETH contribution (eth_contributed) is added to ethContributed[msg.sender] and the total ETH contributed (totalEthContributed) is updated.

3. Ether Transactions:
    If there is ETH to return (eth_returned), it is sent back to the user.
    The user's contribution amount worth of ETH is transferred to the wallet.

4. Event Emission:
    Two events are emitted to log the token transfer (Transfer()) and the contribution details (RegisterContribution()).