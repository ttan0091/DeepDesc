Type of vulnerability: Precedence of Ownership during Ownership Transfer

Cause of vulnerability: The ownership transfer function manipulates the values of the owner and pendingOwner variables in such a way that the pendingOwner can be set to precede the original owner in ownership decisions.

After the emit OwnershipTransferred(owner, pendingOwner); statement, the pendingOwner is set to the zero address, which means the original owner loses access to the contract if the balance of the original owner is less than the standard fee.

Exploitation of the vulnerability: 
1. Call transfer2 function, whose onlyPendingOwner modifier calls require(msg.sender == pendingOwner).
2. Call setPendingOwner, setting pendingOwner to "attackerA" and setPendingOwnerP2 setting pendingOwner to "attackerB" creating a race condition, or lock out the original owner if the balance of the original owner is less than the standard fee