Type of vulnerability: Reentrancy
Cause of vulnerability: The isContract function incorrectly returns false for address(this), preventing correct reentrancy checks for the internal CDP functions.
Working process of the code:
1. The modifier nonReentrant is used on the internal function purchaseIndexesByConvertingTokens, intended to prevent reentrancy.
2. The purchaseIndexesByConvertingTokens function uses the isContract function to check for reentrancy.
3. The isContract function checks if the target address is the null address and if not, then it checks the contract size using extcodesize.
4. The extcodesize check will always return 0 for address(this) due to how contracts are compiled, causing the isContract function to incorrectly return false.
5. As a result, the reentrancy check always fails, making the nonReentrant modifier ineffective, and allowing the function to be called again until the temporary cache is fully utilized.