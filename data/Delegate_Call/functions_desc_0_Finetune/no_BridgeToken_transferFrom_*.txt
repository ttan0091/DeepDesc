Type of contract: ERC20 standard token contract
Purpose: To allow users to create custom tokens and deploy them on the Binance Smart Chain (BSC) or Ethereum mainnet.

Working Process:
1. The contract is deployed with the name, symbol, decimals, and totalSupply provided by the user.
2. Users can then create an instance of the contract and mint tokens to their own address using the mint() function.
3. Users can also allow other addresses to spend tokens on their behalf using the approve() function.
4. Approved addresses can then transfer tokens on behalf of the user using the transferFrom() function.
5. Each token transfer is recorded and updated in the _balances and _allowances mappings.
6. The contract allows for the burning of tokens through the burn() function, reducing the total supply.
7. Users who own tokens can redeem their tokens for the underlying pegged token via the redeem() function.
8. The allowToMint and allowToRedeemMint functions control the ability to mint and redeem tokens, respectively, based on whether these functions are allowed by the master admin.
9. The afterBalanceTransfer hook is provided for the master admin to call defined functions after a balance transfer occurs.