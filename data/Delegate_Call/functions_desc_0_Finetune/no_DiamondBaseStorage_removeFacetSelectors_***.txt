Type of vulnerability: Slot Clash and Selector Collapse

Cause of vulnerability: The order of the new selectors in the svgNftPropertiesSelectors1 and svgNftMaxRarityInksSelector1 parameters matches so that they fall within the same 32byte slot in the diamond's data. When the configureSvgNft function is called, it updates the facets and selectors using the removeFacetSelectors function, which is designed to collapse selectors. This results in the __PixelarityInks__ selector blocking the setMaxInkRarity function, preventing its future usage.

Impact of vulnerability: The vulnerability causes the svgNftMaxRarityInksSelector to be overwhelmed by the __PixelarityInks__ selector, leading to the setMaxInkRarity function becoming inaccessible.

Proposed solution: The configureSvgNft function should be modified to add the svgNftMaxRarityInksSelector last, ensuring it is not overwhelmed by other selectors. Additionally, the removeFacetSelectors function can be extended to provide the FacetCutNature as an argument to allow for better control over how facets are removed and added.