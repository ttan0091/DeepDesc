Type of vulnerability: Arbitrary Allowance Value Manipulation
Cause of vulnerability: The vulnerability arises because the allowance method returns the _allowedValue directly, allowing an attacker to pass this check with a smaller amount and later transfer the larger amount due to imbalance.
Working process of the code: The crowdfund function first updates the _allowedValue in the allowed mapping using the fundStruct.approvedAddress as the spender. Later, in the returnChange() function, the cfToken.transfer(msg.sender, _allowedValueFund); call uses msg.sender and fundStruct.approvedAddress as the sender and spender, respectively, to transfer the funds. This process can be manipulated by passing a smaller amount during the crowdfund() call and a larger amount during the returnChange() call.