Type of contract: ERC20 Permittable with Initial Supply

Purpose of the contract: The contract is an ERC20 token that represents liquidity in the Router. The liquidity is paired with GRT tokens (as well as wETH) and so the value of the liquidity changes over time as the pool trades. This contract tracks the users' share of the Uniswap profits and update the share price when a user interacts with it, so they can realise these profits.

Working process of the permit function:

1. The permit function in PermitManageableERC20.sol is called, which is part of the ERC20 permit extension standard.
2. The function calculates a digest using the provided parameters (owner, spender, value, deadline) and the contract's DOMAIN_SEPARATOR.
3. The ECDSA.recover function is used to get the public key from the r, s, and v parameters.
4. The recovered address should match the _owner of the permit, otherwise the function will revert with "GRT: invalid permit".
5. If a nonzero deadline is provided, the function checks that the current block timestamp is before the deadline, otherwise it reverts with "GRT: expired permit".
6. Once all checks pass, the function calls _approve(_owner, _spender, _value) to set the allowance for the spender.