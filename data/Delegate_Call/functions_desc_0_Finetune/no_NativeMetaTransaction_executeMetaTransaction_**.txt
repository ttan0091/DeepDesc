Type of the system: Governance Proposal and Voting System

Overview:
 The system allows for the creation and execution of governance proposals via meta transactions, eliminating the need for proposers to hold a minimum amount of voting power.
 The proposal execution can be triggered by any user, but only after it passes the minimal approval threshold set by other users.
 The voting power required to create proposals is dynamically adjusted based on the current success rate of their executed proposals.
 Users can have their voting power reduced if they frequently propose unsuccessful proposals.

Key Participants:
 Governor: The top user in the governance contract who can execute any proposal.
 Proposer: A user who creates a proposal and votes on it.
 Voter: A user who can vote on other users' proposals.
  
Roles and Functionality:
 Proposal Creation: The proposer creates a proposal with a given function signature. A unique identifier is generated for the proposal using the function signature and the proposer's address.
 Voting: When creating a proposal, the proposer votes on it. Other users are allowed to vote either for or against the proposal, but a user cannot vote on their proposal.
 Execution: A proposal becomes executable if the votes in favor of the proposal form a specified threshold. Once executable, any user can execute the proposal by calling the executeMetaTransaction method.
 Voting Power Adjustment: Successful proposals increase the proposer's voting power, while unsuccessful ones decrease it.