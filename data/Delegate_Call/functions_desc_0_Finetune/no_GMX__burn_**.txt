Type of vulnerability: Frontrunning Manipulation
Cause of vulnerability: Inadequate transactionorder impact analysis during transaction execution, specifically related to burn events.
Working of the exploit: The attacker frontruns a burn event by calling the _beforeTokenTransfer hook with an updated balance, manipulating the level of rewards received and potentially causing permanent loss of funds to the attacking yield vault.
Prevention of this exploit: The contract should be updated to include warning checks and revert the transaction if the _beforeTokenTransfer hook is executed with a burn event. Additionally, setting the price oracle to a readonly version can reduce the impact of transaction reordering.