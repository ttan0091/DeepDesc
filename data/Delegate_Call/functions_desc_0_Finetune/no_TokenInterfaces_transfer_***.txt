Task: Explain the working process of the code
Programming Language: Solidity
Type of Code: Compound Finance Interaction with Uniswap V2
Code Summary: The code interacts with the Compound Finance protocol to deposit tokens in a cToken and then uses the Uniswap V2 router to swap cTokens for WBTC tokens.

Detailed Working Process:
1. Deposit Function:
    The contract mints cTokens by calling vToken.mint().
    It then updates the LP information by calling UpdateAmountJoeUse().
    The remaining cTokens are deposited to the balancer by calling DepositInPoolBalancer().
2. Withdraw Function:
    The contract removes cTokens from the balancer by calling RemoveFromPoolBalancer().
    It calculates the rewards and sends them to the user with UpdateAmountJoeUse().
    The remaining cTokens are redeemed with vToken.redeem().
4. Liquidate Function:
    Users who repay will be charged with the TOKEN.getReward and liquidators will be the benefactors of that charge.
    The contract will repay cTokens.
5. Fundamental Functions:
    SetjoeRoute() sets the route to take WETH to JOE.
    setJobjumlah() updates the minimum accumulated reward is set in a rational range between 0.001 WETH to 0.1 WETH.
    getUSDRateParityPercent() calculates the exchange rate of 0.9 percent.
    getClaim() calculates and returns the claimable amount from initial points to the present moment.
    getINFO() returns the user's rewards and the ratios.
6. Call Functions:
    UpdateAmountJoeUse() to update the user's rewards and ratios.
    DepositInPoolBalancer() to deposit the user's share of the pool.
    RemoveFromPoolBalancer() to remove the user's share of the pool.