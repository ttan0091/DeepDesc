This code defines a private function named _functionCallWithValue, which is designed to execute a lowlevel call to another contract with a specified amount of Ether (weiValue) and data payload. The function handles potential errors and reverts with a custom error message if the call fails.

Hereâ€™s a detailed explanation of how this function works:

1. Function Signature and Parameters:
    address target: The address of the contract or account to which the call is directed.
    bytes memory data: The payload of the call, typically containing the function selector and arguments.
    uint256 weiValue: The amount of Ether (in wei) to be sent with the call.
    string memory errorMessage: A custom error message to be used if the call fails.

2. Contract Check:
    The function starts by calling isContract(target), which checks if the target address is a contract. This is crucial because calling a noncontract address with a lowlevel call can lead to unexpected behavior. If target is not a contract, the function reverts with the message "Address: call to noncontract".

3. LowLevel Call Execution:
    The function then performs a lowlevel call using target.call{ value: weiValue }(data). This call sends the specified weiValue along with the data payload to the target address. The result of the call is captured in two variables:
      bool success: A boolean indicating whether the call was successful.
      bytes memory returndata: The data returned by the call, if any.

4. Handling the Call Result:
    If the call is successful (success is true), the function returns the returndata received from the call.
    If the call fails (success is false), the function checks the length of returndata to determine if there is a revert reason provided by the target contract.

5. Reverting with Detailed Error:
    If returndata has a nonzero length, it means the target contract provided a revert reason. The function uses inline assembly to extract and revert with this reason. This is done by:
      Loading the size of returndata using mload(returndata).
      Reverting with the actual revert reason using revert(add(32, returndata), returndata_size).
    If returndata is empty, it means no specific revert reason was provided by the target contract. In this case, the function reverts with the custom errorMessage provided as a parameter.

This function is a robust utility for making lowlevel calls in Solidity, ensuring that any errors or reverts from the target contract are properly handled and communicated.