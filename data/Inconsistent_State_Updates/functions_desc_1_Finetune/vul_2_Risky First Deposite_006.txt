Type of contract: Vault
        Core functionality: Staking LP tokens to earn MIMO rewards
        Key variables and their roles:
            N/Core variables:
                 pidToTokenIdx: Maps pool indexes to their positions in the pools array
                 pools: Array of PoolInfo structs containing data for each pool
                 totalDepositFee: Total deposit fee for all pools
            N/Pool variables:
                 pid: Pool ID
                 lpToken: Address of the LP token
                 allocRewardAmount: Total MIMO rewards allocated to this pool
                 lastUpdateBlock: Block number of last interaction with the pool
                 accRewardsPerShare: Accumulated MIMO rewards per LP token share
                 depositFee: Deposit fee for this pool
                 totalAmount: Total LP tokens staked in this pool
            N/User variables:
                 amount: User's staked amount of LP tokens in a specific pool
                 rewardDebt: Debt the user is owed in terms of MIMO rewards
        Core functions and their processes:
             deposit: Stake LP tokens and receive MIMO rewards
                1. Updates the pool state
                2. If user has existing LP tokens staked, calculates pending MIMO rewards and transfers them
                     Deducts pending rewards from the total reward debt
                     Transfers the pending rewards to the user
                3. If the deposit amount is greater than 0, transfers the LP tokens to the contract and adds the tokens to the user's staked amount
                4. Updates the user's reward debt based on the new staked amount
                5. Emits a Deposit event
             withdraw: Unstake LP tokens and receive MIMO rewards
                1. Updates the pool state
                2. If user has existing LP tokens staked, calculates pending MIMO rewards and transfers them
                     Deducts pending rewards from the total reward debt
                     Transfers the pending rewards to the user
                3. If the withdraw amount is less than the user's staked amount, transfers the requested LP tokens to the user and updates the user's staked amount
                4. If the user is withdrawing all their tokens, resets the user's reward debt
                5. Emits a Withdraw event
             harvest: Claim pending MIMO rewards
                1. Updates the pool state
                2. If user has existing LP tokens staked, calculates pending MIMO rewards and transfers them
                     Deducts pending rewards from the total reward debt
                     Transfers the pending rewards to the user
                3. Emits a Harvest event
             withdrawAndHarvest: Unstake LP tokens, receive MIMO rewards, and claim pending rewards
                1. Updates the pool state
                2. If user has existing LP tokens staked, calculates pending MIMO rewards and transfers them
                     Deducts pending rewards from the total reward debt
                     Transfers the pending rewards to the user
                3. If the withdraw amount is less than the user's staked amount, transfers the requested LP tokens to the user and updates the user's staked amount
                4. If the user is withdrawing all their tokens, resets the user's reward debt
                5. Emits a Withdraw event
                6. Emits a Harvest event