Type of contract: Token Market Pool (TMP)
Core Functionality: Automatic Market Maker (AMM) designed for high frequency trading and simulated high frequency data trading. It consists of a fee model based on negative swap fees and uses virtual trades to simulate high frequency data trading.

Working Process:
1. Initialization: When a TMP is created, it needs to be initialized with base token (baseToken_), LP token (lpToken_), and minimal weight (_minimalWeight). The LP tokens are minted to the creator, and the initial liquidity is assigned to the manager pool created.
2. Adding Liquidity: To provide liquidity, users can call the addLiquidity function, which allows for the addition of both base and fyTokens in a single transaction. The function uses a virtual trade mechanism to determine the amount of base token to send to the pool based on the current balance and the requested amount of fyTokens.
3. Removing Liquidity: Users can remove liquidity by burning their LP tokens using the removeLiquidity function, which returns the base and fyTokens proportionate to the LP tokens burned.
4. Swapping Function: Users can swap base tokens for fyTokens and vice versa using the fundVirtualTrade and goPublic functions. fundVirtualTrade provides a trade that can be performed internally without external interaction, and goPublic performs a trade on an outside spot market, adjusting the TMPâ€™s funds accordingly. The swap fees are calculated based on the virtual trades performed.
5. Persisted Virtual Swap: For high frequency trading, the TMP has the persistVirtualSwap function, which simulates the effect of trading over the course of a day by setting an averageVirtualTradeMuledAmountMimaryty}.
6. Rebasing Operations: The rebase function allows for the execution of persistent swaps and rebases the pool tokens if rebasing is allowed.
