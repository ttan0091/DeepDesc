This code defines an internal function named _writeCheckpoint that is responsible for updating the voting checkpoints for a specific delegate. The function takes four parameters: delegatee (the address of the delegate), nCheckpoints (the number of existing checkpoints for the delegate), oldVotes (the previous number of votes delegated to the delegate), and newVotes (the new number of votes delegated to the delegate).

Here's a detailed explanation of how this function works:

1. The function starts by getting the current block number using block.number and converting it to a uint32 using the safe32 function to ensure it doesn't exceed 32 bits.

2. The function then checks if there are existing checkpoints for the delegate (nCheckpoints > 0) and if the last checkpoint for the delegate matches the current block number (checkpoints[delegatee][nCheckpoints  1].fromBlock == blockNumber).

3. If the conditions in step 2 are met, the function updates the number of votes in the last checkpoint for the delegate to the new number of votes (newVotes).

4. If the conditions in step 2 are not met, a new checkpoint is created for the delegate with the current block number and the new number of votes. The numCheckpoints for the delegate is then incremented by 1.

5. Finally, the function emits an DelegateVotesChanged event with the delegate's address, the old number of votes, and the new number of votes as parameters to notify the system that the delegate's votes have been updated.

In summary, the _writeCheckpoint function is responsible for managing and updating the voting checkpoints for a delegate based on the provided parameters.