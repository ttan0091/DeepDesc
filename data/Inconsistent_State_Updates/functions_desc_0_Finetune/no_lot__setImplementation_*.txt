Type of vulnerability: Corporatization Lockin
Cause of vulnerability: Lack of upgradeability in the UPnP implementation and ownership of the contract by a single source.
Working process of the code: 
1. At the genesis block, a Seed Evidence IPFS hash is set with the function setSeedEvidenceURL(address mbsConnector, string memory seedEvidenceURL), which only the initial owner can call.
2. The addApprovedBalance(), subApprovedBalance(), and stopApprovedBalance(), which are called by the deployment company, only work if msg.sender == __Original__ADMIN.
3. The addApprovedBalance() and subApprovedBalance() add and subtract (respectively) from mbsCircleUSDAmount. If you attempt to set a negative value for mbsCircleUSDAmount that will be less than the original contract initialization value, the total will become zero.
4. If the total of all cart mbsCircleUSDAmounts is zero, then the corporate cartâ€™s total becomes two.
5. If the UpNP loan period ends and the total cart USD amount is mbsCircleUSDAmount, the Seed Evidence IPFS hash must also be set.
6. If the ADH loan period ends, the contract will proxify the implementation to UpNP.