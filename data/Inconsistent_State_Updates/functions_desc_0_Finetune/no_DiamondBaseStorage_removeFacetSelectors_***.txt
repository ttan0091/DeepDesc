Type of vulnerability: Reentrancy or Denial of Service (DoS)
Cause of vulnerability: The vulnerability arises from the capability for facet cuts to bypass illegal slot indexes.
Working process of the vulnerability: 
1. An attacker creates a legal state before updating the diamond.
2. The culprit function IDiamondCuttable.executor calls removeFacetSelectors, which does not revert when selectorSlot is 0.
3. The for loop iterates more than necessary and does not emulate the result from a legal call.
4. The function sets the new array to zero and creates inconsistent facets and selectorSlots.
5. This inconsistency fails the idempotent check in facets.call, breaking the IDiamondCuttable invariant.