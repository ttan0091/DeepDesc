Type of the Transaction: Burning Tokens
        Actors Involved: Token Holders, Strategy Contract, Reward Pool Contract, Controller
        Purpose of the Transaction: To burn a specific amount of tokens in exchange for an equivalent amount in underlying tokens

        Detailed Steps:
        1. The token holder approves the strategy contract to spend a certain amount of LP tokens.
        2. The token holder calls the burn() function in the strategy contract, specifying the number of LP tokens to burn.
        3. The burn() function in the strategy contract invokes the complete() function in the reward pool contract, passing the number of LP tokens to burn.
        4. The complete() function in the reward pool contract calls the burn() function in the controller, which in turn calls the burn() function in the strategy contract with the amount received.
        5. The burn() function in the strategy contract first records the balance of LP tokens committed by the user, then records the time and reward rate at which LP tokens were committed.
        6. The burn() function next calls the complete() function in the reward pool contract with the amount burned.
        7. The complete() function calculates the amount due to the user, which is the difference of the new balance and the committed balance, and transfers this amount to the strategy contract.
        8. The strategy contract calls the burnFor() function in the reward pool contract, transferring rewarded earnings earned to this point.
        9. The burnFor() function calculates the reward amount by iterating over reward epochs and transferring earnings.
        10. If the contract has extra tokens, it will call internal function sumTokensInPeg() on this token to obtain its value.
        11. The function then updates currentBalanceInPeg, calculates reward rate and reward per token.
        12. It finally updates lastRewardedEpoch, newRewardsSinceLastReward and emits RewardsAccrued() event.
        13. The bloq.mine lifecycle hooks invoked for anyExternalBurningStrategy.
        14. The bloq.mine controller function updates balance and reserves for the strategy.
        15. The user alternative residual strategy upgrades the request on strategies.