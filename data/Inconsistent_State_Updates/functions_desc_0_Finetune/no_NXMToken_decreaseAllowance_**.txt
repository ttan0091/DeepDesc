Type of vulnerability: Reentrancy or Logic Error?
Cause of vulnerability: Missing requirements for token approval status before attempting to decrease the approved amount.
Potential exploit scenario: An attacker frontruns a batch transaction that includes an unpair command followed by a transaction that adds a significant LP token amount, then lets a UNRUG distributor call UnRUG and remove LP reward functions. The attacker then sends LP associations to ContractSettings to 1 year forward and, in the same contract call, immediately calls decreaseAllowance with a high amount corresponding to the LP token distribution.
Affected or vulnerable versions: All versions up to v8.1.0.
Proposed fix: Add a check in the decreaseAllowance function to revert if the Spender Next Limit is greater than the already existing approved amount.