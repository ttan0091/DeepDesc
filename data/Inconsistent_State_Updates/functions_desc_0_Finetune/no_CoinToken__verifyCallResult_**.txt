Type of tokenism Expert: Smart Contract Development

Code Provided:

function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {
    if (success) {
        return returndata;
    } else {
        if (returndata.length > 0) {
            assembly {
                let returndata_size := mload(returndata)
                revert(add(32, returndata), returndata_size)
            }
        } else {
            revert(errorMessage);
        }
    }
}


Working Process:
1. This function _verifyCallResult processes the result of an external call to detect if the call was successful or not and to extract the actual returned data.
2. It first checks the success flag of the call. If the call was successful, it returns the returndata.
3. If the call was not successful, it checks if the returndata is not empty. If returndata is not empty, it reverts with the returndata. If returndata is empty, it reverts with the errorMessage.