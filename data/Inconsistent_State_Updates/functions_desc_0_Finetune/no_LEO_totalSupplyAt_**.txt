Type of Smart Contract: DeltaToken
Language/Tools: Solidity, OpenZeppelin
Purpose of the Smart Contract: To provide a rebasing token that adjusts supply based on changes in an underlying peg value
Working Process:
1. The contract sets a targetPrice, which is the peg value the token is tracking. It also sets a priceTargetBuffer, which is a percentage to be used in calculations that allow for token supply adjustments relative to the targetPrice.
2. The contract responds to market conditions by observing the spot price on Delta Exchange and executing rebases to adjust the total supply of DeltaTokens.
3. When the spot price deviates significantly from the targetPrice, the rebase function is called to make supply adjustments and return the price conditions to equilibrium.
4. The contract keeps track of total supply history and uses a bondingPeg constant to minimize the supply divergence relative to the targetPrice.
5. The sumTokensInPeg function is used to sum up the present values of all availabel tokens by analyzing the totalSupply history and current block.
6. The totalSupplyAt function is called to get the total supply adjustments during rebasing and to handle additional conditions such as parent token total supply and genesis block queries.