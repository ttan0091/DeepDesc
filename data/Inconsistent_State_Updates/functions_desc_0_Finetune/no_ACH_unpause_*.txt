Type of vulnerability: Reentrancy
Cause of vulnerability: Lack of Disallowed Unpausable Mechanism
Explanation: The unpause function lacks a check to prevent the contract from transitioning from the paused to the unpausable state. This allows the checkPauser modifier to be bypassed, leading to the onlyPauser check becoming impotent, hence enabling reentrancy during transitions.
Working process of the vulnerability: An attacker can initiate a state transition with a paused contract towards the unpausable state. During this period, the onlyPauser modifier is ineffective. If the attacker calls refillPool or skimPool, the afterReentry modifier is invoked, configuring the PegPool's controller to accept PegPool transfer and allowing reapercmd to transfer an arbitrary amount of ERC20 tokens from the PegPool.