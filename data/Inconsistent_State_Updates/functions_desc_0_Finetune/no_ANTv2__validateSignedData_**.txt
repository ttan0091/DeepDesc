Type of contract: Access Control
Purpose: To ensure that only authorized users can set the price of a token via signed messages, specifically for the case of FTX by using v,r,s values.
Mechanism: It uses EIP712 to create a structured hash that is signed by a private key (in this case, FTX) for a specific message. The hash is then verified using the public address of the signer to ensure that the signature is valid.
Detailed process:
1. Structuring the message in _validateSignedData: A message (encodeData) is created using abi.encodePacked along with the contract's Domain Separator and version information conforming to the standards of EIP712.
2. Signing the message: The message is signed by the private key (FTX's key) using ecrecover to create a signature (v, r, s values).
3. Verifying the signature: The signature is verified by recovering the public key from the hash of the message and checking if it matches the expected signer's address. Additionally, the recovered address is checked to ensure it is not address(0).
4. Authorization check: The recovered address must match the authorized signer's address (FTX) for the transaction to be considered valid, thus providing access control.