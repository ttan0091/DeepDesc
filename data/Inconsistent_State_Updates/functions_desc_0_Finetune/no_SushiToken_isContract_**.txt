Type of the script: Ethereum Solidity Smart Contract
Programming Language: Solidity
Type of vulnerability: GasToken SelfDestruct Attack
Cause of vulnerability: The isContract function uses extcodehash to determine if an account is a contract, which returns 0 for selfdestructed contracts. This allows selfdestructed contracts to mimic EOA behavior and potentially drain funds from users.
Working process of the vulnerability: An attacker can create a gas token with the isContract function that returns false (0) when called after selfdestruct. The token can then be used by an adversary to drain funds from users if sent to an address without a fallback function, as the transfer will succeed and the gas token can be used to drain the remainder.