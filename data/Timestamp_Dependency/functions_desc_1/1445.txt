This code defines two contracts: ERC20Basic and TokenVesting. The ERC20Basic contract is a simplified interface for an ERC20 token, and the TokenVesting contract manages the vesting of tokens over time.

Here’s a detailed explanation of how these contracts work:

### ERC20Basic Contract

The ERC20Basic contract is an interface that defines a single function:

 balanceOf(address who) public view returns (uint256): This function takes an address as an argument and returns the balance of tokens held by that address. This is a standard function in ERC20 token contracts, used to query the token balance of an account.

### TokenVesting Contract

The TokenVesting contract manages the vesting of tokens. It includes several state variables and a function to calculate the vested amount of tokens.

#### State Variables

 ERC20Basic public token: This is a public variable that holds the address of the ERC20 token being vested.
 uint256 public start: This variable stores the timestamp when the vesting period starts.
 uint256 public currentBalance: This variable stores the current balance of the vesting contract.
 mapping (address => uint256) public released: This mapping keeps track of the amount of tokens released to each address.
 uint256 public totalBalance: This variable stores the total balance of tokens that have been vested.

#### Functions

 vestedAmount() public returns (uint256): This function calculates the vested amount of tokens. Here’s how it works:
   currentBalance = token.balanceOf(this): This line calls the balanceOf function of the ERC20 token contract to get the current balance of tokens held by the TokenVesting contract.
   totalBalance = currentBalance + (released[token]): This line calculates the total balance by adding the current balance to the amount of tokens that have been released.
   if (block.timestamp >= start): This condition checks if the current block timestamp is greater than or equal to the start timestamp. If true, it means the vesting period has started.
   return totalBalance: If the vesting period has started, the function returns the total balance of vested tokens.

### Summary

 The ERC20Basic contract provides a basic interface for querying token balances.
 The TokenVesting contract manages token vesting by tracking the start time, current balance, released amounts, and total balance.
 The vestedAmount function in the TokenVesting contract calculates the total vested amount of tokens based on the current balance and released amounts, and returns this value if the vesting period has started.

This setup allows for the management of token vesting over time, ensuring that tokens are released according to a predefined schedule.