This code defines a smart contract named ArenaPool, which includes a public function named sendArena. The function sendArena is designed to calculate and return the timestamp of the next arena event based on the current block timestamp.

Hereâ€™s a detailed explanation of how this function works:

1. Function Declaration and Visibility:
    The function sendArena is declared as external, meaning it can only be called from outside the contract.
    It has a return type of uint64, indicating that it will return a 64bit unsigned integer.

2. Variable Declaration:
    Inside the function, a variable nextArenaTime of type uint64 is declared. This variable will store the timestamp of the next arena event.
    Another variable tmNow is declared and initialized with the current block timestamp converted to uint64. This is done using uint64(block.timestamp).

3. Calculation of Next Arena Time:
    The next arena time is calculated by adding 21600 seconds (which is equivalent to 6 hours) to the current block timestamp (tmNow). This is done using the expression nextArenaTime = tmNow + 21600.

4. Return Statement:
    Finally, the function returns the calculated nextArenaTime.

In summary, the sendArena function in the ArenaPool contract retrieves the current block timestamp, adds 6 hours to it, and returns this value as the timestamp for the next arena event. This function is useful for determining when the next arena event will occur based on the blockchain's current time.