This code defines a smart contract named TANDER which includes state variables and a function for calculating a bonus. Hereâ€™s a detailed explanation of how this contract works:

1. State Variables:
    uint256 public pre_startdate;: This variable stores a timestamp indicating the start date of a presale or some event. It is declared as public, which means it can be accessed directly by other contracts or externally through an automatically generated getter function.
    uint bonusCalculationFactor;: This variable is used to store a factor that is calculated based on the time elapsed since pre_startdate. It is not public and does not have an initial value set.

2. Function bonuscalpre:
    This function is declared as private, meaning it can only be called from within the TANDER contract itself.
    It returns a uint256 value named cp, although it actually returns bon (a local variable) instead of cp.
    Inside the function, a local variable bon is initialized to 8. This variable represents the base bonus amount.
    The bonusCalculationFactor is calculated using the formula (block.timestamp  pre_startdate) / 604800. Here, block.timestamp is the current timestamp of the block being processed, pre_startdate is the timestamp of the presale start date, and 604800 is the number of seconds in a week (7 days). This calculation determines how many weeks have passed since the presale start date.
    If bonusCalculationFactor equals 0 (i.e., no full weeks have passed since the start date), the bonus remains unchanged at 8.
    If bonusCalculationFactor is greater than 0, the bonus is reduced by bonusCalculationFactor  8. This means for each week that passes, the bonus decreases by 8.
    Finally, the function returns the value of bon, which represents the calculated bonus after adjustments based on the elapsed time.

Summary:
The TANDER contract manages a presale start date and calculates a bonus based on the elapsed time since that date. The bonus decreases linearly every week after the start date. The function bonuscalpre performs this calculation and adjusts the bonus accordingly. This contract could be used in scenarios where bonuses or rewards need to be timesensitive, reducing over time to encourage early participation.