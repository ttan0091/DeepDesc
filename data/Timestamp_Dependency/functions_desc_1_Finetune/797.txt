Type of vulnerability: Misuse of public state variable for multiple operational states

Cause of vulnerability: The `isAttached` public state variable is set to `10` during contract initiation to represent the "attached" state. This variable is then also used to store the timestamp of the detach operation. The logic in the `requestDetachment` function does not differentiate between the "attached" state and the timestamp storage state, leading to a scenario where `isAttached` is incorrectly set to `10` when a detach operation is requested for the first time.

Exploitation of vulnerability: An attacker can call the `requestDetach` function, which will set the `isAttached` to the current block timestamp. Subsequent calls to this function will be blocked by the `require` statement, ensuring that no additional timestamp updates can occur. This effectively freezes the contract in a state where `isAttached` is no longer `1`, preventing any tokens from being minted or transferred.

Remediation of vulnerability: The public state variable `isAttached` should be split into separate variables to track the operational states and the timestamp of the detach operation. Additionally, the `requestDetachment` function should be modified to handle these states correctly, ensuring that the contract remains operational after a detach operation is requested.