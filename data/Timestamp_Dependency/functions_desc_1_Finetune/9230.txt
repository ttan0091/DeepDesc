Type of smart contract: Token Timelock/Token Vesting Contract

Purpose of the contract: The contract is designed to lock a certain amount of tokens for a specified interval, after which the tokens can be released by the designated address.

Mechanism of the contract: The contract locks a specific amount of tokens using the `IERC20.approve()` function to approve the contract to spend a specific token amount from the sender's account. Then, after the designated interval, the tokens can be released into the contract's address balance.

Details of the working process:
1. The contract is deployed and configured with the lock parameters: `_token` (address of the token to be locked), `_to` (address where the tokens will be sent after the lock period), `_amount` (the total amount of tokens to be locked), and `interval` (the duration for which the tokens are locked).
2. The `init()` function is called, which enables the lock by allowing the contract to spend `_amount` tokens from the sender's account.
3. The `start()` function is then triggered, which calculates the release time by adding the current block timestamp with the specified interval.
4. Once the release time is reached, the `unlockTokens()` function can be called, transferring the locked tokens to the designated recipient (`_to` address).