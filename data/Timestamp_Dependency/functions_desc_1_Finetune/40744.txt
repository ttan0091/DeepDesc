Type of contract: Loan Management System
        Purpose of the contract: To manage loan openings, margin accounts, funding, and position creation in a decentralized lending platform.
        Key functionality: The contract allows borrowers to open leveraged positions using provided assets as collateral, and also handles the mechanisms for partial closures of positions.
        Operation of the contract: The contract calculates the starting rate for the margin account using the variable `startRate = (startTimestamp == block.timestamp && isTorqueLoan != 0) ? collateralToLoanRate : 0;`. This starting rate is then used to initiate the position function `_addManagedLoanDetails`. The collateral is stored in `fundingLocker`, while the loan share is borrowed from `lendingProtocol`. After funding, shares are minted to the borrowerâ€™s account. A timestamp is set for partial loans, and an action (settlement or initial investment) is updated in `loanData`. If loans are fully funded,  `fundingCycleNumber` is also appended. The position state then moves to the `Open` state.