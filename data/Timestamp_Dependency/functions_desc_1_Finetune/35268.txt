### Type of Smart Contract
Token Crowdsale Contract

### Purpose of the Contract
To facilitate the sale of project tokens in exchange for SKALE token.

### Working Process of the Contract
1. The contract specifies a deadline (`END`) after which the sale is no longer active.
2. Investors send SKALE tokens to the contract and choose a beneficiary address to receive the project tokens.
3. The received SKALE tokens are immediately transferred to the Crowdsale wallet.
4. After the sale ends or the goal is reached, project tokens can be withdrawn from the contract using special functions.
5. Unsold tokens are returned to the Crowdsale wallet owner.

### Key Functions
1. `CONTSKCrowdsale(uint256 _rate, address _wallet, address _tokenAddress)`
   - Constructor to set rate, wallet, and token contract address.

2. `buyTokens(address beneficiary) payable`
   - Public override function to buy project tokens with SKALE tokens.
   - Checks if beneficiary and value are valid, the sale is active, and transfers SKALE tokens to the contract.
   - Transfers received SKALE tokens to the wallet.

3. `withdraw()`
   - Allows the owner to withdraw unsold tokens after the sale ends.
   - Transfers the remaining project tokens from the buy method to the Crowdsale wallet if `END` time has passed.

4. `withdrawUnsoldToken(uint256 _unsoldAmount)`
   - Allows the owner to withdraw a specific amount of unsold tokens.
   - Returns unsold tokens, reducing the amount of project tokens available for withdrawal.

### Token Management
- The contract uses `rate` to convert incoming SKALE tokens to project tokens.
- Project tokens are minted for the Crowdsale wallet when SKALE tokens are received.
- Unsold tokens can be withdrawn by the owner from the contract after the sale ends or the goal is reached.