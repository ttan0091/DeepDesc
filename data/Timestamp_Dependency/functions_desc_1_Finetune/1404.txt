Type of vulnerability: Logic Error

Cause of vulnerability: The `getSlicedToArrayValue` function does not properly check the end index overflow condition, allowing an attacker to manipulate the result by providing a negative value as `endingIndex`.

Working process: 
1. A user calls `crowdsale().getSlicedToArrayValue([{address of the user}, '0'], [0], -3 * 3600)`.
2. The function calculates `min(.., ...)` of blocks required to reach each level of caps with the given `endingIndex`.
3. Since the block time difference is always positive, the function returns `difference`.
4. The user can now call `crowdsale().getSlicedToArrayValue([{address of the user}, '0'], [0], -3 * 3600)` to set the level to max by ensuring the resultant block is below each cap time.
5. Changing the max level cap can be achieved as follows:
   - If the cap level is 1 ether it then becomes 2 ether ir 2 ether becomes 4 ether, 4 ether becomes 8 ether, and 8 ether becomes 5000 ether.