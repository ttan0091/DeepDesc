Type of vulnerability: Design Flaw in Staking Mechanism
Cause of vulnerability: Ability to Unstake and Immediately Re-Stake to Double Rewards
Explanation of vulnerability: 
- The `vestedBalanceForAmount` function in the Staking contract calculates vested rewards based on the remaining vesting time multiplied by the reward rate.
- An attacker can unstake their tokens when their vested rewards are high, then immediately re-stake the tokens to reset the vesting time and double/triple their rewards, as the new vesting time is calculated from the current block timestamp.
- This manipulation allows the attacker to receive rewards for the same tokens both before and after the unstake transaction, effectively doubling or tripling their earned rewards.
- The code does not prevent this exploit because it rewards based on the current vesting time, which can be reset by unstaking and staking again.
Fix for the vulnerability: 
- Implement a Last-In-First-Out (LIFO) mechanism or a penalty-based mechanism to disincentivize unstaking and restaking, preventing users from resetting their vesting time.