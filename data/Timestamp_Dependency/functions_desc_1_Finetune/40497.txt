Type of vulnerability: State Inheritance Attack
Cause of vulnerability: The `turringBomb` contract inherits state variables and public functions from the `tickingBomb` contract, which allows an attacker to manipulate the state of the inherited contract (`tickingBomb`) through the actions of the parent contract (`turringBomb`).
Working process of the exploit: An attacker can call the `newRound()` function in the `turringBomb` contract, which then calls the inherited `newRound()` function from `tickingBomb`. This inherited function resets the teams, causing all teams to lose access to funds locked in the `tickingBomb` contract.
Proposed solution: Modify the `newRound()` function in `tickingBomb` to prevent unauthorized calls or add access control to ensure only the intended contract can call the function.