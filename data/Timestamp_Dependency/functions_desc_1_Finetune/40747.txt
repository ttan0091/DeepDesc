Type of contract: InclusiveRoleManager
Purpose: The InclusiveRoleManager is designed to manage the access control for the Ambrosus Network and offers a flexible way to manage permissions with complex inclusion/exclusion criteria.
Working process: The contract allows for the registration of Roles (custom role definitions) and provides functions to add and remove RoleHolders (entity addresses). Role definitions include the list of allowed RoleHolders and a set of other Roles that can nominate new holders. A RoleHolder is allowed to nominate a new RoleHolder if it is included itself or if it holds a nomination in one of the nominating roles.
Key functions and processes:
1. `registerRole(...)`: Defines a new role with its name, list of at least one initial approved nominee, and one or more nominating roles.
2. `addRoleHolder(...)`: Adds a new entity as an approved nominee to the Role, with the condition that the caller has a nomination extra in at least one of the nominating roles.
3. `removeRoleHolder(...)`: Removes an entity from the list of approved nominees if the calling entity has an extra nomination in at least one of the nominating roles.
4. `registerAdmin()`: A function that allows an entity to become a network admin if the contract version is included in the payload of the initial transaction.
5. `RenokeAdmin()`: This function removes an entity's admin privileges.
6. `CurrentRoleHolders()`: Shows the current role holders for a particular role.
7. `CurrentRoleHolder()`: Checks if the provided entity is considered a RoleHolder.