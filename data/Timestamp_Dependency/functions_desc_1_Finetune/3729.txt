Type of vulnerability: Owner-controlled parameter manipulation
Cause of vulnerability: Owner can set a `openingTime` in the future, allowing for the calculation of `limitPeriod` to be based on an arbitrary point in time selected by the owner, potentially allowing for movements in volatility in between. This can lead to an inflated peg amount returned for regular static durations, since the `getLimitPeriod` function uses `block.timestamp` directly for calculations without any additional checks.
Impact of vulnerability: Users can be tricked into depositing tokens when the control side does not have enough collateral, leading to losses if the system goes into the redemption state.
Proposed improvement: Implement checks in the `getLimitPeriod` function to ensure that the `openingTime` is in the past and not too far in the future, to prevent potential attacks where the calculation starts from a manipulated point in time.