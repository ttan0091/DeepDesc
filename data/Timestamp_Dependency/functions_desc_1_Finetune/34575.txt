Type of vulnerability: Front Running
Cause of vulnerability: The `InsightsNetwork1.register` function locks the token recipient's balance for one year, attracting awareness and potentially enabling attackers to front-run the transaction.
Working of the attack: An attacker monitors the Ethereum mempool for the `InsightsNetwork1.register` transaction and attempts to execute another front-running transaction to trade the tokens to destabilize the peg before the `register` transaction is confirmed.
Mitigation strategy: The `register` function can be designed to lock the token holder's balance in a trustless way, allowing the recipent to claim the ETH collateral even if the issuer fails.