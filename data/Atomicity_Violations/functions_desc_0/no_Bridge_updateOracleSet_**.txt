This code defines an internal function named updateOracleSet, which is responsible for updating the set of oracles in the contract. The function takes two parameters: an integer oracleSetHash and an array of addresses newSet. Hereâ€™s a detailed explanation of how this function works:

1. The function begins by declaring a variable oldSetLen to store the length of the current set of oracles (oraclesSet).

2. The first loop iterates over the current set of oracles (oraclesSet) and sets the isOracle mapping value to false for each oracle address. This effectively removes all oracles from the current set.

3. The oraclesSet is then updated with the new set of oracle addresses (newSet).

4. A new variable newSetLen is declared to store the length of the updated set of oracles (oraclesSet).

5. The second loop iterates over the new set of oracle addresses (newSet) and performs the following actions:
    Checks if the oracle address is not already present in the isOracle mapping to avoid duplicates using the require statement.
    Sets the isOracle mapping value to true for each oracle address in the new set.

6. Finally, the function emits an event NewOracleSet with the oracleSetHash and the updated newSet to notify external parties about the change in the oracle set.

In summary, the updateOracleSet function updates the set of oracles by clearing the existing set, adding the new set, and ensuring that there are no duplicate oracle addresses in the updated set.