This code defines a public view function named balanceOfAt, which is used to retrieve the balance of a token at a specific block number. The function accepts two parameters: _owner (the address of the token owner) and _blockNumber (the block number at which the balance is requested). Hereâ€™s a detailed explanation of how this function works:

The function first checks if the balances mapping for the _owner address is empty or if the first entry in the balances array for that address has a fromBlock value greater than the _blockNumber. This check is used to handle the scenario where the balance of the token is requested before any checkpoint was created for that token. In such cases, the function needs to query the parentToken.balanceOfAt function at the genesis block for that token to retrieve the initial balance.

If the above condition is met, the function checks if the parentToken address is not zero. If it is not zero, it calls the parentToken.balanceOfAt function for the _owner address at either the _blockNumber or the parentSnapShotBlock, whichever is smaller. This is done to retrieve the initial balance of the token from the parent token if it exists. If the parentToken address is zero, indicating that the token has no parent, the function returns a balance of 0.

If the initial balance retrieval is not required, the function calls the getValueAt function with the balances[_owner] array and the _blockNumber to retrieve the expected balance of the token at the specified block number during normal situations.

In summary, the balanceOfAt function handles two scenarios: retrieving the initial balance of the token from the parent token if no checkpoints exist for the token, and retrieving the expected balance of the token at a specific block number during normal situations.