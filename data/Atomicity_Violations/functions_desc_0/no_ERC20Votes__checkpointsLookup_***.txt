This code defines a private view function named _checkpointsLookup that performs a binary search on a collection of Checkpoint structs to find the earliest checkpoint taken after a specified blockNumber. Here's a detailed explanation of how this function works:

The function signature includes the parameters ckpts (an array of Checkpoint structs) and blockNumber (the target block number). The function returns a uint256 value representing the number of votes at the found checkpoint.

The function initializes two variables, low and high, to keep track of the search range within the ckpts array. The length variable stores the length of the ckpts array.

If the length of the ckpts array is greater than 5, the function calculates the mid index using the square root of the array length. This initial check helps narrow down the search range based on the comparison of the fromBlock value of the checkpoint at index mid with the target blockNumber.

The binary search algorithm is then executed within a while loop. The loop iterates as long as the low index is less than the high index. In each iteration, the function calculates the mid index as the average of low and high and compares the fromBlock value of the checkpoint at index mid with the target blockNumber.

Based on the comparison result, the search range is adjusted by updating either the low or high index. If the fromBlock value of the checkpoint at index mid is greater than the target blockNumber, the high index is updated to mid. Otherwise, the low index is updated to mid + 1.

Once the loop exits (when low is no longer less than high), the function returns the number of votes at the checkpoint found. If the high index is 0, indicating that no checkpoint was found after the target blockNumber, the function returns 0. Otherwise, it returns the number of votes at the checkpoint located at index high  1.

Overall, this function efficiently searches for the earliest checkpoint taken after a specified block number using a binary search algorithm, optimizing the lookup process within the ckpts array.