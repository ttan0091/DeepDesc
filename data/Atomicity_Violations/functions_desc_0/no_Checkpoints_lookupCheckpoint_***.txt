This code defines an internal view function named lookupCheckpoint, which performs a binary search on a storage array of checkpoint values (ckpts) to find the earliest checkpoint taken after a specified block number. Hereâ€™s a detailed explanation of how this function works:

The function signature includes the parameters ckpts (an array of uint128 values) and blockNumber (a uint256 value representing the target block number). The function returns a uint96 value, which represents the checkpoint value found.

The function starts by checking if the specified blockNumber is less than the current block number using the require statement. If the condition is not met, an error message is thrown indicating that the block has not yet been determined.

The function initializes two variables, high and low, to represent the upper and lower bounds of the search range within the ckpts array. The binary search algorithm is then implemented using a while loop that continues as long as low is less than high.

Within each iteration of the loop, the function calculates the middle index mid of the current search range using the Math.average function. The block number corresponding to the checkpoint at index mid is decoded using the decodeBlockNumber function and stored in the variable midBlock.

Based on the comparison between midBlock and the target blockNumber, the search range is adjusted accordingly:
 If midBlock is greater than the target blockNumber, the search range is narrowed to the lower half by updating high to mid.
 If midBlock is less than or equal to the target blockNumber, the search range is narrowed to the upper half by updating low to mid + 1.

This process continues until the search range is reduced to a single value (when low equals high). At this point, the function checks if the resulting index high is equal to 0. If it is, the function returns 0, indicating that no checkpoint was found after the specified blockNumber. Otherwise, the function decodes and returns the value of the checkpoint at index high  1 using the decodeValue function.

In summary, the lookupCheckpoint function efficiently searches for the earliest checkpoint taken after a given block number in the ckpts array using a binary search algorithm, providing a reliable and optimized way to retrieve checkpoint values based on block numbers.