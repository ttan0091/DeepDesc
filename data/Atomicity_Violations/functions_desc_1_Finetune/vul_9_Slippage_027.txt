Type of Contract: Perpetual Protocol Liquidator
Purpose of the Contract: To receive liquidation rewards for liquidating trader positions that breach their margin limits.
Design Pattern Used: The use of a liquidator contract to inherit from the PositionOwner to override the liquidate function, gaining access to the liquidated trader's balances.

Ownership: The liquidation rewards are sent to the user who executes the liquidation, in this case the LiquidationRewardSender user. The liquidator earns 50% of the profit from liquidating a trader, less protocol fees, and the remaining 50% is burned or sent to the dev wallet. 

Execution Flow: 
1. The Liquidator waits for a trader position to be liquidated, which must be at least 0.5 lots.
2. When a position is liquidated, the Liquidator receives margin wishes (the margin that the liquidated account should have had after liquidation), lockedPnl (all outstanding P&L of the position), balance (the left token String not used yet), and coupon(locked nominal value).
3. The Liquidator then computes liquidation rewards, which are 50% of the profit from the liquidation.
4. The Liquidator updates the liquidated position with their latest balances.
5. It then performs a transfer of the trader's balances to the Liquidator.
6. After the liquidation, the trader's account state should be set to zero.