[Execution Flow]:
This code defines a private function named _functionCallWithValue, which is designed to execute a function call on a given target contract with specified data and value. The function accepts four parameters: an address (target), a byte array (data), a uint256 (weiValue), and a string (errorMessage). Hereâ€™s a detailed explanation of how this function works:

The function signature includes the parameters target, data, weiValue, and errorMessage. _functionCallWithValue is a private function, meaning it can only be called within the contract itself. The function accepts four parameters: target (the address of the contract to call), data (the encoded function call data), weiValue (the amount of wei to send with the call), and errorMessage (a custom error message to revert with if the call fails). The function returns a bytes memory variable, which will store the return data from the call if it is successful.

The function begins with a require statement that checks if the target address is a contract. This is done by calling the isContract function, which presumably checks if the address has code. If the target is not a contract, the function reverts with the message "Address: call to noncontract".

Next, the function performs a lowlevel call to the target contract using the call method. This method is used to send ether and execute code in the context of the target contract. The call is made with the specified weiValue and data. The result of the call is stored in two variables: success (a boolean indicating whether the call was successful) and returndata (a byte array containing the return data from the call).

If the call is successful (success is true), the function returns the returndata. If the call fails (success is false), the function checks if there is any returndata (i.e., if returndata.length is greater than 0). If there is returndata, the function uses inline assembly to revert with the revert reason contained in the returndata. This is done by loading the size of the returndata and then reverting with the returndata itself.

If there is no returndata, the function reverts with the custom errorMessage provided as a parameter.

