Type of vulnerability: Incorrect Pointer Calculation
Cause of vulnerability: The function pointerToBytes incorrectly calculates the memory pointer, leading to the incorrect copying of data in memory.
Explanation of function pointerToBytes: The function is designed to copy a specific length of data from an allocated memory address to another memory location. It calculates the memory pointer incorrectly, causing the data to be copied from an incorrect location in memory.
Effect of vulnerability: The vulnerability results in the inability to stake and unstake tokens, as well as incorrect StakedToken Length and Total Amount in Pool Metrics.
Initial Breakpoint Analysis: The issue stems from the memcpy function, which is used to copy data between memory locations. The incorrect calculation of the memory pointer in the pointerToBytes function leads to the wrong memory address being used in the memcpy call.
Cause of Security Misconfiguration: The security misconfiguration arises from the usage of pointerToBytes function without properly ensuring its correct operation. The function is written to convert a uint256 value to a fixedsize byte array, but due to the incorrect pointer calculation, it does not work as intended.