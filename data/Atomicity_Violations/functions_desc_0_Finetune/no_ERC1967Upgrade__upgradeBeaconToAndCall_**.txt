Type of vulnerability: Access Control Bypass
Cause of vulnerability: Incomplete access control in the _upgradeBeaconToAndCall function, allowing unauthorized users to manipulate the upgrader argument of candidate strategies.
Working process of the exploit: An attacker, through unauthorized interactions or extended flash loans/manipulations, can vote or stake on a malicious or controlled strategies, causing transfers of stablecoins to the strategyâ€™s vault. Then, the attacker can call nominateNewTreasuryStrategist with a malicious strategy, and forcefully upgrade it with a modified candidatedowned strategy (using the exploit below). This allows the attacker to whitelist themselves during the upgrade, potentially leading to an unlimited vault withdrawal channel(localStorage.vault.withdrawalQueue()), bankrupting the vault.
Risk posed by the vulnerability: Unauthorized critical state updates, denial of service, stolen accounting risk, governance votes by stolen voting power, and lost user funds.
Vectors of attack: Flash loans to capture ongoing strategists, controlling and voting on malicious strategies, unauthorized transactions for critical state changes, and forcefully upgrading attackers' strategies to whitelist their own controlled strategies.