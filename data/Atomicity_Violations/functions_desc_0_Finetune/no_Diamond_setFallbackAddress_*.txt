Type of vulnerability: Inconsistent Authentication Issue
Cause of vulnerability: The setFallbackAddress function in the DiamondBaseFacet allows a malicious user to gain access to the usermodifiable state. This function does not require ownerOrApprovedAll or ownerOrDomainSeparator authorization, which is present in other utility functions within the DiamondBaseFacet to protect the integrity of state modifications by a designated account.
Working process of exploitation:
1. A WAR token holder (victim) approves the DiamondCut facet to an attacker's contract.
2. The attacker adds the malicious FacetContract (crafted to drain the balance of the contract) to the diamond.
3. The attacker calls MarketplaceDiamond.setFallbackAddress(owner) to set the fallback address to the attacker's address.
4. The victim's weapon Warhammer NFT is bought through an intermediary contract (the Marketplace contract) by the attacker using WAR tokens.
5. ERC2981TransactionHook before token transfer checks that:
     The MarketplaceDiamondFactory's configuration contains an ERC2981Values chainagnostic configuration.
     The chain OnwerandardDomainSeparator corresponds with token.owner.
     If the token was bought using a marketplace in the last 38 blocks, the sender is allowed to use free energy.