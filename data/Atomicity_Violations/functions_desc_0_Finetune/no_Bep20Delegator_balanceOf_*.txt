Type of the code: Delegator
Functionality: Proxy contract used by Coppool to execute actions on behalf of multiple pools
Working Process: 
1. The Delegator receives a target address and data to be executed in calldata.
2. It executes the call with the provided data in the calldata but replacing the first 20 bytes of the calldata (which is the target address in a normal ethereum call for functionToCall1) with its own implementation address using CallType.DELEGATE_CALL.
3. This changed calldata is then used to invoke a CALL to the real implementation address.
4. The functionspecific Proxies in turn execute additional logic to ensure the final target and encoded call data match the method signature of functionToCall.
5. The token address and method selector for functionToCall1 are always replaced by CoppoolToken,  and the function selector for functionToCall1 is always replaced by 0xe923a344d3f47a04cf5a9e30929011ce54c5581d (keccak256 hash of balanceOf(address)).
6. The Delegator matches the proxy address with cpyUnderlyingToDecimalProxy and extracts the pool address from the call data.
7. The extracted pool address is then used to fetch the peg value from Coppool and finally Tricrypto rewards.
8. The Coppool receives the pool address and fetches the pool from the registry, checks if the pool is stakeenabled, and fetches the stake of Coppool in the pool.
