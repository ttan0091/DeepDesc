Type of vulnerability: Timing Attack and Frontrunning
Cause of vulnerability: The contract uses now (block.timestamp) to determine when an investor can deposit and receive tokens. This allows an attacker to predict when the contract will become operational and frontrun legitimate investors to get more tokens.
Working process of vulnerability: 
1. An attacker (A) monitors the contract's state and suspects that it will become operational soon.
2. When the contract is close to becoming operational based on now (block.timestamp), A calls the invest function with a large amount, attempting to be the first in line to receive tokens.
3. If A's transaction is included in a block that pushes the contract's state to be operational, A will receive a disproportionately large amount of tokens.
4. Legitimate users who try to deposit after A will receive significantly fewer tokens because the contract's state has been updated, and the available token supply has been significantly diminished.