Type of the code: Solidity Smart Contract
Main purpose of the code: To facilitate crosschain transfer of tokens through the use of pegged tokens
Working process of the code: 
1. swapViaUniswap function swaps native tokens on various chains with peg tokens on Ethereum Bsc with respect to ratio
2. profitFee function credits profit or cost incurred while liquidating peg tokens due to adverse movement in real time to users
3. swapToPegDependency function moves part of native tokens into peg, retaining some native gwei for gas
4. needSwapPegToNaitve Makes sure reserve of native token we care doesn't overflow swapToPegDependency is used to swap back native tokens to keep peg
5. normalizePegBalanace Makes sure sumTokensInNative and sumTokensInPeg are different not too much after last swapToPegDependency if delta is too much, use peg to swap for native. The reverse is needed
6. getCurrentStopLosses Gets amount of all sumTokensInNative and sumTokensInPeg vested at, stored from all biglly contracts after last optimization(Rewards +Claimed)