To explain the working process of the renounceOwnership() function in the context of an ERC2981 compatible contract, consider the general ownership structure and ERC2981 royaltyrelated mechanisms.

1. Ownership Structure:
    The NFT contract has an owner (initially set to the deployer of the contract).
    The owner can be changed via the transferOwnership() function.
    When the transferOwnership(newOwner) function is called, the ownership is transferred, and the previous owner no longer has any control over the contract.

2. ERC2981 Specifics:
    The owner of an NFT, through the NFT contract, is key in royalty distribution and informed of new sales.
    Setting royalties requires the contract owner (via setRoyalties()) unless rights are renounced.

3. Process of Renunciation:
    Initially, the contract deploys with the creator as the owner.
    The creator/owner can set the royalty information via functions such as setRoyalties().
    If the owner decides no longer to be involved in the contract, they can call renounceOwnership().
    The renounceOwnership() function effectively transfers the ownership to the zero address, rendering the contract ownerless.
    Once the contract is ownerless, no creator or original owner can regain control. This is important for two reasons:
      It ensures that creators/owners cannot interfere with future sales once their NFTs are sold.
      It allows a community to control ownership of the contract through governance if desired.

4. Impact on ERC2981 Royalties:
    When ownership is renounced, the original contract creator can no longer access and change royalties if needed. 
    This ensures that the initial royalty settings remain intact even after the creator has renounced ownership.
    Any potential changes to royalties after renouncing ownership would need to be handled through governance proposals if a governance system is implemented.
    If no governance system is in place, the original royalty settings become immutable.