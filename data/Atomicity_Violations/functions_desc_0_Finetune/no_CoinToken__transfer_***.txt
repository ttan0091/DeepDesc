Type of contract: ERC20 token with additional features for automated market making (AMM) and bridge functionality

Main function of the contract: To serve as a utility token that benefits from a price floor due to fees and liquidity being locked in Uniswap, while also allowing users to bridge the token to a different network for crosschain operations. 

Working process of the contract:
1. Initial Setup: The contract is deployed with an initial supply of tokens, a total fee on transactions (sell fee) is set and a liquidity pool is created on Uniswap.
2. Dev Transactions: Certain transactions are restricted to prevent frontrunning or bot manipulation during the early phase of the token launch. These restrictions are gradually lifted over time.
3. Automatic Liquidity Pool Management: A portion of the fees (sell fee) is added to the liquidity pool to create a price floor for the token. This is managed by the swapAndLiquify and addLiquidity functions.
4. Token Bridging: Users can bridge their tokens to another network using the bridgeTokens function, which interacts with the ETHBridge contract to lock tokens on Ethereum and mint corresponding tokens on the BSC network (or vice versa).
5. Maintenance Functions: The contract includes functions for owner actions, like burning tokens, transferring contract balance to the owner, changing fees, and others for ongoing maintenance.
6. SafeMath & Helper Functions: The contract uses SafeMath for arithmetic operations and includes helper functions like sumTokensInPeg to calculate the total value of tokens.