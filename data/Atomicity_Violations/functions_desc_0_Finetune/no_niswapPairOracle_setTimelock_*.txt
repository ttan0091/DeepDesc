Type of vulnerability: Function Swapping
Cause of vulnerability: Ownership control allowing the owner to set the timelock and recovery functions and then swapping the timelock_address to upgrade the contract
Effect of vulnerability: The controller could set the timelock only to replace the bytecode of the contract and thus completely controlling the functioning of the protocol. They could remove the ability of the liquidity providers to withdraw their funds and potentially steal all the LP tokens. 
Solution to vulnerability: Have strict requirements specifying a period of time that the timelock must be set and a minimum of pending debt by not allowing a controller to interfere until the debt is high. Also, implement the withdrawTimelock function to ensure funds can always be withdrawn by a user after the owner starts interaction with the timelock.